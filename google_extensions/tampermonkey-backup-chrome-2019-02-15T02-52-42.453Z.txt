{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"智能划词翻译","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["dict.youdao.com","translate.google.cn"],"orig_excludes":[],"orig_includes":["https://*/*","**"],"orig_matches":["http://*/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1546534568896,"data":{}},"enabled":true,"position":1,"file_url":"https://greasyfork.org/scripts/35251-%E6%99%BA%E8%83%BD%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/code/%E6%99%BA%E8%83%BD%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91.user.js","uuid":"1230abd0-9675-482b-960a-967131942c2b","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDmmbrog73liJLor43nv7vor5EKLy8gQG5hbWVzcGFjZSAgICBodHRwczovL2dyZWFzeWZvcmsub3JnL3poLUNOL3VzZXJzLzE1MDU2MAovLyBAdmVyc2lvbiAgICAgIDEuMy4zCi8vIEBkZXNjcmlwdGlvbiAg5YiS6K+N57+76K+RLOiHquWKqOWIh+aNouiwt+atjOe/u+ivkeWSjOaciemBk+ivjeWFuAovLyBAYXV0aG9yICAgICAgIOeUsOmbqOiPsgovLyBAbWF0Y2ggICAgICAgIGh0dHA6Ly8qLyoKLy8gQGluY2x1ZGUgICAgICBodHRwczovLyovKgovLyBAaW5jbHVkZSAgICAgICoqCi8vIEBydW4tYXQgZG9jdW1lbnQtZW5kCi8vIEBjb25uZWN0ICAgICAgZGljdC55b3VkYW8uY29tCi8vIEBjb25uZWN0ICAgICAgdHJhbnNsYXRlLmdvb2dsZS5jbgovLyBAZ3JhbnQgICAgICAgIEdNX3htbGh0dHBSZXF1ZXN0Ci8vID09L1VzZXJTY3JpcHQ9PQoKKGZ1bmN0aW9uICgpIHsKICAgICd1c2Ugc3RyaWN0JzsKCiAgICB2YXIgeW91ZGFvVXJsID0gJ2h0dHA6Ly9kaWN0LnlvdWRhby5jb20vanNvbmFwaT94bWxWZXJzaW9uPTUuMSZqc29udmVyc2lvbj0yJnE9JzsKICAgIHZhciBnb29nbGVVcmwgPSAnaHR0cHM6Ly90cmFuc2xhdGUuZ29vZ2xlLmNuL3RyYW5zbGF0ZV9hL3NpbmdsZT9jbGllbnQ9Z3R4JmR0PXQmZHQ9YmQmZGo9MSZzb3VyY2U9aW5wdXQmaGw9emgtQ04mc2w9YXV0byZ0bD0nOwogICAgdmFyIGljb25TaXplID0gMjQ7CiAgICB2YXIgdHJhbnNsYXRpb25UZXN0U2l6ZSA9IDE2OwogICAgdmFyIGljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICAgIHZhciBzdHlsZSA9ICcnICsKICAgICAgICAnd2lkdGg6MjRweDsnICsKICAgICAgICAnaGVpZ2h0OjI0cHg7JyArCiAgICAgICAgJ21hcmdpbjo0cHghaW1wb3J0YW50OycgKwogICAgICAgICcnOwogICAgaWNvbi5pbm5lckhUTUwgPSAnJyArCiAgICAgICAgJzxzdmcgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBzdHlsZT0iJyArIHN0eWxlICsgJyIgIndpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld0JveD0iMCAwIDc2OCA3NjgiPicgKwogICAgICAgICc8cGF0aCBkPSJNNjcyIDY0MC41di00MTdjMC0xOC0xMy41LTMxLjUtMzEuNS0zMS41aC0yODJsMzcuNSAxMjloNjEuNXYtMzNoMzQuNXYzM2gxMTUuNXYzM2gtNDAuNWMtMTAuNSA0MC41LTMzIDc5LjUtNjEuNSAxMTIuNWw4NyA4NS41LTIyLjUgMjQtODctODUuNS0yOC41IDI4LjUgMjUuNSA4OC41LTY0LjUgNjQuNWgyMjVjMTggMCAzMS41LTEzLjUgMzEuNS0zMS41ek00NDcgMzg4LjVjNy41IDE1IDE5LjUgMzQuNSAzNiA1NCAzOS00Ni41IDQ5LjUtODguNSA0OS41LTg4LjVoLTEyNy41bDEwLjUgMzQuNWgzMS41ek00MjMgNDEyLjVsMTkuNSA3MC41IDE4LTE2LjVjLTE1LTE2LjUtMjctMzQuNS0zNy41LTU0ek0zNTUuNSAzMzljMC03LjM4MS0wLjIxMS0xNi45MjEtMy0yMi41aC0xMjZ2NDkuNWg3MC41Yy00LjUgMTkuNS0yNCA0OC02Ny41IDQ4LTQyIDAtNzYuNS0zNi03Ni41LTc4czM0LjUtNzggNzYuNS03OGMyNCAwIDM5IDEwLjUgNDggMTkuNWwzIDEuNSAzOS0zNy41LTMtMS41Yy0yNC0yMi41LTU0LTM0LjUtODctMzQuNS03MiAwLTEzMC41IDU4LjUtMTMwLjUgMTMwLjVzNTguNSAxMzAuNSAxMzAuNSAxMzAuNWM3My41IDAgMTI2LTUyLjUgMTI2LTEyNy41ek02NDAuNSAxNjAuNWMzNC41IDAgNjMgMjguNSA2MyA2M3Y0MTdjMCAzNC41LTI4LjUgNjMtNjMgNjNoLTI1Ni41bC0zMS41LTk2aC0yMjVjLTM0LjUgMC02My0yOC41LTYzLTYzdi00MTdjMC0zNC41IDI4LjUtNjMgNjMtNjNoMTkybDI4LjUgOTZoMjkyLjV6IiBzdHlsZT0iZmlsbDojM2U4NGY0OyI+PC9zdmc+JyArCiAgICAgICAgJyc7CiAgICBpY29uLnNldEF0dHJpYnV0ZSgnc3R5bGUnLCAnJyArCiAgICAgICAgJ3dpZHRoOjMycHghaW1wb3J0YW50OycgKwogICAgICAgICdoZWlnaHQ6MzJweCFpbXBvcnRhbnQ7JyArCiAgICAgICAgJ29wYWNpdHk6IDAuMzsnICsKICAgICAgICAnZGlzcGxheTpub25lIWltcG9ydGFudDsnICsKICAgICAgICAnYmFja2dyb3VuZDojZmZmIWltcG9ydGFudDsnICsKICAgICAgICAnYm9yZGVyLXJhZGl1czoxNnB4IWltcG9ydGFudDsnICsKICAgICAgICAnYm94LXNoYWRvdzo0cHggNHB4IDhweCAjODg4IWltcG9ydGFudDsnICsKICAgICAgICAncG9zaXRpb246YWJzb2x1dGUhaW1wb3J0YW50OycgKwogICAgICAgICd6LWluZGV4OjIxNDc0ODM2NDchaW1wb3J0YW50OycgKwogICAgICAgICcnKTsKICAgICAgICAKICAgIC8vIOa3u+WKoOe/u+ivkeWbvuagh+WIsCBET00KICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5hcHBlbmRDaGlsZChpY29uKTsKICAgIC8vIOm8oOagh+S6i+S7tu+8mumYsuatoumAieS4reeahOaWh+acrOa2iOWksQogICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgZnVuY3Rpb24gKGUpIHsKICAgICAgICBpZiAoZS50YXJnZXQgPT0gaWNvbiB8fCAoZS50YXJnZXQucGFyZW50Tm9kZSAmJiBlLnRhcmdldC5wYXJlbnROb2RlID09IGljb24pIHx8IChlLnRhcmdldC5wYXJlbnROb2RlLnBhcmVudE5vZGUgJiYgZS50YXJnZXQucGFyZW50Tm9kZS5wYXJlbnROb2RlID09IGljb24pKSB7Ly8g54K55Ye75LqG57+76K+R5Zu+5qCHCiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgICB9CiAgICB9KTsKICAgIC8vIOmAieS4reWPmOWMluS6i+S7tu+8muW9k+eCueWHu+W3sue7j+mAieS4reeahOaWh+acrOeahOaXtuWAme+8jOmakOiXj+e/u+ivkeWbvuagh+WSjOe/u+ivkemdouadv++8iOatpOaXtua1j+iniOWZqOWKqOS9nOaYr++8mumAieS4reeahOaWh+acrOW3sue7j+WPlua2iOmAieS4reS6hu+8iQogICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigic2VsZWN0aW9uY2hhbmdlIiwgZnVuY3Rpb24gKCkgewogICAgICAgIGlmICghd2luZG93LmdldFNlbGVjdGlvbigpLnRvU3RyaW5nKCkudHJpbSgpKSB7CiAgICAgICAgICAgIGljb24uc3R5bGUuZGlzcGxheSA9ICdub25lJzsKICAgICAgICAgICAgc2VydmVyLmNvbnRhaW5lckRlc3Ryb3koKTsKICAgICAgICB9CiAgICB9KTsKICAgIC8vIOm8oOagh+S6i+S7tu+8mumYsuatoumAieS4reeahOaWh+acrOa2iOWkse+8m+aYvuekuuOAgemakOiXj+e/u+ivkeWbvuaghwogICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgaWYgKGUudGFyZ2V0ID09IGljb24gfHwgKGUudGFyZ2V0LnBhcmVudE5vZGUgJiYgZS50YXJnZXQucGFyZW50Tm9kZSA9PSBpY29uKSB8fCAoZS50YXJnZXQucGFyZW50Tm9kZS5wYXJlbnROb2RlICYmIGUudGFyZ2V0LnBhcmVudE5vZGUucGFyZW50Tm9kZSA9PSBpY29uKSkgey8vIOeCueWHu+S6hue/u+ivkeWbvuaghwogICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZXJ2ZXIucmVuZGVyZWQubGVuZ3RoOyBpKyspIHsvLyDngrnlh7vkuobnv7vor5HlhoXlrrnpnaLmnb8KICAgICAgICAgICAgaWYgKGUudGFyZ2V0ID09IHNlcnZlci5yZW5kZXJlZFtpXSkKICAgICAgICAgICAgICAgIHJldHVybjsvLyDkuI3lho3liJvlu7rnv7vor5Hlm77moIcKICAgICAgICB9CgogICAgICAgIHZhciB0ZXh0ID0gd2luZG93LmdldFNlbGVjdGlvbigpLnRvU3RyaW5nKCkudHJpbSgpOwogICAgICAgIGlmICh0ZXh0ICYmIGljb24uc3R5bGUuZGlzcGxheSA9PSAnbm9uZScpIHsKICAgICAgICAgICAgaWNvbi5zdHlsZS50b3AgPSBlLnBhZ2VZICsgMTIgKyAncHgnOwogICAgICAgICAgICBpY29uLnN0eWxlLmxlZnQgPSBlLnBhZ2VYICsgJ3B4JzsKICAgICAgICAgICAgaWNvbi5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsKICAgICAgICB9IGVsc2UgaWYgKCF0ZXh0KSB7CiAgICAgICAgICAgIGljb24uc3R5bGUuZGlzcGxheSA9ICdub25lJzsKICAgICAgICAgICAgc2VydmVyLmNvbnRhaW5lckRlc3Ryb3koKTsvLyDplIDmr4Hnv7vor5HlhoXlrrnpnaLmnb8KICAgICAgICB9CiAgICB9KTsKICAgIC8vIOe/u+ivkeWbvuagh+eCueWHu+S6i+S7tgogICAgaWNvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgdmFyIHRleHQgPSB3aW5kb3cuZ2V0U2VsZWN0aW9uKCkudG9TdHJpbmcoKS50cmltKCk7CiAgICAgICAgaWYgKHRleHQpIHsKICAgICAgICAgICAgaWNvbi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICAgICAgICBzZXJ2ZXIuY29udGFpbmVyRGVzdHJveSgpOy8vIOmUgOavgee/u+ivkeWGheWuuemdouadvwogICAgICAgICAgICAvLyDmlrDlu7rnv7vor5HlhoXlrrnpnaLmnb8KICAgICAgICAgICAgdmFyIGNvbnRhaW5lciA9IHNlcnZlci5jb250YWluZXIoKTsKICAgICAgICAgICAgY29udGFpbmVyLnN0eWxlLnRvcCA9IGUucGFnZVkgKyAncHgnOwogICAgICAgICAgICBpZiAoZS5wYWdlWCArIDM1MCA8PSBkb2N1bWVudC5ib2R5LmNsaWVudFdpZHRoKS8vIGNvbnRhaW5lciDpnaLmnb9jc3PmnIDlpKflrr3luqbkuLoyNTBweAogICAgICAgICAgICAgICAgY29udGFpbmVyLnN0eWxlLmxlZnQgPSBlLnBhZ2VYICsgJ3B4JzsKICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgY29udGFpbmVyLnN0eWxlLmxlZnQgPSBkb2N1bWVudC5ib2R5LmNsaWVudFdpZHRoIC0gMzUwICsgJ3B4JzsKICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjb250YWluZXIpOwogICAgICAgICAgICBzZXJ2ZXIucmVuZGVyZWQucHVzaChjb250YWluZXIpOwoKICAgICAgICAgICAgaWYoaXNDaGluYSh0ZXh0KSkgewogICAgICAgICAgICAgICAgYWpheChnb29nbGVVcmwgKyAnZW4mcT0nLCBlbmNvZGVVUklDb21wb25lbnQodGV4dCksIDEsIGNvbnRhaW5lcik7CiAgICAgICAgICAgIH1lbHNlIHsKICAgICAgICAgICAgICAgIGlmKGNvdW50T2ZXb3JkKHRleHQpID09IDEpIHsKICAgICAgICAgICAgICAgICAgICBhamF4KHlvdWRhb1VybCwgdGV4dCwgMCwgY29udGFpbmVyKTsKICAgICAgICAgICAgICAgIH1lbHNlIHsKICAgICAgICAgICAgICAgICAgICBhamF4KGdvb2dsZVVybCArICd6aC1DTiZxPScsIGVuY29kZVVSSUNvbXBvbmVudCh0ZXh0KSwgMSwgY29udGFpbmVyKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0pOwoKICAgIGZ1bmN0aW9uIGNvdW50T2ZXb3JkKHN0cikgewogICAgICAgIHZhciB2YWx1ZSA9IFN0cmluZyhzdHIpOwoKICAgICAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoL15ccyt8XHMrJC9naSwgIiIpOyAvLyDliY3lkI7nqbrmoLzkuI3orqHnrpfkuLrljZXor43mlbAKCiAgICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9ccysvZ2ksICIgIik7Ly8g5aSa5Liq56m65qC85pu/5o2i5oiQ5LiA5Liq56m65qC8CgogICAgICAgIHZhciBsZW5ndGggPSAwOyAvLyDmm7TmlrDorqHmlbAKICAgICAgICB2YXIgbWF0Y2ggPSB2YWx1ZS5tYXRjaCgvXHMvZyk7Ly/msqHmnInljLnphY3liLDliJnov5Tlm55udWxsIAogICAgICAgIGlmIChtYXRjaCkgewogICAgICAgICAgICBsZW5ndGggPSBtYXRjaC5sZW5ndGggKyAxOwogICAgICAgIH0gZWxzZSBpZiAodmFsdWUpIHsKICAgICAgICAgICAgbGVuZ3RoID0gMTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGxlbmd0aDsKICAgIH0KCiAgICBmdW5jdGlvbiBpc0NoaW5hKHN0cil7ICAKICAgICAgICB2YXIgcmVnPS9eKFtcdTRFMDAtXHU5RkE1XXxbXHVGRjAwLVx1RkYyMF18W1x1MzAwMC1cdTMwMUNdKSskLzsgIAogICAgICAgIHJldHVybiAhIXJlZy50ZXN0KHN0cik7CiAgICB9CiAgICAvLyBhamF4IOi3qOWfn+iuv+mXruWFrOWFseaWueazlQogICAgZnVuY3Rpb24gYWpheCh1cmwsIHRleHQsIHRhcmdldCwgZWxlbWVudCwgbWV0aG9kLCBkYXRhLCBoZWFkZXJzKSB7CiAgICAgICAgaWYgKCEhIW1ldGhvZCkKICAgICAgICAgICAgbWV0aG9kID0gJ0dFVCc7CiAgICAgICAgLy8gPj4+5Zug5Li6VGFtcGVybW9ua2V56Leo5Z+f6K6/6ZeuKGEuY29tKeaXtuS8muiHquWKqOaQuuW4puWvueW6lOWfn+WQjShhLmNvbSnnmoTlr7nlupRjb29raWUKICAgICAgICAvLyDkuI3kvJrmkLrluKblvZPliY3ln5/lkI3nmoRjb29raWUKICAgICAgICAvLyDmiYDku6XvvIxHTV94bWxodHRwUmVxdWVzdOOAkOS4jeWtmOWcqOOAkWNvb2tpZei3qOWfn+iuv+mXruWuieWFqOaAp+mXrumimAogICAgICAgIC8vIOS7peS4i+iuvue9rum7mOiupGhlYWRlcnPkuI3otbfkvZznlKg8PDwKICAgICAgICB1cmwgKz0gdGV4dDsKICAgICAgICBpZiAoISEhaGVhZGVycykKICAgICAgICAgICAgaGVhZGVycyA9IHsgJ2Nvb2tpZSc6ICcnIH07CiAgICAgICAgR01feG1saHR0cFJlcXVlc3QoewogICAgICAgICAgICBtZXRob2Q6IG1ldGhvZCwKICAgICAgICAgICAgdXJsOiB1cmwsCiAgICAgICAgICAgIGhlYWRlcnM6IGhlYWRlcnMsCiAgICAgICAgICAgIGRhdGE6IGRhdGEsCiAgICAgICAgICAgIG9ubG9hZDogZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICAgICAgaWYodGFyZ2V0ID09IDApewogICAgICAgICAgICAgICAgICAgIHlvdWRhbyhyZXMucmVzcG9uc2VUZXh0LCB0ZXh0LCBlbGVtZW50KTsKICAgICAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgICAgIGdvb2dsZShyZXMucmVzcG9uc2VUZXh0LCBlbGVtZW50KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgb25lcnJvcjogZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICAgICAgZGlzcGxheWNvbnRhaW5lcigi6L+e5o6l5aSx6LSlIixlbGVtZW50KTsKICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgfQoKICAgIC8vIOaciemBk+e/u+ivkSDlvJXmk44KICAgIGZ1bmN0aW9uIHlvdWRhbyhyc3QsIHRleHQsIGVsZW1lbnQpIHsKICAgICAgICB2YXIgZWMgPSBKU09OLnBhcnNlKHJzdCkuZWM7CiAgICAgICAgaWYgKCEhZWMpIHsKICAgICAgICAgICAgdmFyIHdvcmQgPSBKU09OLnBhcnNlKHJzdCkuZWMud29yZFswXSwgaHRtbCA9ICcnLCB0ciA9ICcnOwogICAgICAgICAgICAKICAgICAgICAgICAgdmFyIHRycyA9IHdvcmQudHJzLCB1a3Bob25lID0gd29yZC51a3Bob25lLCB1c3Bob25lID0gd29yZC51c3Bob25lLCBwaG9uZSA9IHdvcmQucGhvbmU7CiAgICAgICAgICAgIHZhciBwaG9uZVN0eWxlID0gJycgKwogICAgICAgICAgICAnY29sb3I6IzlFOUU5RSFpbXBvcnRhbnQ7JyArIAogICAgICAgICAgICAnJzsKICAgICAgICAgICAgaWYgKCEhdWtwaG9uZSAmJiB1a3Bob25lLmxlbmd0aCAhPSAwKSB7CiAgICAgICAgICAgICAgICBodG1sICs9ICc8c3BhbiBzdHlsZT0iJyArIHBob25lU3R5bGUgKyAnIj7oi7FbJyArIHVrcGhvbmUgKyAnXSA8L3NwYW4+JzsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoISF1c3Bob25lICYmIHVzcGhvbmUubGVuZ3RoICE9IDApIHsKICAgICAgICAgICAgICAgIGh0bWwgKz0gJzxzcGFuIHN0eWxlPSInICsgcGhvbmVTdHlsZSArICciPue+jlsnICsgdXNwaG9uZSArICddIDwvc3Bhbj4nOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChodG1sLmxlbmd0aCAhPSAwKSB7CiAgICAgICAgICAgICAgICBodG1sICs9ICc8YnIgLz4nOwogICAgICAgICAgICB9IGVsc2UgaWYgKCEhcGhvbmUgJiYgcGhvbmUubGVuZ3RoICE9IDApIHsKICAgICAgICAgICAgICAgIGh0bWwgKz0gJzxzcGFuIHN0eWxlPSInICsgcGhvbmVTdHlsZSArICciPlsnICsgcGhvbmUgKyAnXSA8L3NwYW4+PGJyIC8+JzsKICAgICAgICAgICAgfQogICAgICAgICAgICB0cnMuZm9yRWFjaChlbGVtZW50ID0+IHsKICAgICAgICAgICAgICAgIHRyICs9IGVsZW1lbnQudHJbMF0ubC5pWzBdICsgJzxiciAvPic7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBodG1sICs9IHRyOwogICAgICAgICAgICBkaXNwbGF5Y29udGFpbmVyKGh0bWwsIGVsZW1lbnQpOwogICAgICAgIH1lbHNlIHsKICAgICAgICAgICAgYWpheChnb29nbGVVcmwgKyd6aC1DTiZxPScsIHRleHQsIDEsIGVsZW1lbnQpOwogICAgICAgIH0KICAgIH0KCiAgICAvLyDosLfmrYznv7vor5Eg5byV5pOOCiAgICBmdW5jdGlvbiBnb29nbGUocnN0LCBlbGVtZW50KSB7CiAgICAgICAgdmFyIGpzb24gPSBKU09OLnBhcnNlKHJzdCksIGh0bWwgPSAnJzsKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGpzb24uc2VudGVuY2VzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIGh0bWwgKz0ganNvbi5zZW50ZW5jZXNbaV0udHJhbnM7CiAgICAgICAgfQogICAgICAgIGRpc3BsYXljb250YWluZXIoaHRtbCwgZWxlbWVudCk7CiAgICB9CgogICAgZnVuY3Rpb24gZGlzcGxheWNvbnRhaW5lcih0ZXh0LCBlbGVtZW50KSB7CiAgICAgICAgZWxlbWVudC5pbm5lckhUTUwgPSB0ZXh0OwogICAgICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7Ly8g5pi+56S657uT5p6cCiAgICB9CgogICAgLy8g57+76K+Rc2VydmVyCiAgICB2YXIgc2VydmVyID0gewogICAgICAgIC8vIOWtmOaUvuW3sue7j+eUn+aIkOeahOe/u+ivkeWGheWuuemdouadv++8iOmUgOavgeeahOaXtuWAmeeUqO+8iQogICAgICAgIHJlbmRlcmVkOiBbXSwKICAgICAgICAvLyDplIDmr4Hlt7Lnu4/nlJ/miJDnmoTnv7vor5HlhoXlrrnpnaLmnb8KICAgICAgICBjb250YWluZXJEZXN0cm95OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGZvciAodmFyIGkgPSB0aGlzLnJlbmRlcmVkLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7CiAgICAgICAgICAgICAgICBpZiAodGhpcy5yZW5kZXJlZFtpXSAmJiB0aGlzLnJlbmRlcmVkW2ldLnBhcmVudE5vZGUpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbmRlcmVkW2ldLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5yZW5kZXJlZFtpXSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIC8vIOeUn+aIkOe/u+ivkee7k+aenOmdouadvyBET00g77yI5q2k5pe26L+Y5pyq5re75Yqg5Yiw6aG16Z2i77yJCiAgICAgICAgY29udGFpbmVyOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICAgICAgICAgICAgZGl2LnNldEF0dHJpYnV0ZSgnc3R5bGUnLCAnJyArCiAgICAgICAgICAgICAgICAnZGlzcGxheTpub25lIWltcG9ydGFudDsnICsKICAgICAgICAgICAgICAgICdwb3NpdGlvbjphYnNvbHV0ZSFpbXBvcnRhbnQ7JyArCiAgICAgICAgICAgICAgICAnZm9udC1zaXplOjEzcHghaW1wb3J0YW50OycgKwogICAgICAgICAgICAgICAgJ292ZXJmbG93OmF1dG8haW1wb3J0YW50OycgKwogICAgICAgICAgICAgICAgJ2JhY2tncm91bmQ6I2ZmZiFpbXBvcnRhbnQ7JyArCiAgICAgICAgICAgICAgICAnZm9udC1mYW1pbHk6c2Fucy1zZXJpZixBcmlhbCFpbXBvcnRhbnQ7JyArCiAgICAgICAgICAgICAgICAnZm9udC13ZWlnaHQ6bm9ybWFsIWltcG9ydGFudDsnICsKICAgICAgICAgICAgICAgICd0ZXh0LWFsaWduOmxlZnQhaW1wb3J0YW50OycgKwogICAgICAgICAgICAgICAgJ2NvbG9yOiMwMDAhaW1wb3J0YW50OycgKwogICAgICAgICAgICAgICAgJ3BhZGRpbmc6MC41ZW0gMWVtIWltcG9ydGFudDsnICsKICAgICAgICAgICAgICAgICdsaW5lLWhlaWdodDoxLjVlbSFpbXBvcnRhbnQ7JyArCiAgICAgICAgICAgICAgICAnYm9yZGVyLXJhZGl1czo1cHghaW1wb3J0YW50OycgKwogICAgICAgICAgICAgICAgJ2JvcmRlcjoxcHggc29saWQgI2NjYyFpbXBvcnRhbnQ7JyArCiAgICAgICAgICAgICAgICAnYm94LXNoYWRvdzo0cHggNHB4IDhweCAjODg4IWltcG9ydGFudDsnICsKICAgICAgICAgICAgICAgICdtYXgtd2lkdGg6MzUwcHghaW1wb3J0YW50OycgKwogICAgICAgICAgICAgICAgJ21heC1oZWlnaHQ6MjE2cHghaW1wb3J0YW50OycgKwogICAgICAgICAgICAgICAgJ3otaW5kZXg6MjE0NzQ4MzY0NyFpbXBvcnRhbnQ7JyArCiAgICAgICAgICAgICAgICAnJyk7CiAgICAgICAgICAgIHJldHVybiBkaXY7CiAgICAgICAgfQogICAgfTsvLyDnv7vor5FzZXJ2ZXLnu5PmnZ8KfSkoKTs="},{"name":"Baidu Tieba: No Login","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["/^https?://(?:tieba\\.baidu\\.com|www\\.tieba\\.com|dq\\.tieba\\.com|jump2?\\.bdimg\\.com)//"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1546844311640,"data":{}},"enabled":false,"position":2,"file_url":"https://greasyfork.org/scripts/14151-baidu-tieba-no-login/code/Baidu%20Tieba:%20No%20Login.user.js","uuid":"32998376-313a-4546-9ff2-0f670964afcc","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWVzcGFjZSAgIFZBX2kKLy8gQHZlcnNpb24gICAgIDQuMS4wLjIwMTgxMDIwCi8vIEBncmFudCAgICAgICB1bnNhZmVXaW5kb3cKLy8gQGluY2x1ZGUgICAgIC9eaHR0cHM/Oi8vKD86dGllYmFcLmJhaWR1XC5jb218d3d3XC50aWViYVwuY29tfGRxXC50aWViYVwuY29tfGp1bXAyP1wuYmRpbWdcLmNvbSkvLwovLyBAcnVuLWF0ICAgICAgZG9jdW1lbnQtc3RhcnQKLy8gQG5hbWUgICAgICAgIEJhaWR1IFRpZWJhOiBObyBMb2dpbgovLyBAbmFtZTp6aC1DTiAg55m+5bqm6LS05ZCn77ya5LiN55m75b2V5Y2z5Y+v55yL6LS0Ci8vIEBuYW1lOnpoLVRXICDnmb7luqbotLTlkKfvvJrkuI3nmbvlhaXljbPlj6/nnIvosrwKLy8gQGRlc2NyaXB0aW9uIFZpZXcgQmFpZHUgVGllYmEgd2l0aG91dCBsb2dpbi4KLy8gQGRlc2NyaXB0aW9uOnpoLUNOIOeZvuW6pui0tOWQp+eci+i0tO+8iOWMheaLrOalvOS4realvO+8ieaXoOmhu+eZu+W9leOAggovLyBAZGVzY3JpcHRpb246emgtVFcg55m+5bqm6LS05ZCn55yL6LK877yI5YyF5ous5qiT5Lit5qiT77yJ54Sh6aCI55m75YWl44CCCi8vID09L1VzZXJTY3JpcHQ9PQoKdW5zYWZlV2luZG93Lk9iamVjdC5mcmVlemUgPSBudWxsOwoKZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uIChldmVudCkgewogIHRyeSB7CiAgICB1bnNhZmVXaW5kb3cuUGFnZURhdGEudXNlci5pc19sb2dpbiA9IDE7CiAgfSBjYXRjaCAoZXJyb3IpIHsKICAgIC8vYWxlcnQoZXJyb3IpOwogIH0KfSwgdHJ1ZSk7Cg=="},{"name":"Kill TieBa AD","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":["http*://tieba.baidu.com/","http*://tieba.baidu.com/index.html"],"orig_includes":["http*://tieba.baidu.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-body","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1546844315599,"data":{}},"enabled":false,"position":3,"file_url":"https://greasyfork.org/scripts/24171-kill-tieba-ad/code/Kill%20TieBa%20AD.user.js","uuid":"9576ab72-8151-43d0-8d0b-9239837cd88d","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBLaWxsIFRpZUJhIEFECi8vIEBuYW1lOnpoLUNOICAg6LS05ZCn5bm/5ZGK5riF55CGCi8vIEBuYW1lOnpoLVRXICAg6LK85ZCn5buj5ZGK5Y676ZmkCi8vIEBuYW1lc3BhY2UgICAgaG9vdGhpbgovLyBAdmVyc2lvbiAgICAgIDEuMy4yCi8vIEBkZXNjcmlwdGlvbiAgICAgICAgSnVzdCBLaWxsIFRpZUJhIEFECi8vIEBkZXNjcmlwdGlvbjp6aC1DTiAg5riF55CG55m+5bqm6LS05ZCn77yIdGllYmEuYmFpZHUuY29t77yJ5YaF55qE5YiX6KGo5Lyq6KOF77yM5biW5YaF5Lyq6KOF77yM6Kem54K55bm/5ZGK77yM6aG16aaW5bm/5ZGK77yM5o6o6I2Q5bqU55So562J5ZCE57G75bm/5ZGKCi8vIEBkZXNjcmlwdGlvbjp6aC1UVyAg5Y676Zmk55m+5bqm6LK85ZCn77yIdGllYmEuYmFpZHUuY29t77yJ5YaF55qE5YiX6KGo5YG96KOd77yM5biW5YWn5YG96KOd77yM6Ke46bue5buj5ZGK77yM6aCB6aaW5buj5ZGK77yM5o6o6Jam5oeJ55So562J5ZCE6aGe5buj5ZGKCi8vIEBhdXRob3IgICAgICAgaG9vdGhpbgovLyBAaW5jbHVkZSAgICAgIGh0dHAqOi8vdGllYmEuYmFpZHUuY29tLyoKLy8gQGV4Y2x1ZGUgICAgICBodHRwKjovL3RpZWJhLmJhaWR1LmNvbS8KLy8gQGV4Y2x1ZGUgICAgICBodHRwKjovL3RpZWJhLmJhaWR1LmNvbS9pbmRleC5odG1sCi8vIEBncmFudCAgICAgICAgbm9uZQovLyBAcnVuLWF0ICAgICAgIGRvY3VtZW50LWJvZHkKLy8gQHN1cHBvcnRVUkwgICBodHRwOi8vd3d3Lmhvb3RoaW4uY29tCi8vIEBsaWNlbnNlICAgICBNSVQgTGljZW5zZQovLyBAY29tcGF0aWJsZSAgICAgICAgY2hyb21lCi8vIEBjb21wYXRpYmxlICAgICAgICBmaXJlZm94Ci8vIEBjb250cmlidXRpb25VUkwgaHR0cHM6Ly93d3cucGF5cGFsLmNvbS9jZ2ktYmluL3dlYnNjcj9jbWQ9X2RvbmF0aW9ucyZidXNpbmVzcz1yaXhpeGlAc2luYS5jb20maXRlbV9uYW1lPUdyZWFzeStGb3JrK2RvbmF0aW9uCi8vIEBjb250cmlidXRpb25BbW91bnQgMQovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbigpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBvYnNlcnZlciwgb3B0aW9uOwogICAgdmFyIE11dGF0aW9uT2JzZXJ2ZXIgPSB3aW5kb3cuTXV0YXRpb25PYnNlcnZlciB8fCB3aW5kb3cuV2ViS2l0TXV0YXRpb25PYnNlcnZlciB8fCB3aW5kb3cuTW96TXV0YXRpb25PYnNlcnZlcjsKICAgIHZhciB0Y3NzID0gIi5qX2VuY291cmFnZV9lbnRyeSwjdmlkZW9fZnJzX2hlYWQsI2VuY291cmFnZV9lbnRyeSwudHBvaW50LXNraW4sI3BiX2FkYmFubmVyLC5pZnJhbWVfd3JhcHBlcixkaXYudHBvaW50LXNraW4sLmpfY2xpY2tfc3RhdHMsI3RocmVhZF9saXN0PmxpOm5vdCgual90aHJlYWRfbGlzdCk6bm90KC50aHJlYWRfdG9wX2xpc3RfZm9sZGVyKSwjal9wX3Bvc3RsaXN0Pi5jbGVhcmZpeDpub3QoW2RhdGEtZmllbGQqPXBvc3RfaWRdKXtkaXNwbGF5Om5vbmUgIWltcG9ydGFudDt9IjsKICAgIHZhciBzbm9kID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTsKICAgIHNub2QuaW5uZXJIVE1MID0gdGNzczsKICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJoZWFkIilbMF0uYXBwZW5kQ2hpbGQoc25vZCk7CiAgICB2YXIgY29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNjb250ZW50Iik7CiAgICBpZihjb250ZW50KXsKICAgICAgICBkZWxBRCgiI3RocmVhZF9saXN0IiwiTEkiKTsKICAgICAgICBvYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKGZ1bmN0aW9uKHJlY29yZHMpewogICAgICAgICAgICBkZWxBRCgiI3RocmVhZF9saXN0IiwiTEkiKTsKICAgICAgICB9KTsKICAgICAgICBvcHRpb24gPSB7CiAgICAgICAgICAgICdjaGlsZExpc3QnOiB0cnVlLAogICAgICAgICAgICAnc3VidHJlZSc6IHRydWUKICAgICAgICB9OwogICAgICAgIG9ic2VydmVyLm9ic2VydmUoY29udGVudCwgb3B0aW9uKTsKICAgIH1lbHNlewogICAgICAgIGNvbnRlbnQ9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLmxfY29udGFpbmVyIik7CiAgICAgICAgaWYoY29udGVudCl7CiAgICAgICAgICAgIGRlbEFEKCIjal9wX3Bvc3RsaXN0IiwiRElWIik7CiAgICAgICAgICAgIG9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoZnVuY3Rpb24ocmVjb3Jkcyl7CiAgICAgICAgICAgICAgICBkZWxBRCgiI2pfcF9wb3N0bGlzdCIsIkRJViIpOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgb3B0aW9uID0gewogICAgICAgICAgICAgICAgJ2NoaWxkTGlzdCc6IHRydWUsCiAgICAgICAgICAgICAgICAnc3VidHJlZSc6IHRydWUKICAgICAgICAgICAgfTsKICAgICAgICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZShjb250ZW50LCBvcHRpb24pOwogICAgICAgIH1lbHNlewogICAgICAgICAgICBjb250ZW50PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIi5wb3N0X2xpc3QiKTsKICAgICAgICAgICAgaWYoY29udGVudCl7CiAgICAgICAgICAgICAgICBkZWxBRCgiLnRocmVhZHNfbGlzdCIsIkxJIik7CiAgICAgICAgICAgICAgICBvYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKGZ1bmN0aW9uKHJlY29yZHMpewogICAgICAgICAgICAgICAgICAgIGRlbEFEKCIudGhyZWFkc19saXN0IiwiTEkiKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgb3B0aW9uID0gewogICAgICAgICAgICAgICAgICAgICdjaGlsZExpc3QnOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICdzdWJ0cmVlJzogdHJ1ZQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIG9ic2VydmVyLm9ic2VydmUoY29udGVudCwgb3B0aW9uKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBkZWxBRChhLGIpewogICAgICAgIHZhciB0aHJlYWRMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhKyI+IithKSxpOwogICAgICAgIGlmKCF0aHJlYWRMaXN0KSB0aHJlYWRMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhKTsKICAgICAgICBpZighdGhyZWFkTGlzdCkgcmV0dXJuOwogICAgICAgIHZhciBkZWxMaXN0ID0gW107CiAgICAgICAgZm9yKGk9MDtpPHRocmVhZExpc3QuY2hpbGROb2Rlcy5sZW5ndGg7aSsrKXsKICAgICAgICAgICAgbGV0IHRocmVhZCA9IHRocmVhZExpc3QuY2hpbGROb2Rlc1tpXTsKICAgICAgICAgICAgaWYodGhyZWFkLnRhZ05hbWUgPT0gIlNUWUxFIil7CiAgICAgICAgICAgICAgICBkZWxMaXN0LnB1c2godGhyZWFkKTsKICAgICAgICAgICAgICAgIHZhciBwcmV2aW91c1NpYmxpbmcgPSB0aHJlYWQucHJldmlvdXNTaWJsaW5nOwogICAgICAgICAgICAgICAgcHJldmlvdXNTaWJsaW5nID0gcHJldmlvdXNTaWJsaW5nLnRhZ05hbWUgPT0gYj9wcmV2aW91c1NpYmxpbmc6cHJldmlvdXNTaWJsaW5nLnByZXZpb3VzU2libGluZzsKICAgICAgICAgICAgICAgIGlmKHByZXZpb3VzU2libGluZy5pbm5lckhUTUwuaW5kZXhPZigi5bm/5ZGKIikgIT0gLTEpCiAgICAgICAgICAgICAgICAgICAgZGVsTGlzdC5wdXNoKHByZXZpb3VzU2libGluZyk7CiAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgaWYodGhyZWFkLmdldEF0dHJpYnV0ZSAmJiB0aHJlYWQuZ2V0QXR0cmlidXRlKCJkYXRhLWZpZWxkIikpewogICAgICAgICAgICAgICAgICAgIHZhciB0cG9pbnRUYWdUeXBlPXRocmVhZC5xdWVyeVNlbGVjdG9yKCIudHBvaW50LXRhZy10eXBlIik7CiAgICAgICAgICAgICAgICAgICAgaWYodHBvaW50VGFnVHlwZSAmJiB0cG9pbnRUYWdUeXBlLmlubmVySFRNTC5pbmRleE9mKCLlub/lkYoiKSAhPSAtMSlkZWxMaXN0LnB1c2godGhyZWFkKTsKICAgICAgICAgICAgICAgICAgICBsZXQgdGRhdGE9SlNPTi5wYXJzZSh0aHJlYWQuZ2V0QXR0cmlidXRlKCJkYXRhLWZpZWxkIikpLHBDb250ZW50PXRocmVhZC5xdWVyeVNlbGVjdG9yKCIucF9jb250ZW50X2ZpeCIpOwogICAgICAgICAgICAgICAgICAgIGlmKHRkYXRhLmNvbnRlbnQgJiYgdGRhdGEuY29udGVudC5wYl90cG9pbnQgJiYgdGRhdGEuY29udGVudC5wYl90cG9pbnQuaXNfdHBvaW50PT0xICYmIHBDb250ZW50KXBDb250ZW50LmNsYXNzTGlzdC5yZW1vdmUoInBfY29udGVudF9maXgiKTsKICAgICAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgICAgIGlmKHRocmVhZC5jbGFzc0xpc3QgJiYgdGhyZWFkLmNsYXNzTGlzdC5sZW5ndGg9PTIpewogICAgICAgICAgICAgICAgICAgICAgICBkZWxMaXN0LnB1c2godGhyZWFkKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgZm9yKGk9MDtpPGRlbExpc3QubGVuZ3RoO2krKyl7CiAgICAgICAgICAgIGxldCBkZWwgPSBkZWxMaXN0W2ldOwogICAgICAgICAgICBpZihkZWwucGFyZW50Tm9kZSkKICAgICAgICAgICAgICAgIGRlbC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGRlbCk7CiAgICAgICAgfQogICAgICAgIHZhciBlYXN5QUQsIGVhc3lBRHM9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgic3Bhbi5sYWJlbF90ZXh0Iik7CiAgICAgICAgZm9yKGk9MDtpPGVhc3lBRHMubGVuZ3RoO2krKyl7CiAgICAgICAgICAgIGVhc3lBRCA9IGVhc3lBRHNbaV07CiAgICAgICAgICAgIGlmKGVhc3lBRC5pbm5lckhUTUw9PSLlub/lkYoiICYmIGVhc3lBRC5wYXJlbnROb2RlICYmIGVhc3lBRC5wYXJlbnROb2RlLnBhcmVudE5vZGUpewogICAgICAgICAgICAgICAgZWFzeUFELnBhcmVudE5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlYXN5QUQucGFyZW50Tm9kZSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgZWFzeUFEcz1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCJzcGFuLnRpX3RpbWUiKTsKICAgICAgICBmb3IoaT0wO2k8ZWFzeUFEcy5sZW5ndGg7aSsrKXsKICAgICAgICAgICAgZWFzeUFEID0gZWFzeUFEc1tpXTsKICAgICAgICAgICAgaWYoZWFzeUFELmlubmVySFRNTD09IuW5v+WRiiIgJiYgZWFzeUFELnBhcmVudE5vZGUgJiYgZWFzeUFELnBhcmVudE5vZGUucGFyZW50Tm9kZSAmJiBlYXN5QUQucGFyZW50Tm9kZS5wYXJlbnROb2RlLnBhcmVudE5vZGUpewogICAgICAgICAgICAgICAgZWFzeUFELnBhcmVudE5vZGUucGFyZW50Tm9kZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGVhc3lBRC5wYXJlbnROb2RlLnBhcmVudE5vZGUpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9KSgpOw=="},{"name":"百度搜索屏蔽热点推送","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www.baidu.com/s**","http://www.baidu.com/s**","https://www.baidu.com/s*","https://www.baidu.com/baidu?**","http://www.baidu.com/baidu?**"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1547023993199,"data":{}},"enabled":true,"position":4,"uuid":"667fbfde-0ebd-46f3-90ab-edd8a06480fe","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDnmb7luqbmkJzntKLlsY/olL3ng63ngrnmjqjpgIEKLy8gQG5hbWVzcGFjZSAgICBodHRwOi8vdGFtcGVybW9ua2V5Lm5ldC8KLy8gQHZlcnNpb24gICAgICAwLjEuMQovLyBAZGVzY3JpcHRpb24gIHRyeSB0byB0YWtlIG92ZXIgdGhlIHdvcmxkIQovLyBAYXV0aG9yICAgICAgIFlvdQovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vd3d3LmJhaWR1LmNvbS9zKioKLy8gQG1hdGNoICAgICAgICBodHRwOi8vd3d3LmJhaWR1LmNvbS9zKioKLy8gQG1hdGNoICAgICAgICBodHRwczovL3d3dy5iYWlkdS5jb20vcyoKLy8gQG1hdGNoICAgICAgICBodHRwczovL3d3dy5iYWlkdS5jb20vYmFpZHU/KioKLy8gQG1hdGNoICAgICAgICBodHRwOi8vd3d3LmJhaWR1LmNvbS9iYWlkdT8qKgovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gPT0vVXNlclNjcmlwdD09CgoKCihmdW5jdGlvbigpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIGlmKCEkKXsKICAgICAgICB2YXIgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7CiAgICAgICAgc2NyaXB0LnNyYyA9ICJodHRwczovL2Nkbi5ib290Y3NzLmNvbS9qcXVlcnkvMy4yLjEvanF1ZXJ5Lm1pbi5qcyI7CiAgICAgICAgc2NyaXB0LmFzeW5jID0gImZhbHNlIjsKCiAgICB9CiAgICAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7CiAgICAgICAgJCgiI2Nvbi1hci5yZXN1bHRfaGlkZGVuIikuaGlkZSgpOwogICAgICAgICQoInRhYmxlLmMtdGFibGUub3ByLXRvcGxpc3QxLXRhYmxlIikuaGlkZSgpOwogICAgICAgICQoImRpdi5GWUJfUkQiKS5oaWRlKCk7CiAgICB9KTsKCiAgICAvLyBZb3VyIGNvZGUgaGVyZS4uLgp9KSgpOwoKCg=="},{"name":"Pixiv Plus","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["i.pximg.net"],"orig_excludes":[],"orig_includes":["http*://www.pixiv.net*"],"orig_matches":["http://www.pixiv.net/"],"orig_noframes":true,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1547874353868,"data":{}},"enabled":true,"position":5,"file_url":"https://greasyfork.org/scripts/34153-pixiv-plus/code/Pixiv%20Plus.user.js","uuid":"093134e2-8a7c-4c34-9082-9782c0ea174a","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIFBpeGl2IFBsdXMKLy8gQG5hbWU6emgtQ04gIFBpeGl2IOWinuW8ugovLyBAbmFtZTp6aC1UVyAgUGl4aXYg5aKe5by3Ci8vIEBuYW1lc3BhY2UgICBodHRwczovL2dpdGh1Yi5jb20vQWhhb2NoYW4vVGFtcGVybW9ua2V5Ci8vIEB2ZXJzaW9uICAgICAwLjUuNAovLyBAaWNvbiAgICAgICAgaHR0cDovL3d3dy5waXhpdi5uZXQvZmF2aWNvbi5pY28KLy8gQGRlc2NyaXB0aW9uIEZvY3VzIG9uIGltbWVyc2l2ZSBleHBlcmllbmNlLCAxLiBCbG9jayBhZHMsIGRpcmVjdGx5IGFjY2VzcyBwb3B1bGFyIGltYWdlcyAyLiBTZWFyY2ggdXNpbmcgdXNlcnMgdG8gc2VhcmNoIGZvciAzLiBTZWFyY2ggcGlkIGFuZCB1aWQgNC4gRGlzcGxheSBvcmlnaW5hbCBpbWFnZSBhbmQgc2l6ZSwgZG93bmxvYWQgb3JpZ2luYWwgaW1hZ2V8Z2lmIGltYWdlfG1vdGlvbiBmcmFtZSBaaXB8bXVsdGlwbGUgbWFwIHppcCA1LiBkaXNwbGF5IGFydGlzdCBpZCwgYXJ0aXN0IGJhY2tncm91bmQgaW1hZ2UgNi4gYXV0byBsb2FkIGNvbW1lbnQgNy4gZHluYW1pYyBtYXJrdXAgd29yayB0eXBlIDguIHJlbW92ZSByZWRpcmVjdCA5LiBzaW5nbGUgcGFnZSBzb3J0LiBnaXRodWI6IGh0dHBzOi8vZ2l0aHViLmNvbS9BaGFvY2hhbi9UYW1wZXJtb25rZXksIHdlbGNvbWUgc3RhciBhbmQgZm9yay4KLy8gQGRlc2NyaXB0aW9uOmphICAgIOayoeWFpeWei+OBruS9k+mok+OBq+eEpueCueOCkuW9k+OBpuOCiy4gMS4g5bqD5ZGK44KS44OW44Ot44OD44Kv44GX44Gm5Lq65rCX44Gu44GC44KL55S75YOP44Gr55u05o6l44Ki44Kv44K744K544GZ44KLIDIu44Om44O844K244O844KS5L2/44Gj44Gm5qSc57Si44GZ44KLIDMuIHBpZOOBqHVpZOOCkuaknOe0ouOBmeOCiyA0LuWFg+OBrueUu+WDj+OBqOOCteOCpOOCuuOCkuihqOekuuOAgeWFg+OBrueUu+WDj+OCkuODgOOCpuODs+ODreODvOODieOBmeOCi3wgZ2lm55S75YOPfCBaaXAgfOikh+aVsOOBruODnuODg+ODl+OBruOCuOODg+ODlyA1LuihqOekuuOCouODvOODhuOCo+OCueODiElE44CB44Ki44O844OG44Kj44K544OI6IOM5pmv55S75YOPIDYu6Ieq5YuV6Kqt44G/6L6844G/44Kz44Oh44Oz44OIIDcu5YuV55qE44Oe44O844Kv44Ki44OD44OX5L2c5qWt44K/44Kk44OXIDgu44Oq44OA44Kk44Os44Kv44OI44KS5YmK6ZmkIDku44K344Oz44Kw44Or44Oa44O844K444K944O844OIIGdpdGh1YjpodHRwczovL2dpdGh1Yi5jb20vQWhhb2NoYW4vVGFtcGVybW9ua2V5LCB3ZWxjb21lIHN0YXIgYW5kIGZvcmsuCi8vIEBkZXNjcmlwdGlvbjp6aC1DTiDkuJPms6jmsonmtbjlvI/kvZPpqowsIDEuIOWxj+iUveW5v+WRiiwg55u05o6l6K6/6Zeu54Ot6Zeo5Zu+54mHIDIuIOS9v+eUqHVzZXJz5YWl44KK55qE5pa55byP6L+b6KGM5pCc57SiIDMuIOaQnOe0onBpZOWSjHVpZCA0LiDmmL7npLrljp/lm77lj4rlsLrlr7gsIOS4i+i9veWOn+WbvnxnaWblm7585Yqo5Zu+5binemlwfOWkmuWbvnppcCA1LiDmmL7npLrnlLvluIhpZOOAgeeUu+W4iOiDjOaZr+WbviA2LiDoh6rliqjliqDovb3or4TorrogNy4g5a+55Yqo5oCB5qCH6K6w5L2c5ZOB57G75Z6LIDguIOWOu+mZpOmHjeWumuWQkSA5LuWNlemhteaOkuW6jyBnaXRodWI6aHR0cHM6Ly9naXRodWIuY29tL0FoYW9jaGFuL1RhbXBlcm1vbmtlee+8jOasoui/jnN0YXLlkoxmb3Jr44CCCi8vIEBkZXNjcmlwdGlvbjp6aC1UVyDlsIjms6jmsonmtbjlvI/pq5TpqZcsIDEuIOWxj+iUveW7o+WRiiwg55u05o6l6Kiq5ZWP54ax6ZaA5ZyW54mHIDIuIOS9v+eUqHVzZXJz5YWl44KK55qE5pa55byP6YCy6KGM5pCc57SiIDMuIOaQnOe0onBpZOWSjHVpZCA0LiDpoa/npLrljp/lnJblj4rlsLrlr7gsIOS4i+i8ieWOn+WclnxnaWblnJZ85YuV5ZyW5bmAemlwfOWkmuWclnppcCA1LiDpoa/npLrnlavluKtpZOOAgeeVq+W4q+iDjOaZr+WcliA2LiDoh6rli5XliqDovInoqZXoq5YgNy4g5bCN5YuV5oWL5qiZ6KiY5L2c5ZOB6aGe5Z6LIDguIOWOu+mZpOmHjeWumuWQkSA5LuWWrumggeaOkuW6jyBnaXRodWI6aHR0cHM6Ly9naXRodWIuY29tL0FoYW9jaGFuL1RhbXBlcm1vbmtlee+8jOatoei/jnN0YXLlkoxmb3Jr44CCCi8vIEBhdXRob3IgICAgICBBaGFvY2hhbgovLyBAaW5jbHVkZSAgICAgaHR0cCo6Ly93d3cucGl4aXYubmV0KgovLyBAbWF0Y2ggICAgICAgaHR0cDovL3d3dy5waXhpdi5uZXQvCi8vIEBjb25uZWN0ICAgICBpLnB4aW1nLm5ldAovLyBAbGljZW5zZSAgICAgR1BMLTMuMAovLyBAc3VwcG9ydFVSTCAgaHR0cHM6Ly9naXRodWIuY29tL0FoYW9jaGFuL1RhbXBlcm1vbmtleQovLyBAZ3JhbnQgICAgICAgdW5zYWZlV2luZG93Ci8vIEBncmFudCAgICAgICBHTS54bWxIdHRwUmVxdWVzdAovLyBAZ3JhbnQgICAgICAgR00uc2V0Q2xpcGJvYXJkCi8vIEBncmFudCAgICAgICBHTS5zZXRWYWx1ZQovLyBAZ3JhbnQgICAgICAgR00uZ2V0VmFsdWUKLy8gQGdyYW50ICAgICAgIEdNX2FkZFN0eWxlCi8vIEBncmFudCAgICAgICBHTV94bWxodHRwUmVxdWVzdAovLyBAZ3JhbnQgICAgICAgR01fc2V0Q2xpcGJvYXJkCi8vIEBncmFudCAgICAgICBHTV9zZXRWYWx1ZQovLyBAZ3JhbnQgICAgICAgR01fZ2V0VmFsdWUKLy8gQHJlcXVpcmUgICAgIGh0dHBzOi8vY29kZS5qcXVlcnkuY29tL2pxdWVyeS0yLjIuNC5taW4uanMKLy8gQHJlcXVpcmUgICAgIGh0dHBzOi8vY2RuLmJvb3Rjc3MuY29tL2pzemlwLzMuMS40L2pzemlwLm1pbi5qcwovLyBAcmVxdWlyZSAgICAgaHR0cHM6Ly9jZG4uYm9vdGNzcy5jb20vRmlsZVNhdmVyLmpzLzEuMy4yL0ZpbGVTYXZlci5taW4uanMKLy8gQHJlcXVpcmUgICAgIGh0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvc2NyaXB0cy8yOTYzLWdpZi1qcy9jb2RlL2dpZmpzLmpzP3ZlcnNpb249ODU5NgovLyBAcmVxdWlyZSAgICAgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy9zY3JpcHRzLzM3NTM1OS1nbTQtcG9seWZpbGwtMS0wLTEvY29kZS9nbTQtcG9seWZpbGwtMTAxLmpzP3ZlcnNpb249NjUyMjM4Ci8vIEBydW4tYXQgICAgICBkb2N1bWVudC1lbmQKLy8gQG5vZnJhbWVzCi8vID09L1VzZXJTY3JpcHQ9PQpqUXVlcnkoZnVuY3Rpb24gKCQpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIC8vIOWKoOi9veS+nei1lgogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PSBqUXVlcnnmj5Lku7YgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAgICAkLmZuLmV4dGVuZCh7CiAgICAgICAgZml0V2luZG93OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHRoaXMuY3NzKCd3aWR0aCcsICdhdXRvJykuY3NzKCdoZWlnaHQnLCAnYXV0bycpCiAgICAgICAgICAgICAgICAuY3NzKCdtYXgtd2lkdGgnLCAnJykuY3NzKCdtYXgtaGVpZ2h0JywgJCh3aW5kb3cpLmhlaWdodCgpKTsKICAgICAgICB9LAogICAgICAgIHJlcGxhY2VUYWdOYW1lOiBmdW5jdGlvbiAocmVwbGFjZVdpdGgpIHsKICAgICAgICAgICAgdmFyIHRhZ3MgPSBbXSwKICAgICAgICAgICAgICAgIGkgPSB0aGlzLmxlbmd0aDsKICAgICAgICAgICAgd2hpbGUgKGktLSkgewogICAgICAgICAgICAgICAgdmFyIG5ld0VsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHJlcGxhY2VXaXRoKSwKICAgICAgICAgICAgICAgICAgICB0aGlzaSA9IHRoaXNbaV0sCiAgICAgICAgICAgICAgICAgICAgdGhpc2lhID0gdGhpc2kuYXR0cmlidXRlczsKICAgICAgICAgICAgICAgIGZvciAodmFyIGEgPSB0aGlzaWEubGVuZ3RoIC0gMTsgYSA+PSAwOyBhLS0pIHsKICAgICAgICAgICAgICAgICAgICB2YXIgYXR0cmliID0gdGhpc2lhW2FdOwogICAgICAgICAgICAgICAgICAgIG5ld0VsZW1lbnQuc2V0QXR0cmlidXRlKGF0dHJpYi5uYW1lLCBhdHRyaWIudmFsdWUpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgbmV3RWxlbWVudC5pbm5lckhUTUwgPSB0aGlzaS5pbm5lckhUTUw7CiAgICAgICAgICAgICAgICAkKHRoaXNpKS5hZnRlcihuZXdFbGVtZW50KS5yZW1vdmUoKTsKICAgICAgICAgICAgICAgIHRhZ3NbaV0gPSBuZXdFbGVtZW50OwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiAkKHRhZ3MpOwogICAgICAgIH0sCiAgICAgICAgZ2V0QmFja2dyb3VuZFVybDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICBsZXQgaW1nVXJscyA9IFtdOwogICAgICAgICAgICB0aGlzLmVhY2goZnVuY3Rpb24gKGluZGV4LCBlbGUpIHsKICAgICAgICAgICAgICAgIGxldCBiZ1VybCA9ICQodGhpcykuY3NzKCdiYWNrZ3JvdW5kLWltYWdlJykgfHwgZWxlLnN0eWxlLmJhY2tncm91bmRJbWFnZSB8fCAndXJsKCIiKSc7CiAgICAgICAgICAgICAgICBiZ1VybCA9IGJnVXJsLm1hdGNoKC91cmxcKChbJyJdKSguKj8pXDFcKS8pWzJdOwogICAgICAgICAgICAgICAgaW1nVXJscy5wdXNoKGJnVXJsKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHJldHVybiBpbWdVcmxzLmxlbmd0aCA9PT0gMSA/IGltZ1VybHNbMF0gOiBpbWdVcmxzOwogICAgICAgIH0KICAgIH0pOwoKICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT0g5YWo5bGA5Y+C5pWwID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogICAgbGV0IGxhbmcgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuZ2V0QXR0cmlidXRlKCdsYW5nJykgfHwgJ2VuJywKICAgICAgICBnbG9iYWxJbml0RGF0YSA9IHVuc2FmZVdpbmRvdy5nbG9iYWxJbml0RGF0YSwKICAgICAgICBpbGx1c3RKc29uID0ge307CiAgICBsZXQgaWxsdXN0ID0gZnVuY3Rpb24gKCkgewogICAgICAgIC8vIDEuIOWIpOaWreaYr+WQpuW3suacieS9nOWTgWlkKOWFvOWuueaMieW3puWPs+aWueWQkemUrue/u+mhteeahOaDheWGtSkKICAgICAgICBsZXQgcHJlSWxsdXN0SWQgPSAkKCdib2R5JykuYXR0cignYWhhb19pbGx1c3RfaWQnKTsKICAgICAgICBsZXQgdXJsSWxsdXN0SWQgPSBuZXcgVVJMKGxvY2F0aW9uLmhyZWYpLnNlYXJjaFBhcmFtcy5nZXQoImlsbHVzdF9pZCIpOwogICAgICAgIC8vIDIuIOWmguaenGlsbHVzdF9pZOayoeWPmCwg5YiZ5LiN5pu05pawanNvbgogICAgICAgIGlmIChwYXJzZUludChwcmVJbGx1c3RJZCkgPT09IHBhcnNlSW50KHVybElsbHVzdElkKSkgewogICAgICAgICAgICByZXR1cm4gaWxsdXN0SnNvbjsKICAgICAgICB9CiAgICAgICAgLy8gMy4g5aaC5p6caWxsdXN0X2lk5Y+Y5YyWLCDliJnmjIHkuYXljJZpbGx1c3RfaWQsIOS4lOWQjOatpeabtOaWsGpzb24KICAgICAgICBpZiAoISF1cmxJbGx1c3RJZCkgewogICAgICAgICAgICAkKCdib2R5JykuYXR0cignYWhhb19pbGx1c3RfaWQnLCB1cmxJbGx1c3RJZCk7CiAgICAgICAgICAgICQuYWpheCh7CiAgICAgICAgICAgICAgICB1cmw6ICcvYWpheC9pbGx1c3QvJyArIHVybElsbHVzdElkLAogICAgICAgICAgICAgICAgZGF0YVR5cGU6ICdqc29uJywKICAgICAgICAgICAgICAgIGFzeW5jOiBmYWxzZSwKICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IHJlc3BvbnNlID0+IGlsbHVzdEpzb24gPSByZXNwb25zZS5ib2R5CiAgICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICByZXR1cm4gaWxsdXN0SnNvbjsKICAgIH07CiAgICBsZXQgdWlkID0gaWxsdXN0KCkudXNlcklkIHx8IChnbG9iYWxJbml0RGF0YSAmJiBPYmplY3Qua2V5cyhnbG9iYWxJbml0RGF0YS5wcmVsb2FkLnVzZXIpWzBdKSB8fCAocGl4aXYgJiYgcGl4aXYuY29udGV4dC51c2VySWQpIHx8ICd1bmtub3duJzsKICAgIGxldCBvYnNlcnZlckZhY3RvcnkgPSBmdW5jdGlvbiAob3B0aW9uKSB7CiAgICAgICAgbGV0IG9wdGlvbnM7CiAgICAgICAgaWYgKHR5cGVvZiBvcHRpb24gPT09ICdmdW5jdGlvbicpIHsKICAgICAgICAgICAgb3B0aW9ucyA9IHsKICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBvcHRpb24sCiAgICAgICAgICAgICAgICBub2RlOiBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYm9keScpWzBdLAogICAgICAgICAgICAgICAgb3B0aW9uOiB7Y2hpbGRMaXN0OiB0cnVlLCBzdWJ0cmVlOiB0cnVlfQogICAgICAgICAgICB9OwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG9wdGlvbnMgPSAkLmV4dGVuZCh7CiAgICAgICAgICAgICAgICBjYWxsYmFjazogKCkgPT4gewogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIG5vZGU6IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdib2R5JylbMF0sCiAgICAgICAgICAgICAgICBvcHRpb246IHtjaGlsZExpc3Q6IHRydWUsIHN1YnRyZWU6IHRydWV9CiAgICAgICAgICAgIH0sIG9wdGlvbik7CiAgICAgICAgfQogICAgICAgIGxldCBNdXRhdGlvbk9ic2VydmVyID0gd2luZG93Lk11dGF0aW9uT2JzZXJ2ZXIgfHwgd2luZG93LldlYktpdE11dGF0aW9uT2JzZXJ2ZXIgfHwgd2luZG93Lk1vek11dGF0aW9uT2JzZXJ2ZXIsCiAgICAgICAgICAgIG9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoKG11dGF0aW9ucywgb2JzZXJ2ZXIpID0+IHsKICAgICAgICAgICAgICAgIG9wdGlvbnMuY2FsbGJhY2suY2FsbCh0aGlzLCBtdXRhdGlvbnMsIG9ic2VydmVyKTsKICAgICAgICAgICAgICAgIC8vIEdNLmdldFZhbHVlKCdNTycsIHRydWUpLnRoZW4oZnVuY3Rpb24gKHYpIHsgaWYoIXYpIG9ic2VydmVyLmRpc2Nvbm5lY3QoKTsgfSk7CiAgICAgICAgICAgIH0pOwogICAgICAgIG9ic2VydmVyLm9ic2VydmUob3B0aW9ucy5ub2RlLCBvcHRpb25zLm9wdGlvbik7CiAgICAgICAgcmV0dXJuIG9ic2VydmVyOwogICAgfTsKICAgIGxldCBpc0xvZ2luID0gZnVuY3Rpb24gKCkgewogICAgICAgIGxldCBzdGF0dXMgPSAwOwogICAgICAgICQuYWpheCh7dXJsOiAnaHR0cHM6Ly93d3cucGl4aXYubmV0L3NldHRpbmdfdXNlci5waHAnLCBhc3luYzogZmFsc2V9KQogICAgICAgICAgICAuZG9uZSgoZGF0YSwgc3RhdHVzVGV4dCwgeGhyKSA9PiBzdGF0dXMgPSB4aHIuc3RhdHVzKTsKICAgICAgICByZXR1cm4gc3RhdHVzID09PSAyMDA7CiAgICB9OwoKICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT0gaTE4biDlm73pmYXljJYgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogICAgbGV0IGkxOG5MaWIgPSB7CiAgICAgICAgamE6IHsKICAgICAgICAgICAgZmF2b3JpdGVzOiAndXNlcnPlhaXjgoonLAogICAgICAgIH0sCiAgICAgICAgZW46IHsKICAgICAgICAgICAgZmF2b3JpdGVzOiAnZmF2b3JpdGVzJywKICAgICAgICAgICAgaWxsZWdhbDogJ2lsbGVnYWwnLAogICAgICAgICAgICBkb3dubG9hZDogJ2Rvd25sb2FkJywKICAgICAgICAgICAgZG93bmxvYWRfd2FpdDogJ3BsZWFzZSB3YWl0IGRvd25sb2FkIGNvbXBsZXRlZCcsCiAgICAgICAgICAgIGNvcHlfdG9fY2xpcGJvYXJkOiAnY29weSB0byBDbGlwYm9hcmQnLAogICAgICAgICAgICBiYWNrZ3JvdW5kOiAnYmFja2dyb3VuZCcsCiAgICAgICAgICAgIGJhY2tncm91bmRfbm90X2ZvdW5kOiAnbm8tYmFja2dyb3VuZCcsCiAgICAgICAgICAgIGxvZ2luV2FybmluZzogJ1BpeGl2IFBsdXMgU2NyaXB0IFdhcm5pbmchIFBsZWFzZSBsb2dpbiB0byBQaXhpdiBmb3IgYSBiZXR0ZXIgZXhwZXJpZW5jZSEgRmFpbHVyZSB0byBsb2dpbiBtYXkgcmVzdWx0IGluIHVucHJlZGljdGFibGUgYnVncyEnLAogICAgICAgICAgICBpbGx1c3RfdHlwZV9zaW5nbGU6ICdbc2luZ2xlIHBpY10nLAogICAgICAgICAgICBpbGx1c3RfdHlwZV9tdWx0aXBsZTogJ1ttdWx0aXBsZSBwaWNdJywKICAgICAgICAgICAgaWxsdXN0X3R5cGVfZ2lmOiAnW2dpZiBwaWNdJywKICAgICAgICAgICAgc29ydF9ieV9wb3B1bGFyaXR5OiAnU29ydF9ieV9wb3B1bGFyaXR5KHNpbmdsZSBwYWdlKScKICAgICAgICB9LAogICAgICAgIGtvOiB7fSwKICAgICAgICB6aDogewogICAgICAgICAgICBmYXZvcml0ZXM6ICfmlLbol4/kurrmlbAnLAogICAgICAgICAgICBpbGxlZ2FsOiAn5LiN5ZCI5rOVJywKICAgICAgICAgICAgZG93bmxvYWQ6ICfkuIvovb0nLAogICAgICAgICAgICBkb3dubG9hZF93YWl0OiAn6K+3562J5b6F5LiL6L295a6M5oiQJywKICAgICAgICAgICAgY29weV90b19jbGlwYm9hcmQ6ICflt7LlpI3liLbliLDliarotLTmnb8nLAogICAgICAgICAgICBiYWNrZ3JvdW5kOiAn6IOM5pmv5Zu+JywKICAgICAgICAgICAgYmFja2dyb3VuZF9ub3RfZm91bmQ6ICfml6Dog4zmma/lm74nLAogICAgICAgICAgICBsb2dpbldhcm5pbmc6ICdQaXhpduWinuW8uiDohJrmnKzorablkYohIOivt+eZu+W9lVBpeGl26I635b6X5pu05aW955qE5L2T6aqMISDmnKrnmbvlvZXlj6/og73kuqfnlJ/kuI3lj6/pooTmlpnnmoRidWchJywKICAgICAgICAgICAgaWxsdXN0X3R5cGVfc2luZ2xlOiAnW+WNleWbvl0nLAogICAgICAgICAgICBpbGx1c3RfdHlwZV9tdWx0aXBsZTogJ1vlpJrlm75dJywKICAgICAgICAgICAgaWxsdXN0X3R5cGVfZ2lmOiAnW2dpZuWbvl0nLAogICAgICAgICAgICBzb3J0X2J5X3BvcHVsYXJpdHk6ICfmjInmlLbol4/mlbDmkJzntKIo5Y2V6aG1KScKICAgICAgICB9LAogICAgICAgICd6aC1DTic6IHt9LAogICAgICAgICd6aC10dyc6IHsKICAgICAgICAgICAgZmF2b3JpdGVzOiAn5pS26JeP5Lq65pW4JywKICAgICAgICAgICAgaWxsZWdhbDogJ+S4jeWQiOazlScsCiAgICAgICAgICAgIGRvd25sb2FkOiAn5LiL6LyJJywKICAgICAgICAgICAgZG93bmxvYWRfd2FpdDogJ+iri+etieW+heS4i+i8ieWujOaIkCcsCiAgICAgICAgICAgIGNvcHlfdG9fY2xpcGJvYXJkOiAn5bey5b6p6KO95Yiw5Ymq6LK85p2/JywKICAgICAgICAgICAgYmFja2dyb3VuZDogJ+iDjOaZr+WclicsCiAgICAgICAgICAgIGJhY2tncm91bmRfbm90X2ZvdW5kOiAn54Sh6IOM5pmv5ZyWJywKICAgICAgICAgICAgbG9naW5XYXJuaW5nOiAnUGl4aXblop7lvLcg6IWz5pys6K2m5ZGKISDoq4vnmbvpjIRQaXhpdueNsuW+l+abtOWlveeahOmrlOmplyEg5pyq55m76YyE5Y+v6IO955Si55Sf5LiN5Y+v6aCQ5paZ55qEYnVnIScsCiAgICAgICAgICAgIGlsbHVzdF90eXBlX3NpbmdsZTogJ1vllq7lnJZdJywKICAgICAgICAgICAgaWxsdXN0X3R5cGVfbXVsdGlwbGU6ICdb5aSa5ZyWXScsCiAgICAgICAgICAgIGlsbHVzdF90eXBlX2dpZjogJ1tnaWblnJZdJywKICAgICAgICAgICAgc29ydF9ieV9wb3B1bGFyaXR5OiAn5oyJ5pS26JeP5pW45pCc57SiKOWWrumggSknCiAgICAgICAgfQogICAgfTsKICAgIGkxOG5MaWJbJ3poLUNOJ10gPSAkLmV4dGVuZCh7fSwgaTE4bkxpYi56aCk7CiAgICAvLyBUT0RPIOW+hee/u+ivkQogICAgaTE4bkxpYi5qYSA9ICQuZXh0ZW5kKHt9LCBpMThuTGliLmVuLCBpMThuTGliLmphKTsKICAgIGkxOG5MaWIua28gPSAkLmV4dGVuZCh7fSwgaTE4bkxpYi5lbiwgaTE4bkxpYi5rbyk7CiAgICBsZXQgaTE4biA9IGtleSA9PiBpMThuTGliW2xhbmddW2tleV0gfHwgYGkxOG5bJHtsYW5nfV1bJHtrZXl9XSBub3QgZm91bmRgOwoKICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT0gdXJsIOmhtemdouWIpOaWrSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgIGxldCBpc0FydHdvcmtQYWdlID0gKCkgPT4gLy4rbWVtYmVyX2lsbHVzdFwucGhwXD8uKmlsbHVzdF9pZD1cZCsuKi8udGVzdChsb2NhdGlvbi5ocmVmKTsKCiAgICBsZXQgaXNNZW1iZXJJbmRleFBhZ2UgPSAoKSA9PiAvLittZW1iZXIucGhwLippZD1cZCsuKi8udGVzdChsb2NhdGlvbi5ocmVmKTsKICAgIGxldCBpc01lbWJlcklsbHVzdFBhZ2UgPSAoKSA9PiAvLitcL21lbWJlcl9pbGx1c3RcLnBocFw/aWQ9XGQrLy50ZXN0KGxvY2F0aW9uLmhyZWYpOwogICAgbGV0IGlzTWVtYmVyQm9va21hcmtQYWdlID0gKCkgPT4gLy4rXC9ib29rbWFya1wucGhwXD9pZD1cZCsvLnRlc3QobG9jYXRpb24uaHJlZik7CiAgICBsZXQgaXNNZW1iZXJGcmllbmRQYWdlID0gKCkgPT4gLy4rXC9teXBpeGl2X2FsbFwucGhwXD9pZD1cZCsvLnRlc3QobG9jYXRpb24uaHJlZik7CiAgICBsZXQgaXNNZW1iZXJEeW5hbWljUGFnZSA9ICgpID0+IC8uK1wvc3RhY2MuKy8udGVzdChsb2NhdGlvbi5ocmVmKTsKICAgIGxldCBpc01lbWJlclBhZ2UgPSAoKSA9PiBpc01lbWJlckluZGV4UGFnZSgpIHx8IGlzTWVtYmVySWxsdXN0UGFnZSgpIHx8IGlzTWVtYmVyQm9va21hcmtQYWdlKCkgfHwgaXNNZW1iZXJGcmllbmRQYWdlKCksCiAgICAgICAgaXNTZWFyY2hQYWdlID0gKCkgPT4gLy4rXC9zZWFyY2hcLnBocC4qLy50ZXN0KGxvY2F0aW9uLmhyZWYpOwoKICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT0g5Y+N5re35reGID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogICAgbGV0IHVuaXF1ZSA9IGZ1bmN0aW9uIChhcnJheSkgewogICAgICAgIGxldCBzZWVuID0ge30sIG91dCA9IFtdLCBsZW4gPSBhcnJheS5sZW5ndGgsIGogPSAwOwogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICAgICAgbGV0IGl0ZW0gPSBhcnJheVtpXTsKICAgICAgICAgICAgaWYgKHNlZW5baXRlbV0gIT09IDEpIHsKICAgICAgICAgICAgICAgIHNlZW5baXRlbV0gPSAxOwogICAgICAgICAgICAgICAgb3V0W2orK10gPSBpdGVtOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiBvdXQ7CiAgICB9OwoKICAgIGxldCBkZWZhdWx0Q2xhc3NMaWIgPSB7CiAgICAgICAgdXNlckljb246ICdzYy1pd3NLYkknLAogICAgICAgIHJpZ2h0Q29sdW1uOiAnXzNjenNzVjAnLAogICAgICAgIGNvdmVyVGV4dHVyZTogJ18zSFptclZzJywKICAgICAgICBhbGVydENvbnRhaW5lcjogIl8zRGZvN0lrIiwKICAgIH07CiAgICBsZXQgY2xhc3NMaWIgPSBkZWZhdWx0Q2xhc3NMaWI7CiAgICBHTS5nZXRWYWx1ZSgnY2xhc3NMaWInKS50aGVuKHZhbHVlID0+IHsgY2xhc3NMaWIgPSAkLmV4dGVuZChKU09OLnBhcnNlKHZhbHVlIHx8ICd7fScpLCBkZWZhdWx0Q2xhc3NMaWIpOyB9KTsKICAgIHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICBsZXQgd2VicGFja0pzb25wID0gdW5zYWZlV2luZG93LndlYnBhY2tKc29ucDsKICAgICAgICAvLyAxLiDmoLzlvI/ljJYgd2VicGFja0pzb25wIOWPmOmHjywg5Y+W5Ye65Y+N5re35reG5omA6ZyA55qE5Y+Y6YePCiAgICAgICAgbGV0IGZpbHRlciA9IHdlYnBhY2tKc29ucC5tYXAodmFsdWUgPT4gdmFsdWVbMV0pLmZpbHRlcih2YWx1ZSA9PiB2YWx1ZSAmJiAhQXJyYXkuaXNBcnJheSh2YWx1ZSkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jyk7CiAgICAgICAgJC5lYWNoKGZpbHRlciwgKGluZGV4LCBvYmopID0+IHsKICAgICAgICAgICAgZm9yIChsZXQga2V5IGluIG9iaikgewogICAgICAgICAgICAgICAgaWYgKCFvYmouaGFzT3duUHJvcGVydHkoa2V5KSkgewogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgbGV0IHRtcCA9IHt9OwogICAgICAgICAgICAgICAgLy8gMi4g5bCd6K+V5a+85Ye65Y+N5re35reG5Y+Y6YeP5YiwdG1wCiAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICAgIG9ialtrZXldKHRtcCk7CiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIC8vIDMuIOWtmOWcqOS4gOS4quWPmOmHj+WvueW6lOWkmuS4quWPjea3t+a3huWAvOeahOaDheWGtSwg55So5pWw57uE5a2Y5YWlCiAgICAgICAgICAgICAgICBpZiAodG1wLmhhc093blByb3BlcnR5KCdleHBvcnRzJykpIHsKICAgICAgICAgICAgICAgICAgICAkLmVhY2godG1wLmV4cG9ydHMsIGZ1bmN0aW9uIChrLCB2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc0xpYltrXSA9IHY7CiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICBHTS5zZXRWYWx1ZSgnY2xhc3NMaWInLCBKU09OLnN0cmluZ2lmeShjbGFzc0xpYikpOwogICAgfSwgMTAwMCk7CiAgICBsZXQgY2xhenogPSBmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgbGV0IGNsYXNzSXRlbSA9IGNsYXNzTGliW2tleV07CiAgICAgICAgaWYgKCFjbGFzc0l0ZW0pIGNvbnNvbGUuZXJyb3IoYOWPjea3t+a3hiR7a2V5feWksei0pSFgKTsKICAgICAgICByZXR1cm4gY2xhc3NJdGVtOwogICAgfTsKCiAgICAvLyDliKTmlq3mmK/lkKbnmbvlvZUKICAgIGlmICghaXNMb2dpbigpKSB7CiAgICAgICAgYWxlcnQoaTE4bignbG9naW5XYXJuaW5nJykpOwogICAgfQoKICAgIC8vIDEuIOWxj+iUveW5v+WRiiwg5YWo5bGA6L+b6KGMY3Nz5aSE55CGCiAgICAoZnVuY3Rpb24gKCkgewogICAgICAgIC8vIDEuIOWIoOmZpOmdmeaAgea3u+WKoOeahOW5v+WRigogICAgICAgICQoJy5fcHJlbWl1bS1sZWFkLXRhZy1zZWFyY2gtYmFyJykuaGlkZSgpOwogICAgICAgICQoJy5wb3B1bGFyLWludHJvZHVjdGlvbi1vdmVybGF5JykuaGlkZSgpOy8vIOenu+mZpOeDremXqOWbvueJh+mBrue9qeWxggoKICAgICAgICAvLyAyLiDliKDpmaTliqjmgIHmt7vliqDnmoTlub/lkYoKICAgICAgICBsZXQgYWRTZWxlY3RvcnMgPSBbJ2lmcmFtZScsICcuX3ByZW1pdW0tbGVhZC1wcm9tb3Rpb24tYmFubmVyJ107CiAgICAgICAgYWRTZWxlY3RvcnMgPSBhZFNlbGVjdG9ycy5jb25jYXQoJy4nICsgY2xhenooJ2FsZXJ0Q29udGFpbmVyJykpOwogICAgICAgIGFkU2VsZWN0b3JzID0gYWRTZWxlY3RvcnMuY29uY2F0KCcuJyArIGNsYXp6KCdhZENvbnRhaW5lcicpKTsKCiAgICAgICAgb2JzZXJ2ZXJGYWN0b3J5KGZ1bmN0aW9uIChtdXRhdGlvbnMsIG9ic2VydmVyKSB7CiAgICAgICAgICAgIG11dGF0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChtdXRhdGlvbikgewogICAgICAgICAgICAgICAgaWYgKG11dGF0aW9uLnR5cGUgIT09ICdjaGlsZExpc3QnKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgbGV0ICRwYXJlbnQgPSAkKG11dGF0aW9uLnRhcmdldCkucGFyZW50KCk7CiAgICAgICAgICAgICAgICAvLyAyLjEuIOmakOiXj+W5v+WRigogICAgICAgICAgICAgICAgbGV0ICRhZCA9ICRwYXJlbnQuZmluZChhZFNlbGVjdG9ycy5qb2luKCcsJykpOwogICAgICAgICAgICAgICAgJGFkLmhpZGUoKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICB9KSgpOwoKICAgIC8vIDIuIOS9v+eUqHVzZXJz5YWl44KK55qE5pa55byP6L+b6KGM5pCc57SiLCDkvJjlhYjmmL7npLrpq5jotKjph4/kvZzlk4EKICAgIChmdW5jdGlvbiAoKSB7CiAgICAgICAgbGV0IGxhYmVsID0gaTE4bignZmF2b3JpdGVzJyk7IC8vIHVzZXJz5YWl44KKCiAgICAgICAgbGV0ICRzZWxlY3QgPSAkKGAKICAgICAgICA8c2VsZWN0IGlkPSJzZWxlY3QtYWhhby1mYXZvcml0ZXMiPgogICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIiPjwvb3B0aW9uPgogICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxMDAwMHVzZXJz5YWl44KKIj4xMDAwMHVzZXJz5YWl44KKPC9vcHRpb24+CiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjUwMDB1c2Vyc+WFpeOCiiIgPiA1MDAwdXNlcnPlhaXjgoo8L29wdGlvbj4KICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTAwMHVzZXJz5YWl44KKIiA+IDEwMDB1c2Vyc+WFpeOCijwvb3B0aW9uPgogICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSI1MDB1c2Vyc+WFpeOCiiIgID4gIDUwMHVzZXJz5YWl44KKPC9vcHRpb24+CiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjMwMHVzZXJz5YWl44KKIiAgPiAgMzAwdXNlcnPlhaXjgoo8L29wdGlvbj4KICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTAwdXNlcnPlhaXjgooiICA+ICAxMDB1c2Vyc+WFpeOCijwvb3B0aW9uPgogICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSI1MHVzZXJz5YWl44KKIiAgID4gICA1MHVzZXJz5YWl44KKPC9vcHRpb24+CiAgICAgICAgPC9zZWxlY3Q+YCk7CgogICAgICAgIC8vIDEuIOWIneWni+WMlumAmueUqOmhtemdolVJCiAgICAgICAgKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgaWYgKGlzQXJ0d29ya1BhZ2UoKSB8fCBpc01lbWJlclBhZ2UoKSkgewogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCLliJ3lp4vljJbpgJrnlKjpobXpnaIg5oyJ5pS26JeP5pWw5pCc57SiIik7CiAgICAgICAgICAgIGxldCBpY29uID0gJCgnLl9kaXNjb3ZlcnktaWNvbicpLmF0dHIoJ3NyYycpOwogICAgICAgICAgICBsZXQgJG1lbnUgPSAkKGAKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtZW51LWl0ZW0ganMtY2xpY2stdHJhY2thYmxlLWxhdGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iX2hvd3RvLWljb24iIHNyYz0iJHtpY29ufSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJsYWJlbCI+JHtsYWJlbH3vvJo8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPCEtLXNlbGVjdC0tPgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvZGl2PmApOwogICAgICAgICAgICAkbWVudS5maW5kKCdzcGFuLmxhYmVsJykuYWZ0ZXIoJHNlbGVjdCk7CiAgICAgICAgICAgICQoJy5uYXZpZ2F0aW9uLW1lbnUtcmlnaHQnKS5hcHBlbmQoJG1lbnUpOwoKICAgICAgICB9KSgpOwoKICAgICAgICAvLyAyLiDliJ3lp4vljJbkvZzlk4HpobXpnaLlkoznlLvluIjpobXpnaJVSQogICAgICAgIChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGlmICghaXNBcnR3b3JrUGFnZSgpICYmICFpc01lbWJlclBhZ2UoKSkgewogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCLliJ3lp4vljJbkvZzlk4HpobXpnaIg5oyJ5pS26JeP5pWw5pCc57SiIik7CiAgICAgICAgICAgIGxldCBkaXNjb3ZlcnlTZWxlY3RvciA9ICdhW2hyZWY9Ii9kaXNjb3ZlcnkiXSc7CiAgICAgICAgICAgIG9ic2VydmVyRmFjdG9yeShmdW5jdGlvbiAobXV0YXRpb25zLCBvYnNlcnZlcikgewogICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDAsIGxlbiA9IG11dGF0aW9ucy5sZW5ndGg7IGkgPCBsZW47IGkrKykgewogICAgICAgICAgICAgICAgICAgIGxldCBtdXRhdGlvbiA9IG11dGF0aW9uc1tpXTsKCiAgICAgICAgICAgICAgICAgICAgLy8gMS4g5Yik5pat5piv5ZCm5pS55Y+Y6IqC54K5LCDmiJbogIXmmK/lkKbmnIlb5Y+R546wXeiKgueCuQogICAgICAgICAgICAgICAgICAgIC8vIGxldCAkZGlzY292ZXJ5ID0gJChtdXRhdGlvbi50YXJnZXQpLmZpbmQoZGlzY292ZXJ5U2VsZWN0b3IpOwogICAgICAgICAgICAgICAgICAgIGxldCAkZGlzY292ZXJ5ID0gJChkaXNjb3ZlcnlTZWxlY3Rvcik7CiAgICAgICAgICAgICAgICAgICAgaWYgKG11dGF0aW9uLnR5cGUgIT09ICdjaGlsZExpc3QnIHx8ICRkaXNjb3ZlcnkubGVuZ3RoIDw9IDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAvLyAyLiBjbG9uZSBb5Y+R546wXeiKgueCuSwg56e76ZmkaHJlZuWxnuaApywg6YG/5YWN5q275b6q546vCiAgICAgICAgICAgICAgICAgICAgbGV0ICR0YWJHcm91cCA9ICRkaXNjb3ZlcnkuY2xvc2VzdCgnZGl2Jyk7CiAgICAgICAgICAgICAgICAgICAgbGV0ICR0YWIgPSAkZGlzY292ZXJ5LmNsb3Nlc3QoJ3VsJykuY2xvbmUoKTsKICAgICAgICAgICAgICAgICAgICAkdGFiLmZpbmQoZGlzY292ZXJ5U2VsZWN0b3IpLmF0dHIoJ2hyZWYnLCAnamF2YXNjcmlwdDp2b2lkKDApJyk7CgogICAgICAgICAgICAgICAgICAgIC8vIDMuIOWKoOWFpWRvbeS4rQogICAgICAgICAgICAgICAgICAgICR0YWJHcm91cC5wcmVwZW5kKCR0YWIpOwogICAgICAgICAgICAgICAgICAgICR0YWIuZmluZCgnYScpLmNvbnRlbnRzKCkubGFzdCgpWzBdLnRleHRDb250ZW50ID0gbGFiZWw7CiAgICAgICAgICAgICAgICAgICAgJHRhYi5maW5kKCdhJykuYWZ0ZXIoJHNlbGVjdCk7CgogICAgICAgICAgICAgICAgICAgIG9ic2VydmVyLmRpc2Nvbm5lY3QoKTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgfSkoKTsKCiAgICAgICAgLy8gMy4g5aaC5p6c5bey57uP5pyJ5pCc57Si5a2X56ym5LiyLCDlsLHlnKjmlLnlj5jpgInpobnml7bnm7TmjqXmkJzntKIKICAgICAgICAkKCdib2R5Jykub24oJ2NoYW5nZScsICcjc2VsZWN0LWFoYW8tZmF2b3JpdGVzJywgZnVuY3Rpb24gKCkgewogICAgICAgICAgICBpZiAoISEkKCdpbnB1dFtuYW1lPSJ3b3JkIl0nKS52YWwoKSkgewogICAgICAgICAgICAgICAgJCgnZm9ybVthY3Rpb249Ii9zZWFyY2gucGhwIl0nKS5zdWJtaXQoKTsKICAgICAgICAgICAgfQogICAgICAgIH0pOwoKICAgICAgICAvLyA0LiDlnKjmj5DkuqTmkJzntKLliY3lpITnkIbmkJzntKLlhbPplK7lrZcKICAgICAgICAkKCdmb3JtW2FjdGlvbj0iL3NlYXJjaC5waHAiXScpLnN1Ym1pdChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGxldCAkdGV4dCA9ICQodGhpcykuZmluZCgnaW5wdXRbbmFtZT0id29yZCJdJyk7CiAgICAgICAgICAgIGxldCAkZmF2b3JpdGVzID0gJCgnI3NlbGVjdC1haGFvLWZhdm9yaXRlcycpOwogICAgICAgICAgICAvLyAyLjQuMS4g5Y676Zmk5pen55qE5pCc57Si6YCJ6aG5CiAgICAgICAgICAgICR0ZXh0LnZhbCgoaW5kZXgsIHZhbCkgPT4gdmFsLnJlcGxhY2UoL1xkKnVzZXJz5YWl44KKL2csICcnKSk7CiAgICAgICAgICAgIC8vIDIuNC4yLiDljrvpmaTlpJrkvZnnqbrmoLwKICAgICAgICAgICAgJHRleHQudmFsKChpbmRleCwgdmFsKSA9PiB2YWwucmVwbGFjZSgvXHNccysvZywgJyAnKSk7CiAgICAgICAgICAgIC8vIDIuNC4zLiDmt7vliqDmlrDnmoTmkJzntKLpgInpobkKICAgICAgICAgICAgJHRleHQudmFsKChpbmRleCwgdmFsKSA9PiBgJHt2YWx9ICR7JGZhdm9yaXRlcy52YWwoKX1gKTsKICAgICAgICB9KTsKICAgIH0pKCk7CgogICAgLy8gMy4g6L+95Yqg5pCc57SicGlk5ZKMdWlk5Yqf6IO9CiAgICAoZnVuY3Rpb24gKCkgewogICAgICAgIGlmIChpc0FydHdvcmtQYWdlKCkgfHwgaXNNZW1iZXJQYWdlKCkpIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICBjb25zb2xlLmxvZygi5Yid5aeL5YyW6YCa55So6aG16Z2iIOaQnOe0olVJROWSjFBJRCIpOwogICAgICAgIGxldCBpbml0U2VhcmNoID0gZnVuY3Rpb24gKG9wdGlvbikgewogICAgICAgICAgICBsZXQgb3B0aW9ucyA9ICQuZXh0ZW5kKHtyaWdodDogJzBweCcsIHBsYWNlaG9sZGVyOiAnJywgdXJsOiAnJ30sIG9wdGlvbik7CgogICAgICAgICAgICAvLyAxLiDliJ3lp4vljJbooajljZVVSQogICAgICAgICAgICBsZXQgJGZvcm0gPSAkKGA8Zm9ybSBjbGFzcz0idWktc2VhcmNoIiBzdHlsZT0icG9zaXRpb246IHN0YXRpYzt3aWR0aDogMTAwcHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciIgc3R5bGU9IndpZHRoOjgwJTsiPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz0iYWhhby1pbnB1dCIgcGxhY2Vob2xkZXI9IiR7b3B0aW9ucy5wbGFjZWhvbGRlcn0iIHN0eWxlPSJ3aWR0aDo4MCU7Ii8+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIGNsYXNzPSJzdWJtaXQgc3ByaXRlcy1zZWFyY2gtb2xkIiB2YWx1ZT0iIj4KICAgICAgICAgICAgICAgIDwvZm9ybT5gKTsKICAgICAgICAgICAgbGV0ICRkaXYgPSAkKCc8ZGl2IGNsYXNzPSJhaGFvLXNlYXJjaCI+PC9kaXY+JykuY3NzKCdwb3NpdGlvbicsICdhYnNvbHV0ZScpCiAgICAgICAgICAgICAgICAuY3NzKCdib3R0b20nLCAnNDRweCcpLmNzcygnaGVpZ2h0JywgJzMwcHgnKS5jc3MoJ3JpZ2h0Jywgb3B0aW9ucy5yaWdodCk7CiAgICAgICAgICAgICRkaXYuYXBwZW5kKCRmb3JtKTsKICAgICAgICAgICAgJCgnI3N1Z2dlc3QtY29udGFpbmVyJykuYmVmb3JlKCRkaXYpOwoKICAgICAgICAgICAgLy8gMi4g57uR5a6ac3VibWl05LqL5Lu2CiAgICAgICAgICAgICRmb3JtLnN1Ym1pdChmdW5jdGlvbiAoZSkgewogICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwoKICAgICAgICAgICAgICAgIGxldCAkaW5wdXQgPSAkKHRoaXMpLmZpbmQoJy5haGFvLWlucHV0Jyk7CiAgICAgICAgICAgICAgICBsZXQgaWQgPSAkaW5wdXQudmFsKCk7CiAgICAgICAgICAgICAgICAvLyAyLjEuIElEIOW/hemhu+S4uue6r+aVsOWtlwogICAgICAgICAgICAgICAgaWYgKCEvXlswLTldKyQvLnRlc3QoaWQpKSB7CiAgICAgICAgICAgICAgICAgICAgbGV0IGxhYmVsID0gb3B0aW9ucy5wbGFjZWhvbGRlciArIGkxOG4oJ2lsbGVnYWwnKTsKICAgICAgICAgICAgICAgICAgICBhbGVydChsYWJlbCk7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgLy8gMi4yLiDmlrDnqpflj6PmiZPlvIB1cmwKICAgICAgICAgICAgICAgIGxldCB1cmwgPSBvcHRpb24udXJsICsgaWQ7CiAgICAgICAgICAgICAgICB3aW5kb3cub3Blbih1cmwpOwogICAgICAgICAgICAgICAgLy8gMi4zLiDmuIXnqbppbnB1dOetieW+heS4i+asoei+k+WFpQogICAgICAgICAgICAgICAgJGlucHV0LnZhbCgnJyk7CiAgICAgICAgICAgIH0pOwogICAgICAgIH07CiAgICAgICAgLy8gMS4gVUlE5pCc57SiCiAgICAgICAgaW5pdFNlYXJjaCh7cmlnaHQ6ICcyMzVweCcsIHBsYWNlaG9sZGVyOiAnVUlEJywgdXJsOiAnaHR0cHM6Ly93d3cucGl4aXYubmV0L21lbWJlci5waHA/aWQ9J30pOwogICAgICAgIC8vIDIuIFBJROaQnOe0ogogICAgICAgIGluaXRTZWFyY2goewogICAgICAgICAgICByaWdodDogJzM0NXB4JywKICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICdQSUQnLAogICAgICAgICAgICB1cmw6ICdodHRwczovL3d3dy5waXhpdi5uZXQvbWVtYmVyX2lsbHVzdC5waHA/bW9kZT1tZWRpdW0maWxsdXN0X2lkPScKICAgICAgICB9KTsKICAgIH0pKCk7IC8vIOWIneWni+WMlumAmueUqOmhtemdolVJCiAgICAoZnVuY3Rpb24gKCkgewogICAgICAgIGlmICghaXNBcnR3b3JrUGFnZSgpICYmICFpc01lbWJlclBhZ2UoKSkgewogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgIGNvbnNvbGUubG9nKCLliJ3lp4vljJbkvZzlk4HpobXpnaIg5pCc57SiVUlE5ZKMUElEIik7CiAgICAgICAgbGV0IGZvcm1TZWxlY3RvciA9ICdmb3JtW2FjdGlvbj0iL3NlYXJjaC5waHAiXSc7CgogICAgICAgIG9ic2VydmVyRmFjdG9yeShmdW5jdGlvbiAobXV0YXRpb25zLCBvYnNlcnZlcikgewogICAgICAgICAgICBmb3IgKGxldCBpID0gMCwgbGVuID0gbXV0YXRpb25zLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgICAgICAgICBsZXQgbXV0YXRpb24gPSBtdXRhdGlvbnNbaV07CiAgICAgICAgICAgICAgICAvLyAxLiDliKTmlq3mmK/lkKbmlLnlj5joioLngrksIOaIluiAheaYr+WQpuaciVtmb3JtXeiKgueCuQogICAgICAgICAgICAgICAgLy8gbGV0ICRmb3JtID0gJChtdXRhdGlvbi50YXJnZXQpLmZpbmQoZm9ybVNlbGVjdG9yKTsKICAgICAgICAgICAgICAgIGxldCAkZm9ybSA9ICQoZm9ybVNlbGVjdG9yKTsKICAgICAgICAgICAgICAgIGlmIChtdXRhdGlvbi50eXBlICE9PSAnY2hpbGRMaXN0JyB8fCAhJGZvcm0ubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgLy8gMi4g5L2/55SoZmxleOW4g+WxgOWMheijuQogICAgICAgICAgICAgICAgbGV0ICRmbGV4Qm94ID0gJCgnPGRpdj48L2Rpdj4nKS5jc3MoJ2Rpc3BsYXknLCAnZmxleCcpOwogICAgICAgICAgICAgICAgJGZvcm0ud3JhcCgkZmxleEJveCk7CiAgICAgICAgICAgICAgICAkZmxleEJveCA9ICRmb3JtLmNsb3Nlc3QoJ2RpdicpOwoKICAgICAgICAgICAgICAgIGxldCBpbml0U2VhcmNoID0gZnVuY3Rpb24gKG9wdGlvbikgewogICAgICAgICAgICAgICAgICAgIGxldCBvcHRpb25zID0gJC5leHRlbmQoe3BsYWNlaG9sZGVyOiAnJywgdXJsOiAnJ30sIG9wdGlvbik7CgogICAgICAgICAgICAgICAgICAgIC8vIDEuIGNsb25lIGZvcm3ooajljZUKICAgICAgICAgICAgICAgICAgICBsZXQgJGNsb25lRm9ybSA9ICRmb3JtLmNsb25lKCk7CiAgICAgICAgICAgICAgICAgICAgJGNsb25lRm9ybS5hdHRyKCdhY3Rpb24nLCAnJykuYWRkQ2xhc3MoJ2FoYW8tc2VhcmNoJykuY3NzKCdtYXJnaW4tcmlnaHQnLCAnMTVweCcpLmNzcygnd2lkdGgnLCAnMTI2cHgnKTsKICAgICAgICAgICAgICAgICAgICAkY2xvbmVGb3JtLmZpbmQoJ2lucHV0W25hbWU9InNfbW9kZSJdJykucmVtb3ZlKCk7IC8vIOWPquS/neeVmeS4gOS4qmlucHV0CiAgICAgICAgICAgICAgICAgICAgJGNsb25lRm9ybS5maW5kKCdpbnB1dDpmaXJzdCcpLmF0dHIoJ3BsYWNlaG9sZGVyJywgb3B0aW9ucy5wbGFjZWhvbGRlcikuYXR0cignbmFtZScsIG9wdGlvbnMucGxhY2Vob2xkZXIpLmNzcygnd2lkdGgnLCAnNjRweCcpOwogICAgICAgICAgICAgICAgICAgICRmbGV4Qm94LnByZXBlbmQoJGNsb25lRm9ybSk7CgogICAgICAgICAgICAgICAgICAgIC8vIDIuIOe7keWumnN1Ym1pdOS6i+S7tgogICAgICAgICAgICAgICAgICAgICRjbG9uZUZvcm0uc3VibWl0KGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKCiAgICAgICAgICAgICAgICAgICAgICAgIGxldCAkaW5wdXQgPSAkKHRoaXMpLmZpbmQoYGlucHV0W25hbWU9IiR7b3B0aW9ucy5wbGFjZWhvbGRlcn0iXWApOwogICAgICAgICAgICAgICAgICAgICAgICBsZXQgaWQgPSAkaW5wdXQudmFsKCk7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIElEIOW/hemhu+S4uue6r+aVsOWtlwogICAgICAgICAgICAgICAgICAgICAgICBpZiAoIS9eWzAtOV0rJC8udGVzdChpZCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBsYWJlbCA9IG9wdGlvbnMucGxhY2Vob2xkZXIgKyBpMThuKCdpbGxlZ2FsJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGVydChsYWJlbCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5paw56qX5Y+j5omT5byAdXJsCiAgICAgICAgICAgICAgICAgICAgICAgIGxldCB1cmwgPSBvcHRpb24udXJsICsgaWQ7CiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5vcGVuKHVybCk7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOa4heepumlucHV0562J5b6F5LiL5qyh6L6T5YWlCiAgICAgICAgICAgICAgICAgICAgICAgICRpbnB1dC52YWwoJycpOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIC8vIDMuIFVJROaQnOe0ogogICAgICAgICAgICAgICAgaW5pdFNlYXJjaCh7cGxhY2Vob2xkZXI6ICdVSUQnLCB1cmw6ICdodHRwczovL3d3dy5waXhpdi5uZXQvbWVtYmVyLnBocD9pZD0nfSk7CiAgICAgICAgICAgICAgICAvLyA0LiBQSUTmkJzntKIKICAgICAgICAgICAgICAgIGluaXRTZWFyY2goe3BsYWNlaG9sZGVyOiAnUElEJywgdXJsOiAnaHR0cHM6Ly93d3cucGl4aXYubmV0L21lbWJlcl9pbGx1c3QucGhwP21vZGU9bWVkaXVtJmlsbHVzdF9pZD0nfSk7CiAgICAgICAgICAgICAgICBvYnNlcnZlci5kaXNjb25uZWN0KCk7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgfSkoKTsgLy8g5Yid5aeL5YyW5L2c5ZOB6aG16Z2i5ZKM55S75biI6aG16Z2iVUkKCiAgICAvLyA0LiDljZXlvKDlm77niYfmm7/mjaLkuLrljp/lm77moLzlvI8uIOi/veWKoOS4i+i9veaMiemSriwg5LiL6L29Z2lm5Zu+44CBZ2lm55qE5bin5Y6L57yp5YyF44CB5aSa5Zu+CiAgICAoYXN5bmMgZnVuY3Rpb24gKCkgewogICAgICAgIGlmICghaXNBcnR3b3JrUGFnZSgpKSB7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgLy8gMS4g5Yid5aeL5YyW5pa55rOVCiAgICAgICAgbGV0IGluaXREb3dubG9hZEJ0biA9IGZ1bmN0aW9uIChvcHRpb24pIHsKICAgICAgICAgICAgLy8g5LiL6L295oyJ6ZKuLCDlpI3liLbliIbkuqvmjInpkq7lubbml4vovawxODDluqYKICAgICAgICAgICAgbGV0IG9wdGlvbnMgPSAkLmV4dGVuZCh7CiAgICAgICAgICAgICAgICAkc2hhcmVCdXR0b25Db250YWluZXI6IHVuZGVmaW5lZCwgaWQ6ICcnLCB0ZXh0OiAnJywgY2xpY2tGdW46ICgpID0+IHsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwgb3B0aW9uKTsKICAgICAgICAgICAgbGV0ICRkb3dubG9hZEJ1dHRvbkNvbnRhaW5lciA9IG9wdGlvbnMuJHNoYXJlQnV0dG9uQ29udGFpbmVyLmNsb25lKCk7CiAgICAgICAgICAgICRkb3dubG9hZEJ1dHRvbkNvbnRhaW5lci5hZGRDbGFzcygnYWhhby1kb3dubG9hZC1idG4nKQogICAgICAgICAgICAgICAgLmF0dHIoJ2lkJywgb3B0aW9ucy5pZCkKICAgICAgICAgICAgICAgIC5yZW1vdmVDbGFzcyhvcHRpb25zLiRzaGFyZUJ1dHRvbkNvbnRhaW5lci5hdHRyKCdjbGFzcycpKQogICAgICAgICAgICAgICAgLmNzcygnbWFyZ2luLXJpZ2h0JywgJzEwcHgnKQogICAgICAgICAgICAgICAgLmNzcygncG9zaXRpb24nLCAncmVsYXRpdmUnKQogICAgICAgICAgICAgICAgLmNzcygnYm9yZGVyJywgJzFweCBzb2xpZCcpCiAgICAgICAgICAgICAgICAuY3NzKCdwYWRkaW5nJywgJzFweCAxMHB4JykKICAgICAgICAgICAgICAgIC5hcHBlbmQoYDxwIHN0eWxlPSJkaXNwbGF5OiBpbmxpbmUiPiR7b3B0aW9ucy50ZXh0fTwvcD5gKTsKICAgICAgICAgICAgJGRvd25sb2FkQnV0dG9uQ29udGFpbmVyLmZpbmQoJ2J1dHRvbicpLmNzcygndHJhbnNmb3JtJywgJ3JvdGF0ZSgxODBkZWcpJykKICAgICAgICAgICAgICAgIC5vbignY2xpY2snLCBvcHRpb25zLmNsaWNrRnVuKTsKICAgICAgICAgICAgb3B0aW9ucy4kc2hhcmVCdXR0b25Db250YWluZXIuYWZ0ZXIoJGRvd25sb2FkQnV0dG9uQ29udGFpbmVyKTsKICAgICAgICAgICAgcmV0dXJuICRkb3dubG9hZEJ1dHRvbkNvbnRhaW5lcjsKICAgICAgICB9OwogICAgICAgIGxldCBhZGRJbWdTaXplID0gZnVuY3Rpb24gKG9wdGlvbikgewogICAgICAgICAgICAvLyDku44gJGltZyDojrflj5blm77niYflpKflsI8sIGFmdGVyIOWIsCAkaW1nCiAgICAgICAgICAgIGxldCBvcHRpb25zID0gJC5leHRlbmQoewogICAgICAgICAgICAgICAgJGltZzogdW5kZWZpbmVkLAogICAgICAgICAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsCiAgICAgICAgICAgIH0sIG9wdGlvbik7CiAgICAgICAgICAgIGxldCAkaW1nID0gb3B0aW9ucy4kaW1nLCBwb3NpdGlvbiA9IG9wdGlvbnMucG9zaXRpb247CiAgICAgICAgICAgIGlmICgkaW1nLmxlbmd0aCAhPT0gMSkgewogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIDEuIOaJvuWIsCDmmL7npLrlm77niYflpKflsI8g55qEIHNwYW4sIOayoeacieWImea3u+WKoAogICAgICAgICAgICBsZXQgJHNwYW4gPSAkaW1nLm5leHQoJ3NwYW4nKTsKICAgICAgICAgICAgaWYgKCRzcGFuLmxlbmd0aCA8PSAwKSB7CiAgICAgICAgICAgICAgICAvLyDmt7vliqDliY0g5Y676Zmk5aSx5Y675L6d6LWW55qEIHNwYW4KICAgICAgICAgICAgICAgICQoJ2JvZHknKS5maW5kKCcuYWhhby1pbWctc2l6ZScpLmVhY2goZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgIGxldCAkdGhpcyA9ICQodGhpcyksICRwcmV2ID0gJHRoaXMucHJldignY2FudmFzLCBpbWcnKTsKICAgICAgICAgICAgICAgICAgICBpZiAoJHByZXYubGVuZ3RoIDw9IDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMucmVtb3ZlKCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAkaW1nLmFmdGVyKGA8c3BhbiBjbGFzcz0iYWhhby1pbWctc2l6ZSIgc3R5bGU9InBvc2l0aW9uOiAke3Bvc2l0aW9ufTsgcmlnaHQ6IDA7IHRvcDogMjhweDsKICAgICAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZmZmZjsgZm9udC1zaXplOiB4LWxhcmdlOyBmb250LXdlaWdodDogYm9sZDsgLXdlYmtpdC10ZXh0LXN0cm9rZTogMS4wcHggIzAwMDAwMDsiPjwvc3Bhbj5gKTsKICAgICAgICAgICAgfQogICAgICAgICAgICAvLyAyLiDmoLnmja7moIfnrb7ojrflj5blm77niYflpKflsI8sIOebruWJjeWPquaciSBjYW52YXMg5ZKMIGltZyDkuKTnp40KICAgICAgICAgICAgaWYgKCRpbWcucHJvcCgndGFnTmFtZScpID09PSAnSU1HJykgewogICAgICAgICAgICAgICAgbGV0IGltZyA9IG5ldyBJbWFnZSgpOwogICAgICAgICAgICAgICAgaW1nLnNyYyA9ICRpbWcuYXR0cignc3JjJyk7CiAgICAgICAgICAgICAgICBpbWcub25sb2FkID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICRzcGFuLnRleHQoYCR7dGhpcy53aWR0aH14JHt0aGlzLmhlaWdodH1gKTsKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBsZXQgd2lkdGggPSAkaW1nLmF0dHIoJ3dpZHRoJykgfHwgJGltZy5jc3MoJ3dpZHRoJykucmVwbGFjZSgncHgnLCAnJykgfHwgJGltZy5jc3MoJ21heC13aWR0aCcpLnJlcGxhY2UoJ3B4JywgJycpIHx8IDA7CiAgICAgICAgICAgICAgICBsZXQgaGVpZ2h0ID0gJGltZy5hdHRyKCdoZWlnaHQnKSB8fCAkaW1nLmNzcygnaGVpZ2h0JykucmVwbGFjZSgncHgnLCAnJykgfHwgJGltZy5jc3MoJ21heC1oZWlnaHQnKS5yZXBsYWNlKCdweCcsICcnKSB8fCAwOwogICAgICAgICAgICAgICAgJHNwYW4udGV4dChgJHt3aWR0aH14JHtoZWlnaHR9YCk7CiAgICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIGxldCBtaW1lVHlwZSA9IHN1ZmZpeCA9PiB7CiAgICAgICAgICAgIGxldCBsaWIgPSB7cG5nOiAiaW1hZ2UvcG5nIiwganBnOiAiaW1hZ2UvanBlZyIsIGdpZjogImltYWdlL2dpZiJ9OwogICAgICAgICAgICByZXR1cm4gbGliW3N1ZmZpeF0gfHwgYG1pbWVUeXBlWyR7c3VmZml4fV0gbm90IGZvdW5kYDsKICAgICAgICB9OwogICAgICAgIGxldCBpc01vcmVNb2RlID0gKCkgPT4gaWxsdXN0KCkucGFnZUNvdW50ID4gMSwKICAgICAgICAgICAgaXNHaWZNb2RlID0gKCkgPT4gaWxsdXN0KCkuaWxsdXN0VHlwZSA9PT0gMiwKICAgICAgICAgICAgaXNTaW5nbGVNb2RlID0gKCkgPT4gKGlsbHVzdCgpLmlsbHVzdFR5cGUgPT09IDAgfHwgaWxsdXN0KCkuaWxsdXN0VHlwZSA9PT0gMSkgJiYgaWxsdXN0KCkucGFnZUNvdW50ID09PSAxOwogICAgICAgIGxldCBzaGFyZUJ1dHRvbkNvbnRhaW5lclNlbGVjdG9yID0gYXdhaXQgR00uZ2V0VmFsdWUoJ3NoYXJlQnV0dG9uQ29udGFpbmVyU2VsZWN0b3InLCAnLlVYbXZ6Jyk7IC8vIHNlY3Rpb24g5LiL55qEIGRpdgoKICAgICAgICAvLyDng63kv67lpI3kuIvovb3mjInpkq7nmoRjbGFzc05hbWUKICAgICAgICBvYnNlcnZlckZhY3RvcnkoZnVuY3Rpb24gKG11dGF0aW9ucywgb2JzZXJ2ZXIpIHsKICAgICAgICAgICAgZm9yIChsZXQgaSA9IDAsIGxlbiA9IG11dGF0aW9ucy5sZW5ndGg7IGkgPCBsZW47IGkrKykgewogICAgICAgICAgICAgICAgbGV0IG11dGF0aW9uID0gbXV0YXRpb25zW2ldLCAkdGFyZ2V0ID0gJChtdXRhdGlvbi50YXJnZXQpOwogICAgICAgICAgICAgICAgbGV0ICRzZWN0aW9uID0gJHRhcmdldC5maW5kKCdmaWd1cmUnKS5maW5kKCdzZWN0aW9uJyk7CiAgICAgICAgICAgICAgICBpZigkc2VjdGlvbi5sZW5ndGggPD0gMCkgY29udGludWU7CiAgICAgICAgICAgICAgICBsZXQgY2xhc3NOYW1lID0gJHNlY3Rpb24uY2hpbGRyZW4oJ2RpdicpLmVxKDEpLmF0dHIoJ2NsYXNzJykuc3BsaXQoJyAnKVsxXTsKICAgICAgICAgICAgICAgIEdNLnNldFZhbHVlKCdzaGFyZUJ1dHRvbkNvbnRhaW5lclNlbGVjdG9yJywgYC4ke2NsYXNzTmFtZX1gKTsKICAgICAgICAgICAgICAgIG9ic2VydmVyLmRpc2Nvbm5lY3QoKTsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIC8vIOaYvuekuuWNleWbvuWOn+WbvgogICAgICAgIG9ic2VydmVyRmFjdG9yeSh7CiAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiAobXV0YXRpb25zLCBvYnNlcnZlcikgewogICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDAsIGxlbiA9IG11dGF0aW9ucy5sZW5ndGg7IGkgPCBsZW47IGkrKykgewogICAgICAgICAgICAgICAgICAgIGxldCBtdXRhdGlvbiA9IG11dGF0aW9uc1tpXSwgJHRhcmdldCA9ICQobXV0YXRpb24udGFyZ2V0KSwKICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXggPSAkdGFyZ2V0LmF0dHIoJ2RhdGEtaW5kZXgnKSB8fCAwLAogICAgICAgICAgICAgICAgICAgICAgICB1cmwgPSBpbGx1c3QoKS51cmxzLm9yaWdpbmFsLnJlcGxhY2UoL19wXGRcLi8sIGBfcCR7aW5kZXh9LmApOwogICAgICAgICAgICAgICAgICAgIGxldCByZXBsYWNlSW1nID0gZnVuY3Rpb24gKCR0YXJnZXQsIGF0dHIsIHZhbHVlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBvbGRWYWx1ZSA9ICR0YXJnZXQuYXR0cihhdHRyKTsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5ldyBSZWdFeHAoYC4qaVwucHhpbWdcLm5ldC4qXC8ke2lsbHVzdCgpLmlkfV8uKmApLnRlc3Qob2xkVmFsdWUpICYmICEvLitvcmlnaW5hbC4rLy50ZXN0KG9sZFZhbHVlKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRhcmdldC5hdHRyKGF0dHIsIHZhbHVlKS5jc3MoJ2ZpbHRlcicsICdub25lJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGFyZ2V0LmZpdFdpbmRvdygpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICAvLyAxLiDlj6rkv67mlLnlsZ7mgKfnmoTmg4XlhrUo5aSa5Zu+6K+m5oOF6aG1KQogICAgICAgICAgICAgICAgICAgIGlmIChtdXRhdGlvbi50eXBlID09PSAnYXR0cmlidXRlcycpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmVwbGFjZUltZygkdGFyZ2V0LCBtdXRhdGlvbi5hdHRyaWJ1dGVOYW1lLCB1cmwpOwogICAgICAgICAgICAgICAgICAgICAgICBhZGRJbWdTaXplKHskaW1nOiAkdGFyZ2V0LCBwb3NpdGlvbjogJ3JlbGF0aXZlJ30pOyAvLyDmmL7npLrlm77niYflpKflsI8KICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIC8vIDIuIOaPkuWFpeiKgueCueeahOaDheWGtSjkvZzlk4HpppbpobXljZXlm74pCiAgICAgICAgICAgICAgICAgICAgaWYgKG11dGF0aW9uLnR5cGUgPT09ICdjaGlsZExpc3QnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGxldCAkbGluayA9ICR0YXJnZXQuZmluZCgnYVtocmVmKj0iaS5weGltZy5uZXQiXSxpbWdbc3JjKj0iaS5weGltZy5uZXQiXSxpbWdbc3Jjc2V0Kj0iaS5weGltZy5uZXQiXScpOwogICAgICAgICAgICAgICAgICAgICAgICBsZXQgJGxpbmsgPSAkdGFyZ2V0LmZpbmQoJ2ltZ1tzcmNzZXRdJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICRsaW5rLmVhY2goZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0ICR0aGlzID0gJCh0aGlzKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcGxhY2VJbWcoJHRoaXMsICdocmVmJywgdXJsKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcGxhY2VJbWcoJHRoaXMsICdzcmMnLCB1cmwpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVwbGFjZUltZygkdGhpcywgJ3NyY3NldCcsIHVybCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRJbWdTaXplKHskaW1nOiAkdGhpc30pOyAvLyDmmL7npLrlm77niYflpKflsI8KICAgICAgICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgLy8gMy4g56e76Zmk6ams6LWb5YWL6YGu572pLCBodHRwczovL3d3dy5waXhpdi5uZXQvbWVtYmVyX2lsbHVzdC5waHA/bW9kZT1tZWRpdW0maWxsdXN0X2lkPTUwMzU4NjM4CiAgICAgICAgICAgICAgICAgICAgLy8gJCgnLmUycDhyeGMyJykuaGlkZSgpOyAvLyDmh5LlvpfpgILphY3kuoYsIOiHquihjOWOu+S4quS6uui1hOaWmeiuvue9riBodHRwczovL3d3dy5waXhpdi5uZXQvc2V0dGluZ191c2VyLnBocAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBvcHRpb246IHthdHRyaWJ1dGVzOiB0cnVlLCBjaGlsZExpc3Q6IHRydWUsIHN1YnRyZWU6IHRydWUsIGF0dHJpYnV0ZUZpbHRlcjogWydzcmMnLCAnc3Jjc2V0JywgJ2hyZWYnXX0KICAgICAgICB9KTsKICAgICAgICAvLyDkuIvovb3liqjlm77luKd6aXAsIGdpZuWbvgogICAgICAgIG9ic2VydmVyRmFjdG9yeShmdW5jdGlvbiAobXV0YXRpb25zLCBvYnNlcnZlcikgewogICAgICAgICAgICBmb3IgKGxldCBpID0gMCwgbGVuID0gbXV0YXRpb25zLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgICAgICAgICBsZXQgbXV0YXRpb24gPSBtdXRhdGlvbnNbaV0sICR0YXJnZXQgPSAkKG11dGF0aW9uLnRhcmdldCk7CgogICAgICAgICAgICAgICAgLy8gMS4g5Y2V5Zu+44CB5aSa5Zu+44CBZ2lm5Zu+5LiJ56eN5qih5byPCiAgICAgICAgICAgICAgICBsZXQgJHNoYXJlQnRuID0gJHRhcmdldC5maW5kKHNoYXJlQnV0dG9uQ29udGFpbmVyU2VsZWN0b3IpLCAkY2FudmFzID0gJHRhcmdldC5maW5kKCdjYW52YXMnKTsKICAgICAgICAgICAgICAgIGFkZEltZ1NpemUoeyRpbWc6ICRjYW52YXN9KTsgLy8g5pi+56S65Zu+54mH5aSn5bCPCgogICAgICAgICAgICAgICAgaWYgKCFpc0dpZk1vZGUoKSB8fCBtdXRhdGlvbi50eXBlICE9PSAnY2hpbGRMaXN0JyB8fAogICAgICAgICAgICAgICAgICAgICRzaGFyZUJ0bi5sZW5ndGggPD0gMCB8fAogICAgICAgICAgICAgICAgICAgICR0YXJnZXQuZmluZCgnI2FoYW8tZG93bmxvYWQtemlwJykubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn5LiL6L29Z2lm5Zu+Jyk7CgogICAgICAgICAgICAgICAgLy8gMy4g5Yid5aeL5YyWIOS4i+i9veaMiemSrgogICAgICAgICAgICAgICAgbGV0ICR6aXBCdG4gPSBpbml0RG93bmxvYWRCdG4oewogICAgICAgICAgICAgICAgICAgICRzaGFyZUJ1dHRvbkNvbnRhaW5lcjogJHNoYXJlQnRuLAogICAgICAgICAgICAgICAgICAgIGlkOiAnYWhhby1kb3dubG9hZC16aXAnLAogICAgICAgICAgICAgICAgICAgIHRleHQ6ICd6aXAnLAogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBsZXQgJGdpZkJ0biA9IGluaXREb3dubG9hZEJ0bih7CiAgICAgICAgICAgICAgICAgICAgJHNoYXJlQnV0dG9uQ29udGFpbmVyOiAkc2hhcmVCdG4sCiAgICAgICAgICAgICAgICAgICAgaWQ6ICdhaGFvLWRvd25sb2FkLWdpZicsCiAgICAgICAgICAgICAgICAgICAgdGV4dDogJ2dpZiAwJScKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIC8vIDQuIOS7jiBwaXhpdiDlrpjmlrkgYXBpIOiOt+WPliBnaWYg55qE5pWw5o2uCiAgICAgICAgICAgICAgICAkLmFqYXgoewogICAgICAgICAgICAgICAgICAgIHVybDogYC9hamF4L2lsbHVzdC8ke2lsbHVzdCgpLmlsbHVzdElkfS91Z29pcmFfbWV0YWAsIGRhdGFUeXBlOiAnanNvbicsCiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogcmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAvLyAyLjEuIOWIneWni+WMliB6aXAg5LiL6L295oyJ6ZKuIOeCueWHu+S6i+S7tgogICAgICAgICAgICAgICAgICAgICAgICAkemlwQnRuLmZpbmQoJ2J1dHRvbicpLm9uKCdjbGljaycsICgpID0+IHdpbmRvdy5vcGVuKHJlc3BvbnNlLmJvZHkub3JpZ2luYWxTcmMpKTsKCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIDIuMi4g5Yid5aeL5YyWIGdpZiDkuIvovb3mjInpkq4g54K55Ye75LqL5Lu2CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIEdJRl93b3JrZXJfVVJMIOadpeiHqiBodHRwczovL2dyZWFzeWZvcmsub3JnL3NjcmlwdHMvMjk2My1naWYtanMvY29kZS9naWZqcy5qcz92ZXJzaW9uPTg1OTYKICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGdpZlVybCwgZ2lmRnJhbWVzID0gW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnaWZGYWN0b3J5ID0gbmV3IEdJRih7d29ya2VyczogMSwgcXVhbGl0eTogMTAsIHdvcmtlclNjcmlwdDogR0lGX3dvcmtlcl9VUkx9KTsKCiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGZyYW1lSWR4ID0gMCwgZnJhbWVzID0gcmVzcG9uc2UuYm9keS5mcmFtZXMsIGZyYW1lc0xlbiA9IGZyYW1lcy5sZW5ndGg7IGZyYW1lSWR4IDwgZnJhbWVzTGVuOyBmcmFtZUlkeCsrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgZnJhbWUgPSBmcmFtZXNbaV0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsID0gaWxsdXN0KCkudXJscy5vcmlnaW5hbC5yZXBsYWNlKCd1Z29pcmEwLicsIGB1Z29pcmEke2ZyYW1lSWR4fS5gKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdNLnhtbEh0dHBSZXF1ZXN0KHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdHRVQnLCB1cmw6IHVybCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7cmVmZXJlcjogJ2h0dHBzOi8vd3d3LnBpeGl2Lm5ldC8nfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVycmlkZU1pbWVUeXBlOiAndGV4dC9wbGFpbjsgY2hhcnNldD14LXVzZXItZGVmaW5lZCcsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25sb2FkOiBmdW5jdGlvbiAoeGhyKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIDIuMi4xLiDovazkuLpibG9i57G75Z6LCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCByID0geGhyLnJlc3BvbnNlVGV4dCwgZGF0YSA9IG5ldyBVaW50OEFycmF5KHIubGVuZ3RoKSwgaSA9IDA7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChpIDwgci5sZW5ndGgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFbaV0gPSByLmNoYXJDb2RlQXQoaSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpKys7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHN1ZmZpeCA9IHVybC5zcGxpdCgnLicpLnNwbGljZSgtMSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBibG9iID0gbmV3IEJsb2IoW2RhdGFdLCB7dHlwZTogbWltZVR5cGUoc3VmZml4KX0pOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gMi4yLjIuIOWOi+WFpWdpZkZyYW1lc+aVsOe7hOS4rSwg5omL5Yqo5ZCM5q2lc3luYwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgaW1nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGltZy5zcmMgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbWcud2lkdGggPSBpbGx1c3QoKS53aWR0aDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1nLmhlaWdodCA9IGlsbHVzdCgpLmhlaWdodDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1nLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdpZkZyYW1lc1tmcmFtZUlkeF0gPSB7ZnJhbWU6IGltZywgb3B0aW9uOiB7ZGVsYXk6IGZyYW1lLmRlbGF5fX07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoT2JqZWN0LmtleXMoZ2lmRnJhbWVzKS5sZW5ndGggPj0gZnJhbWVzTGVuKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJC5lYWNoKGdpZkZyYW1lcywgKGksIGYpID0+IGdpZkZhY3RvcnkuYWRkRnJhbWUoZi5mcmFtZSwgZi5vcHRpb24pKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnaWZGYWN0b3J5LnJlbmRlcigpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGdpZkZhY3Rvcnkub24oJ3Byb2dyZXNzJywgZnVuY3Rpb24gKHBjdCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGdpZkJ0bi5maW5kKCdwJykudGV4dChgZ2lmICR7cGFyc2VJbnQocGN0ICogMTAwKX0lYCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICBnaWZGYWN0b3J5Lm9uKCdmaW5pc2hlZCcsIGZ1bmN0aW9uIChibG9iKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnaWZVcmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCAkYSA9ICQoJzxhPjwvYT4nKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5hdHRyKCdocmVmJywgZ2lmVXJsKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5hdHRyKCdkb3dubG9hZCcsIGAke2lsbHVzdCgpLmlsbHVzdElkfS5naWZgKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRnaWZCdG4uZmluZCgnYnV0dG9uJykud3JhcCgkYSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICAkZ2lmQnRuLmZpbmQoJ2J1dHRvbicpLm9uKCdjbGljaycsICgpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZ2lmVXJsKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ0dpZuacquWKoOi9veWujOavlSwg6K+356iN562J54mH5Yi7IScpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFkYmxvY2sg56aB5q2i55u05o6l5omT5byAIGJsb2IgdXJsLCBodHRwczovL2dpdGh1Yi5jb20vam5vcmRiZXJnL2dpZi5qcy9pc3N1ZXMvNzEjaXNzdWVjb21tZW50LTM2NzI2MDI4NAogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gd2luZG93Lm9wZW4oZ2lmVXJsKTsKICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgLy8gNS4g5Y+W5raI55uR5ZCsCiAgICAgICAgICAgICAgICBHTS5nZXRWYWx1ZSgnTU8nLCB0cnVlKS50aGVuKGZ1bmN0aW9uICh2KSB7IGlmKCF2KSBvYnNlcnZlci5kaXNjb25uZWN0KCk7IH0pOwogICAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgLy8g5LiL6L295aSa5Zu+emlwCiAgICAgICAgb2JzZXJ2ZXJGYWN0b3J5KGZ1bmN0aW9uIChtdXRhdGlvbnMsIG9ic2VydmVyKSB7CiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwLCBsZW4gPSBtdXRhdGlvbnMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICAgICAgICAgIGxldCBtdXRhdGlvbiA9IG11dGF0aW9uc1tpXSwgJHRhcmdldCA9ICQobXV0YXRpb24udGFyZ2V0KTsKCiAgICAgICAgICAgICAgICAvLyAxLiDljZXlm77jgIHlpJrlm77jgIFnaWblm77kuInnp43mqKHlvI8KICAgICAgICAgICAgICAgIGxldCAkc2hhcmVCdG4gPSAkdGFyZ2V0LmZpbmQoc2hhcmVCdXR0b25Db250YWluZXJTZWxlY3Rvcik7CiAgICAgICAgICAgICAgICBpZiAoIWlzTW9yZU1vZGUoKSB8fCBtdXRhdGlvbi50eXBlICE9PSAnY2hpbGRMaXN0JyB8fCAhJHNoYXJlQnRuLmxlbmd0aCB8fCAhISR0YXJnZXQuZmluZCgnI2FoYW8tZG93bmxvYWQtemlwJykubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfkuIvovb3lpJrlm74nKTsKCiAgICAgICAgICAgICAgICAvLyAzLiDliJ3lp4vljJYg5Zu+54mH5pWw6YePLCDlm77niYd1cmwKICAgICAgICAgICAgICAgIGxldCB6aXAgPSBuZXcgSlNaaXAoKTsKICAgICAgICAgICAgICAgIGxldCBkb3dubG9hZGVkID0gMDsgICAgICAgICAgIC8vIOS4i+i9veWujOaIkOaVsOmHjwogICAgICAgICAgICAgICAgbGV0IG51bSA9IGlsbHVzdCgpLnBhZ2VDb3VudDsgLy8g5LiL6L2955uu5qCH5pWw6YePCiAgICAgICAgICAgICAgICBsZXQgdXJsID0gaWxsdXN0KCkudXJscy5vcmlnaW5hbDsKICAgICAgICAgICAgICAgIGxldCBpbWdVcmxzID0gQXJyYXkocGFyc2VJbnQobnVtKSkuZmlsbCgpCiAgICAgICAgICAgICAgICAgICAgLm1hcCgodmFsdWUsIGluZGV4KSA9PiB1cmwucmVwbGFjZSgvX3BcZFwuLywgYF9wJHtpbmRleH0uYCkpOwoKICAgICAgICAgICAgICAgIC8vIDQuIOWIneWni+WMliDkuIvovb3mjInpkq4sIOWkjeWItuWIhuS6q+aMiemSruW5tuaXi+i9rDE4MOW6pgogICAgICAgICAgICAgICAgbGV0ICR6aXBCdG4gPSBpbml0RG93bmxvYWRCdG4oewogICAgICAgICAgICAgICAgICAgICRzaGFyZUJ1dHRvbkNvbnRhaW5lcjogJHNoYXJlQnRuLAogICAgICAgICAgICAgICAgICAgIGlkOiAnYWhhby1kb3dubG9hZC16aXAnLAogICAgICAgICAgICAgICAgICAgIHRleHQ6IGAke2kxOG4oJ2Rvd25sb2FkJyl9MC8ke251bX1gLAogICAgICAgICAgICAgICAgICAgIGNsaWNrRnVuOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIDMuMS4g5omL5Yqoc3luYywg6YG/5YWN5LiL6L295LiN5a6M5YWoCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkb3dubG9hZGVkIDwgbnVtKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGVydChpMThuKCdkb3dubG9hZF93YWl0JykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIDMuMi4g5L2/55SoanN6aXAuanPlkoxGaWxlU2F2ZXIuanPljovnvKnlubbkuIvovb3lm77niYcKICAgICAgICAgICAgICAgICAgICAgICAgemlwLmdlbmVyYXRlQXN5bmMoe3R5cGU6ICdibG9iJywgYmFzZTY0OiB0cnVlfSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKGNvbnRlbnQgPT4gc2F2ZUFzKGNvbnRlbnQsIGAke2lsbHVzdCgpLmlsbHVzdElkfS56aXBgKSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgLy8gNS4g5LiL6L295Zu+54mHLCBodHRwczovL3dpa2kuZ3JlYXNlc3BvdC5uZXQvR00ueG1sSHR0cFJlcXVlc3QKICAgICAgICAgICAgICAgICQuZWFjaChpbWdVcmxzLCBmdW5jdGlvbiAoaW5kZXgsIHVybCkgewogICAgICAgICAgICAgICAgICAgIEdNLnhtbEh0dHBSZXF1ZXN0KHsKICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnR0VUJywgdXJsOiB1cmwsCiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHtyZWZlcmVyOiAnaHR0cHM6Ly93d3cucGl4aXYubmV0Lyd9LAogICAgICAgICAgICAgICAgICAgICAgICBvdmVycmlkZU1pbWVUeXBlOiAndGV4dC9wbGFpbjsgY2hhcnNldD14LXVzZXItZGVmaW5lZCcsCiAgICAgICAgICAgICAgICAgICAgICAgIG9ubG9hZDogZnVuY3Rpb24gKHhocikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gNC4xLiDovazkuLpibG9i57G75Z6LCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgciA9IHhoci5yZXNwb25zZVRleHQsIGRhdGEgPSBuZXcgVWludDhBcnJheShyLmxlbmd0aCksIGkgPSAwOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKGkgPCByLmxlbmd0aCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFbaV0gPSByLmNoYXJDb2RlQXQoaSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaSsrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHN1ZmZpeCA9IHVybC5zcGxpdCgnLicpLnNwbGljZSgtMSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgYmxvYiA9IG5ldyBCbG9iKFtkYXRhXSwge3R5cGU6IG1pbWVUeXBlKHN1ZmZpeCl9KTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyA0LjIuIOWOi+e8qeWbvueJhwogICAgICAgICAgICAgICAgICAgICAgICAgICAgemlwLmZpbGUoYCR7aWxsdXN0KCkuaWxsdXN0SWR9XyR7aW5kZXh9LiR7c3VmZml4fWAsIGJsb2IsIHtiaW5hcnk6IHRydWV9KTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyA0LjMuIOaJi+WKqHN5bmMsIOmBv+WFjeS4i+i9veS4jeWujOWFqOeahOaDheWGtQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZG93bmxvYWRlZCsrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHppcEJ0bi5maW5kKCdwJykuaHRtbChgJHtpMThuKCdkb3dubG9hZCcpfSR7ZG93bmxvYWRlZH0vJHtudW19YCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIC8vIDYuIOWPlua2iOebkeWQrAogICAgICAgICAgICAgICAgR00uZ2V0VmFsdWUoJ01PJywgdHJ1ZSkudGhlbihmdW5jdGlvbiAodikgeyBpZighdikgb2JzZXJ2ZXIuZGlzY29ubmVjdCgpOyB9KTsKICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgfSkoKTsKCiAgICAvLyA1LiDlnKjnlLvluIjpobXpnaLlkozkvZzlk4HpobXpnaLmmL7npLrnlLvluIhpZOOAgeeUu+W4iOiDjOaZr+Wbviwg55So5oi35aS05YOP5YWB6K645Y+z6ZSu5L+d5a2YCiAgICBvYnNlcnZlckZhY3RvcnkoZnVuY3Rpb24gKG11dGF0aW9ucywgb2JzZXJ2ZXIpIHsKICAgICAgICBpZiAoIWlzTWVtYmVySW5kZXhQYWdlKCkpIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICBmb3IgKGxldCBpID0gMCwgbGVuID0gbXV0YXRpb25zLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgICAgIGxldCBtdXRhdGlvbiA9IG11dGF0aW9uc1tpXTsKICAgICAgICAgICAgLy8gMS4g5Yik5pat5piv5ZCm5pS55Y+Y6IqC54K5LCDmiJbogIXmmK/lkKbmnIlbc2VjdGlvbl3oioLngrkKICAgICAgICAgICAgbGV0ICR0YXJnZXQgPSAkKG11dGF0aW9uLnRhcmdldCksIGV4dGVybmFsTGlua3NDb250YWluZXIgPSAnXzJBT3RmbDknOyAvLyDlpJrkuKrlj43mt7fmt4ZleHRlcm5hbExpbmtzQ29udGFpbmVyCiAgICAgICAgICAgIGxldCAkcm93ID0gJChgdWwuJHtleHRlcm5hbExpbmtzQ29udGFpbmVyfWApLnBhcmVudCgpOwogICAgICAgICAgICBpZiAobXV0YXRpb24udHlwZSAhPT0gJ2NoaWxkTGlzdCcgfHwgJHJvdy5sZW5ndGggPD0gMCB8fCAkKCdib2R5JykuZmluZCgnI3VpZCcpLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIDEuIOa3u+WKoOaWsOeahOS4gOihjOeahGRpdgogICAgICAgICAgICBsZXQgJGFoYW9Sb3cgPSAkcm93LmNsb25lKCksICR1bCA9ICRhaGFvUm93LmZpbmQoJ3VsJyk7CiAgICAgICAgICAgICR1bC5lbXB0eSgpOwogICAgICAgICAgICAkcm93LmJlZm9yZSgkYWhhb1Jvdyk7CgogICAgICAgICAgICAvLyAyLiDmmL7npLrnlLvluIhpZCwg54K55Ye76Ieq5Yqo5aSN5Yi25Yiw5Ymq6LS05p2/CiAgICAgICAgICAgIGxldCAkdWlkID0gJChgPGxpIGlkPSJ1aWQiPjxkaXYgc3R5bGU9ImZvbnQtc2l6ZTogMjBweDtmb250LXdlaWdodDogNzAwO2NvbG9yOiAjMzMzO21hcmdpbi1yaWdodDogOHB4O2xpbmUtaGVpZ2h0OiAxIj5VSUQ6JHt1aWR9PC9kaXY+PC9saT5gKQogICAgICAgICAgICAgICAgLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICBsZXQgJHRoaXMgPSAkKHRoaXMpOwogICAgICAgICAgICAgICAgICAgICR0aGlzLmh0bWwoYDxzcGFuPlVJRCR7aTE4bignY29weV90b19jbGlwYm9hcmQnKX08L3NwYW4+YCk7CiAgICAgICAgICAgICAgICAgICAgR00uc2V0Q2xpcGJvYXJkKHVpZCk7CiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLmh0bWwoYDxzcGFuPlVJRCR7dWlkfTwvc3Bhbj5gKTsKICAgICAgICAgICAgICAgICAgICB9LCAyMDAwKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAkdWwuYXBwZW5kKCR1aWQpOwoKICAgICAgICAgICAgLy8gMy4g5pi+56S655S75biI6IOM5pmv5Zu+CiAgICAgICAgICAgIGxldCBiYWNrZ3JvdW5kID0gZ2xvYmFsSW5pdERhdGEucHJlbG9hZC51c2VyW3VpZF0uYmFja2dyb3VuZDsKICAgICAgICAgICAgbGV0IHVybCA9IChiYWNrZ3JvdW5kICYmIGJhY2tncm91bmQudXJsKSB8fCAnJzsKICAgICAgICAgICAgbGV0ICRiZ2xpID0gJCgnPGxpPjxkaXYgc3R5bGU9ImZvbnQtc2l6ZTogMjBweDtmb250LXdlaWdodDogNzAwO2NvbG9yOiAjMzMzO21hcmdpbi1yaWdodDogOHB4O2xpbmUtaGVpZ2h0OiAxIj48L2Rpdj48L2xpPicpLAogICAgICAgICAgICAgICAgJGJnID0gJGJnbGkuZmluZCgnZGl2Jyk7CiAgICAgICAgICAgIGlmICghIXVybCAmJiB1cmwgIT09ICdub25lJykgewogICAgICAgICAgICAgICAgJGJnLmFwcGVuZChgPGltZyBzcmM9IiR7dXJsfSIgd2lkdGg9IjMwcHgiPjxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSIke3VybH0iPiR7aTE4bignYmFja2dyb3VuZCcpfTwvYT5gKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICRiZy5hcHBlbmQoYDxzcGFuPiR7aTE4bignYmFja2dyb3VuZF9ub3RfZm91bmQnKX08L3NwYW4+YCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgJHVsLmFwcGVuZCgkYmdsaSk7CgogICAgICAgICAgICAvLyA0LiDlj5bmtojnm5HlkKwKICAgICAgICAgICAgR00uZ2V0VmFsdWUoJ01PJywgdHJ1ZSkudGhlbihmdW5jdGlvbiAodikgeyBpZighdikgb2JzZXJ2ZXIuZGlzY29ubmVjdCgpOyB9KTsKICAgICAgICB9CiAgICB9KTsgLy8g55S75biI6aG16Z2iVUkKICAgIG9ic2VydmVyRmFjdG9yeShmdW5jdGlvbiAobXV0YXRpb25zLCBvYnNlcnZlcikgewogICAgICAgIGlmICghaXNBcnR3b3JrUGFnZSgpKSB7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIGZvciAobGV0IGkgPSAwLCBsZW4gPSBtdXRhdGlvbnMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICAgICAgbGV0IG11dGF0aW9uID0gbXV0YXRpb25zW2ldOwogICAgICAgICAgICAvLyAxLiDliKTmlq3mmK/lkKbmlLnlj5joioLngrksIOaIluiAheaYr+WQpuaciVtzZWN0aW9uXeiKgueCuQogICAgICAgICAgICBsZXQgJGFzaWRlID0gJChtdXRhdGlvbi50YXJnZXQpLnBhcmVudCgpLmZpbmQoJy4nICsgY2xhenooJ3JpZ2h0Q29sdW1uJykpOwogICAgICAgICAgICBpZiAobXV0YXRpb24udHlwZSAhPT0gJ2NoaWxkTGlzdCcgfHwgJGFzaWRlLmxlbmd0aCA8PSAwKSB7CiAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICBsZXQgJHNlY3Rpb24gPSAkYXNpZGUuZmluZCgnc2VjdGlvbicpOwogICAgICAgICAgICBpZiAoJHNlY3Rpb24ubGVuZ3RoIDw9IDAgfHwgJHNlY3Rpb24uZmluZCgnI2FoYW8tYmFja2dyb3VuZCcpLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGxldCB1c2VySWNvblNlbGVjdG9yID0gJChgYVtocmVmPSIvbWVtYmVyLnBocD9pZD0ke3VpZH0iXWApLmF0dHIoJ2NsYXNzJyk7CiAgICAgICAgICAgIGxldCAkdXNlckljb25BID0gJHNlY3Rpb24uZmluZChgKltjbGFzcz0iJHt1c2VySWNvblNlbGVjdG9yfSJdYCk7CiAgICAgICAgICAgIGxldCAkcm93ID0gJHVzZXJJY29uQS5wYXJlbnQoKTsKCiAgICAgICAgICAgIC8vIDIuIOaYvuekuueUu+W4iOiDjOaZr+WbvgogICAgICAgICAgICBsZXQgYmFja2dyb3VuZCA9IGdsb2JhbEluaXREYXRhLnByZWxvYWQudXNlclt1aWRdLmJhY2tncm91bmQ7CiAgICAgICAgICAgIGxldCB1cmwgPSAoYmFja2dyb3VuZCAmJiBiYWNrZ3JvdW5kLnVybCkgfHwgJyc7CiAgICAgICAgICAgIGxldCAkYmdEaXYgPSAkcm93LmNsb25lKCkuYXR0cignaWQnLCAnYWhhby1iYWNrZ3JvdW5kJyk7CiAgICAgICAgICAgICRiZ0Rpdi5jaGlsZHJlbignYScpLnJlbW92ZSgpOwogICAgICAgICAgICAkYmdEaXYucHJlcGVuZChgPGltZyBzcmM9IiR7dXJsfSIgd2lkdGg9IjEwJSIvPmApOwogICAgICAgICAgICAkYmdEaXYuZmluZCgnZGl2IGEnKS5hdHRyKCdocmVmJywgISF1cmwgPyB1cmwgOiAnamF2YXNjcmlwdDp2b2lkKDApJykuYXR0cigndGFyZ2V0JywgJ19ibGFuaycpCiAgICAgICAgICAgICAgICAudGV4dCghIXVybCA/IGkxOG4oJ2JhY2tncm91bmQnKSA6IGkxOG4oJ2JhY2tncm91bmRfbm90X2ZvdW5kJykpOwogICAgICAgICAgICAkcm93LmFmdGVyKCRiZ0Rpdik7CgogICAgICAgICAgICAvLyAzLiDmmL7npLrnlLvluIhpZCwg54K55Ye76Ieq5Yqo5aSN5Yi25Yiw5Ymq6LS05p2/CiAgICAgICAgICAgIGxldCAkdWlkID0gJHJvdy5jbG9uZSgpOwogICAgICAgICAgICAkdWlkLmNoaWxkcmVuKCdhJykucmVtb3ZlKCk7CiAgICAgICAgICAgICR1aWQuZmluZCgnYScpLmF0dHIoJ2hyZWYnLCAnamF2YXNjcmlwdDp2b2lkKDApJykuYXR0cignaWQnLCAnYWhhby11aWQnKS50ZXh0KCdVSUQ6ICcgKyB1aWQpOwogICAgICAgICAgICAkdWlkLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIGxldCAkdGhpcyA9ICQodGhpcyk7CiAgICAgICAgICAgICAgICAkdGhpcy5maW5kKCdhJykudGV4dCgnVUlEJyArIGkxOG4oJ2NvcHlfdG9fY2xpcGJvYXJkJykpOwogICAgICAgICAgICAgICAgR00uc2V0Q2xpcGJvYXJkKHVpZCk7CiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAkdGhpcy5maW5kKCdhJykudGV4dCgnVUlEOiAnICsgdWlkKTsKICAgICAgICAgICAgICAgIH0sIDIwMDApOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgJGJnRGl2LmFmdGVyKCR1aWQpOwoKICAgICAgICAgICAgLy8gNC4g5Y+W5raI55uR5ZCsCiAgICAgICAgICAgIEdNLmdldFZhbHVlKCdNTycsIHRydWUpLnRoZW4oZnVuY3Rpb24gKHYpIHsgaWYoIXYpIG9ic2VydmVyLmRpc2Nvbm5lY3QoKTsgfSk7CiAgICAgICAgfQogICAgfSk7IC8vIOS9nOWTgemhtemdolVJCiAgICAvLyDop6PpmaQg55So5oi35aS05YOPIOeahGJhY2tncm91bmQg6ZmQ5Yi2LCDmlrnkvr/kv53lrZjnlKjmiLflpLTlg48KICAgIG9ic2VydmVyRmFjdG9yeShmdW5jdGlvbiAobXV0YXRpb25zLCBvYnNlcnZlcikgewogICAgICAgIGZvciAobGV0IGkgPSAwLCBsZW4gPSBtdXRhdGlvbnMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICAgICAgbGV0IG11dGF0aW9uID0gbXV0YXRpb25zW2ldOwogICAgICAgICAgICAvLyAxLiDliKTmlq3mmK/lkKbmlLnlj5joioLngrkKICAgICAgICAgICAgaWYgKG11dGF0aW9uLnR5cGUgIT09ICdjaGlsZExpc3QnKSB7CiAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gMi4g5bCG5L2c6ICF5aS05YOP55SxIGJhY2tncm91bmQg6L2s5Li6IDxpbWc+CiAgICAgICAgICAgIGxldCAkdGFyZ2V0ID0gJChtdXRhdGlvbi50YXJnZXQpOwogICAgICAgICAgICAkdGFyZ2V0LmZpbmQoJ2Rpdltyb2xlPSJpbWciXScpLmVhY2goZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgbGV0ICR0aGlzID0gJCh0aGlzKTsKICAgICAgICAgICAgICAgIGxldCB0YWdOYW1lID0gJHRoaXMucHJvcCgndGFnTmFtZScpOwoKICAgICAgICAgICAgICAgIGxldCBpbWdVcmwgPSAkdGhpcy5nZXRCYWNrZ3JvdW5kVXJsKCk7CiAgICAgICAgICAgICAgICBpZiAoIWltZ1VybCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBsZXQgJHVzZXJJbWcgPSAkKCc8aW1nIGNsYXNzPSJhaGFvLXVzZXItaW1nIiBzcmM9IiIvPicpLmF0dHIoJ3NyYycsIGltZ1VybCk7CiAgICAgICAgICAgICAgICAkdXNlckltZy5jc3MoJ3dpZHRoJywgJHRoaXMuY3NzKCd3aWR0aCcpKQogICAgICAgICAgICAgICAgICAgIC5jc3MoJ2hlaWdodCcsICR0aGlzLmNzcygnaGVpZ2h0JykpOwoKICAgICAgICAgICAgICAgIC8vIGlmKHRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ2EnKSB7CiAgICAgICAgICAgICAgICAvLyAgICAgJHRoaXMuaHRtbCgkdXNlckltZyk7CiAgICAgICAgICAgICAgICAvLyAgICAgJHRoaXMuY3NzKCdiYWNrZ3JvdW5kLWltYWdlJywgJycpOwogICAgICAgICAgICAgICAgLy8gICAgIHJldHVybjsKICAgICAgICAgICAgICAgIC8vIH0KCiAgICAgICAgICAgICAgICBpZiAodGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnZGl2JykgewogICAgICAgICAgICAgICAgICAgICR1c2VySW1nLmF0dHIoJ2NsYXNzJywgJHRoaXMuYXR0cignY2xhc3MnKSk7CiAgICAgICAgICAgICAgICAgICAgJHVzZXJJbWcuaHRtbCgkdGhpcy5odG1sKCkpOwogICAgICAgICAgICAgICAgICAgICR0aGlzLnJlcGxhY2VXaXRoKCgpID0+ICR1c2VySW1nKTsKICAgICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgLy8gMy4g5bCG6K+E6K665aS05YOP55SxIGJhY2tncm91bmQg6L2s5Li6IDxpbWc+CiAgICAgICAgICAgICR0YXJnZXQuZmluZCgnYVtkYXRhLXVzZXJfaWRdW2RhdGEtc3JjXScpLmVhY2goZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgbGV0ICR0aGlzID0gJCh0aGlzKSwgJGRpdiA9ICR0aGlzLmZpbmQoJ2RpdicpLAogICAgICAgICAgICAgICAgICAgICRpbWcgPSAkKCc8aW1nLz4nKTsKICAgICAgICAgICAgICAgICRpbWcuYXR0cignc3JjJywgJHRoaXMuYXR0cignZGF0YS1zcmMnKSk7CiAgICAgICAgICAgICAgICBpZiAoISEkZGl2Lmxlbmd0aCkgewogICAgICAgICAgICAgICAgICAgICRpbWcuYXR0cignY2xhc3MnLCAkZGl2LmF0dHIoJ2NsYXNzJykpCiAgICAgICAgICAgICAgICAgICAgICAgIC5jc3MoJ3dpZHRoJywgJGRpdi5jc3MoJ3dpZHRoJykpCiAgICAgICAgICAgICAgICAgICAgICAgIC5jc3MoJ2hlaWdodCcsICRkaXYuY3NzKCdoZWlnaHQnKSk7CiAgICAgICAgICAgICAgICAgICAgJHRoaXMuaHRtbCgkaW1nKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgfQogICAgfSk7CgogICAgLy8gNi4g6Ieq5Yqo5Yqg6L296K+E6K66CiAgICAoZnVuY3Rpb24gKCkgewogICAgICAgIGlmICghaXNBcnR3b3JrUGFnZSgpKSB7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgbGV0IG1vcmVDb21tZW50U2VsZWN0b3IgPSAnLl8xSG9tMHFOJzsKICAgICAgICBvYnNlcnZlckZhY3RvcnkoZnVuY3Rpb24gKG11dGF0aW9ucywgb2JzZXJ2ZXIpIHsKICAgICAgICAgICAgZm9yIChsZXQgaSA9IDAsIGxlbiA9IG11dGF0aW9ucy5sZW5ndGg7IGkgPCBsZW47IGkrKykgewogICAgICAgICAgICAgICAgbGV0IG11dGF0aW9uID0gbXV0YXRpb25zW2ldOwogICAgICAgICAgICAgICAgLy8gMS4g5Yik5pat5piv5ZCm5pS55Y+Y6IqC54K5CiAgICAgICAgICAgICAgICBpZiAobXV0YXRpb24udHlwZSAhPT0gJ2NoaWxkTGlzdCcpIHsKICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIC8vIDIuIOaooeaLn+eCueWHu+WKoOi9veaMiemSrgogICAgICAgICAgICAgICAgbGV0ICRtb3JlQ29tbWVudEJ0biA9ICQobXV0YXRpb24udGFyZ2V0KS5maW5kKG1vcmVDb21tZW50U2VsZWN0b3IpOwogICAgICAgICAgICAgICAgJG1vcmVDb21tZW50QnRuLmNsaWNrKCk7CiAgICAgICAgICAgIH0KICAgICAgICB9KTsKICAgIH0pKCk7CgogICAgLy8gNy4g5a+55Li76aG15Yqo5oCB5Lit55qE5Zu+54mH5qCH6K6w5L2c5ZOB57G75Z6LCiAgICAoZnVuY3Rpb24gKCkgewogICAgICAgIGlmICghaXNNZW1iZXJEeW5hbWljUGFnZSgpKSB7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIGxldCBpbGx1c3RUaXRsZVNlbGVjdG9yID0gJy5zdGFjY19yZWZfaWxsdXN0X3RpdGxlJzsKICAgICAgICBvYnNlcnZlckZhY3RvcnkoZnVuY3Rpb24gKG11dGF0aW9ucywgb2JzZXJ2ZXIpIHsKICAgICAgICAgICAgZm9yIChsZXQgaSA9IDAsIGxlbiA9IG11dGF0aW9ucy5sZW5ndGg7IGkgPCBsZW47IGkrKykgewogICAgICAgICAgICAgICAgbGV0IG11dGF0aW9uID0gbXV0YXRpb25zW2ldOwogICAgICAgICAgICAgICAgLy8gMS4g5Yik5pat5piv5ZCm5pS55Y+Y6IqC54K5CiAgICAgICAgICAgICAgICBsZXQgJHRpdGxlID0gJChtdXRhdGlvbi50YXJnZXQpLmZpbmQoaWxsdXN0VGl0bGVTZWxlY3Rvcik7CiAgICAgICAgICAgICAgICBpZiAobXV0YXRpb24udHlwZSAhPT0gJ2NoaWxkTGlzdCcgfHwgISR0aXRsZS5sZW5ndGgpIHsKICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAkdGl0bGUuZWFjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgbGV0ICRhID0gJCh0aGlzKS5maW5kKCdhJyk7CiAgICAgICAgICAgICAgICAgICAgLy8gMS4g5bey57uP5re75Yqg6L+H5qCH6K6w55qE5bCx5LiN5YaN5re75YqgCiAgICAgICAgICAgICAgICAgICAgaWYgKCEhJGEuYXR0cignYWhhby1pbGx1c3QtaWQnKSkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIC8vIDIuIOiOt+WPlnBpZCwg6K6+572u5qCH6K6w6YG/5YWN5LqM5qyh55Sf5oiQCiAgICAgICAgICAgICAgICAgICAgbGV0IGlsbHVzdElkID0gbmV3IFVSTChsb2NhdGlvbi5vcmlnaW4gKyAnLycgKyAkYS5hdHRyKCdocmVmJykpLnNlYXJjaFBhcmFtcy5nZXQoJ2lsbHVzdF9pZCcpOwogICAgICAgICAgICAgICAgICAgICRhLmF0dHIoJ2FoYW8taWxsdXN0LWlkJywgaWxsdXN0SWQpOwogICAgICAgICAgICAgICAgICAgIC8vIDMuIOiwg+eUqOWumOaWuWFwaSwg5Yik5pat5L2c5ZOB57G75Z6LCiAgICAgICAgICAgICAgICAgICAgJC5hamF4KHsKICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiAnL2FqYXgvaWxsdXN0LycgKyBpbGx1c3RJZCwgZGF0YVR5cGU6ICdqc29uJywKICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogcmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGlsbHVzdFR5cGUgPSBwYXJzZUludChyZXNwb25zZS5ib2R5LmlsbHVzdFR5cGUpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGlzTXVsdGlQaWMgPSBwYXJzZUludChyZXNwb25zZS5ib2R5LnBhZ2VDb3VudCkgPiAxOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChpbGx1c3RUeXBlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGEuYWZ0ZXIoJzxwPicgKyAoaXNNdWx0aVBpYyA/IGkxOG4oJ2lsbHVzdF90eXBlX211bHRpcGxlJykgOiBpMThuKCdpbGx1c3RfdHlwZV9zaW5nbGUnKSkgKyAnPC9wPicpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRhLmFmdGVyKCc8cD4nICsgaTE4bignaWxsdXN0X3R5cGVfZ2lmJykgKyAnPC9wPicpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgfSkoKTsKCiAgICAvLyA4LiDlr7lqdW1wLnBocOWPlua2iOmHjeWumuWQkQogICAgKGZ1bmN0aW9uICgpIHsKICAgICAgICBsZXQganVtcFNlbGVjdG9yID0gJ2FbaHJlZio9Imp1bXAucGhwIl0nOwoKICAgICAgICBvYnNlcnZlckZhY3RvcnkoZnVuY3Rpb24gKG11dGF0aW9ucywgb2JzZXJ2ZXIpIHsKICAgICAgICAgICAgZm9yIChsZXQgaSA9IDAsIGxlbiA9IG11dGF0aW9ucy5sZW5ndGg7IGkgPCBsZW47IGkrKykgewogICAgICAgICAgICAgICAgbGV0IG11dGF0aW9uID0gbXV0YXRpb25zW2ldOwogICAgICAgICAgICAgICAgLy8gMS4g5Yik5pat5piv5ZCm5pS55Y+Y6IqC54K5CiAgICAgICAgICAgICAgICBpZiAobXV0YXRpb24udHlwZSAhPT0gJ2NoaWxkTGlzdCcpIHsKICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIC8vIDIuIOS/ruaUuWhyZWYKICAgICAgICAgICAgICAgIGxldCAkanVtcCA9ICQobXV0YXRpb24udGFyZ2V0KS5maW5kKGp1bXBTZWxlY3Rvcik7CiAgICAgICAgICAgICAgICAkanVtcC5lYWNoKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICBsZXQgJHRoaXMgPSAkKHRoaXMpLCB1cmwgPSAkdGhpcy5hdHRyKCdocmVmJykubWF0Y2goL2p1bXBcLnBocFw/KHVybD0pPyguKikkLylbMl07CiAgICAgICAgICAgICAgICAgICAgJHRoaXMuYXR0cignaHJlZicsIGRlY29kZVVSSUNvbXBvbmVudCh1cmwpKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICB9KSgpOwoKICAgIC8vIDkuIOWNlemhteaOkuW6jwogICAgKGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoIWlzU2VhcmNoUGFnZSgpKSB7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgLy8gOS4xLiDnlJ/miJDmjInmlLbol4/mlbDmjpLluo/nmoTmjInpkq4KICAgICAgICBvYnNlcnZlckZhY3RvcnkoewogICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24gKG11dGF0aW9ucywgb2JzZXJ2ZXIpIHsKICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwLCBsZW4gPSBtdXRhdGlvbnMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICAgICAgICAgICAgICBsZXQgbXV0YXRpb24gPSBtdXRhdGlvbnNbaV07CiAgICAgICAgICAgICAgICAgICAgLy8gMS4g5Yik5pat5piv5ZCm5pS55Y+Y6IqC54K5CiAgICAgICAgICAgICAgICAgICAgbGV0ICRtZW51SXRlbSA9ICQobXV0YXRpb24udGFyZ2V0KS5maW5kKCcuc2VhcmNoLXNvcnQtY29udGFpbmVyIHVsLm1lbnUtaXRlbXMnKTsKICAgICAgICAgICAgICAgICAgICBpZiAobXV0YXRpb24udHlwZSAhPT0gJ2NoaWxkTGlzdCcgfHwgJG1lbnVJdGVtLmxlbmd0aCA8PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgLy8gMi4g5Li65YW25LuW5oyJ6ZKu5re75Yqg54K55Ye75LqL5Lu2CiAgICAgICAgICAgICAgICAgICAgJG1lbnVJdGVtLmNoaWxkcmVuKCkub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTsKICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgLy8gMy4g5re75Yqg5oyJ5pS26JeP5pWw5o6S5bqP55qE5oyJ6ZKuCiAgICAgICAgICAgICAgICAgICAgbGV0ICRmYXZvdXJpdGUgPSAkKGA8bGkgY2xhc3M9Il9vcmRlci1pdGVtIj48c3BhbiBjbGFzcz0ic2VhcmNoLW9yZGVyLXRleHQiPiR7aTE4bignc29ydF9ieV9wb3B1bGFyaXR5Jyl9PC9zcGFuPjwvbGk+YCk7CiAgICAgICAgICAgICAgICAgICAgJGZhdm91cml0ZS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIEdNLnNldFZhbHVlKCdvcmRlckJ5UG9wdWxhcicsICEkKHRoaXMpLmhhc0NsYXNzKCdfc2VsZWN0ZWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICRtZW51SXRlbS5wcmVwZW5kKCRmYXZvdXJpdGUpOwogICAgICAgICAgICAgICAgICAgIEdNLmdldFZhbHVlKCdvcmRlckJ5UG9wdWxhcicpLnRoZW4odmFsdWUgPT4gewogICAgICAgICAgICAgICAgICAgICAgICBpZih2YWx1ZSl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZmF2b3VyaXRlLmFkZENsYXNzKCdfc2VsZWN0ZWQnKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgICBvYnNlcnZlci5kaXNjb25uZWN0KCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG5vZGU6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqcy1yZWFjdC1zZWFyY2gtdG9wJykKICAgICAgICB9KTsKCiAgICAgICAgLy8gOS4yLiDmjInmlLbol4/mlbDmjpLluo8KICAgICAgICBHTS5nZXRWYWx1ZSgnb3JkZXJCeVBvcHVsYXInKS50aGVuKHZhbHVlID0+IHsKICAgICAgICAgICAgaWYoIXZhbHVlKSB7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgb2JzZXJ2ZXJGYWN0b3J5KHsKICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiAobXV0YXRpb25zLCBvYnNlcnZlcikgewogICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwLCBsZW4gPSBtdXRhdGlvbnMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG11dGF0aW9uID0gbXV0YXRpb25zW2ldOwogICAgICAgICAgICAgICAgICAgICAgICAvLyAxLiDliKTmlq3mmK/lkKbmlLnlj5joioLngrkKICAgICAgICAgICAgICAgICAgICAgICAgbGV0ICRjb250YWluZXIgPSAkKG11dGF0aW9uLnRhcmdldCkuZmluZCgnZGl2OmZpcnN0Jyk7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtdXRhdGlvbi50eXBlICE9PSAnY2hpbGRMaXN0JyB8fCAkY29udGFpbmVyLmxlbmd0aCA8PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gMi4g6I635Y+W5omA5pyJ55qEaXRlbSwg5o6S5bqP5bm25aGr5YWFCiAgICAgICAgICAgICAgICAgICAgICAgIGxldCAkbGlzdCA9ICRjb250YWluZXIuY2hpbGRyZW4oKTsKICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGdldENvdW50ID0gJCA9PiBwYXJzZUludCgkLmZpbmQoJ3VsLmNvdW50LWxpc3QgYScpLnRleHQoKSkgfHwgMDsKICAgICAgICAgICAgICAgICAgICAgICAgJGxpc3Quc29ydCgoYSwgYikgPT4gZ2V0Q291bnQoJChiKSkgLSBnZXRDb3VudCgkKGEpKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICRjb250YWluZXIuaHRtbCgkbGlzdCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIG5vZGU6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqcy1yZWFjdC1zZWFyY2gtbWlkJykKICAgICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICB9KSgpOwoKICAgIC8vIDEwLiDlhbzlrrnmqKHlvI/lkozmnoHpgJ/mqKHlvI8KICAgIChmdW5jdGlvbiAoKSB7CiAgICAgICAgLy8gMS4g5Yid5aeL5YyWIFVJCiAgICAgICAgbGV0ICRsaSA9ICQoYDxsaSBjbGFzcz0ibGluay1pdGVtIj4KICAgICAgICAgICAgPGEgdGl0bGU9IuWPquWcqOmmlumhteWHuueOsCI+PGlucHV0IHR5cGU9ImNoZWNrYm94IiA+5p6B6YCf5qih5byPPC9pbnB1dD48L2E+PC9saT5gKSwgJGNoZWNrYm94ID0gJGxpLmZpbmQoJ2lucHV0W3R5cGU9ImNoZWNrYm94Il0nKTsKICAgICAgICBHTS5nZXRWYWx1ZSgnTU8nLCB0cnVlKS50aGVuKGZ1bmN0aW9uICh2YWx1ZSkgeyAkY2hlY2tib3gucHJvcCgnY2hlY2tlZCcsIHZhbHVlKTsgfSk7CiAgICAgICAgJCgnbGkuc2V0dGluZ3MtbWVudScpLmFmdGVyKCRsaSk7CgogICAgICAgIC8vIDIuIOeCueWHu+S6i+S7tgogICAgICAgICRsaS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGxldCBjaGVja2VkID0gJGNoZWNrYm94LnByb3AoJ2NoZWNrZWQnKTsKICAgICAgICAgICAgJGNoZWNrYm94LnByb3AoY2hlY2tlZCwgY2hlY2tlZCk7CiAgICAgICAgICAgIEdNLnNldFZhbHVlKCdNTycsIGNoZWNrZWQpOwogICAgICAgIH0pOwoKICAgICAgICAvLyAzLiDlhbzlrrnmqKHlvI/mo4DmtYvmmK/lkKZQSkFY5bm25Yi35paw6aG16Z2iLCBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvNDU4NTAzMS82MzM1OTI2CiAgICAgICAgKGZ1bmN0aW9uKGhpc3RvcnkpewogICAgICAgICAgICBsZXQgcHVzaFN0YXRlID0gaGlzdG9yeS5wdXNoU3RhdGU7CiAgICAgICAgICAgIGhpc3RvcnkucHVzaFN0YXRlID0gZnVuY3Rpb24oc3RhdGUpIHsKICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgaGlzdG9yeS5vbnB1c2hzdGF0ZSA9PSAiZnVuY3Rpb24iKSB7CiAgICAgICAgICAgICAgICAgICAgaGlzdG9yeS5vbnB1c2hzdGF0ZSh7c3RhdGU6IHN0YXRlfSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBHTS5nZXRWYWx1ZSgnTU8nLCB0cnVlKS50aGVuKGZ1bmN0aW9uIChlbmFibGVNTykgewogICAgICAgICAgICAgICAgICAgIGlmKGVuYWJsZU1PKSB7IHJldHVybjsgfQogICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICByZXR1cm4gcHVzaFN0YXRlLmFwcGx5KGhpc3RvcnksIGFyZ3VtZW50cyk7CiAgICAgICAgICAgIH07CiAgICAgICAgfSkod2luZG93Lmhpc3RvcnkpOwogICAgfSkoKTsKCiAgICAvL1RPRE8g5Zu+54mH5LiN6KaB6Ieq5Yqo5LiL6L29IGh0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvemgtQ04vZm9ydW0vZGlzY3Vzc2lvbi81MTk0OS94CiAgICAvL1RPRE8g5Zu+54mH5LiL6L29IOmHjeWRveWQjeinhOWImQogICAgLy9UT0RPIOWinuW8uuaWsOmhtemdomZhbmJveCBodHRwczovL3d3dy5waXhpdi5uZXQvZmFuYm94L2NyZWF0b3IvMjI5MjY2NjE/dXRtX2NhbXBhaWduPXd3d19wcm9maWxlJnV0bV9tZWRpdW09c2l0ZV9mbG93JnV0bV9zb3VyY2U9cGl4aXYKICAgIC8vVE9ETyDml6Xor63ljJYKICAgIC8vVE9ETyDmkJzntKLmoYZ1aea3t+S5sSBodHRwczovL3d3dy5waXhpdi5uZXQvbWVtYmVyX2lsbHVzdC5waHA/bW9kZT1tZWRpdW0maWxsdXN0X2lkPTg5OTY1Nwp9KTs=","requires":[{"meta":{"name":"jquery-2.2.4.min.js","url":"https://code.jquery.com/jquery-2.2.4.min.js","ts":1549970282875,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"jszip.min.js","url":"https://cdn.bootcss.com/jszip/3.1.4/jszip.min.js","ts":1549970282210,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"FileSaver.min.js","url":"https://cdn.bootcss.com/FileSaver.js/1.3.2/FileSaver.min.js","ts":1549970282181,"mimetype":"text/javascript"},"source":"LyohIEBzb3VyY2UgaHR0cDovL3B1cmwuZWxpZ3JleS5jb20vZ2l0aHViL0ZpbGVTYXZlci5qcy9ibG9iL21hc3Rlci9GaWxlU2F2ZXIuanMgKi8KdmFyIHNhdmVBcz1zYXZlQXN8fGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0IjtpZih0eXBlb2YgZT09PSJ1bmRlZmluZWQifHx0eXBlb2YgbmF2aWdhdG9yIT09InVuZGVmaW5lZCImJi9NU0lFIFsxLTldXC4vLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpe3JldHVybn12YXIgdD1lLmRvY3VtZW50LG49ZnVuY3Rpb24oKXtyZXR1cm4gZS5VUkx8fGUud2Via2l0VVJMfHxlfSxyPXQuY3JlYXRlRWxlbWVudE5TKCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIiwiYSIpLG89ImRvd25sb2FkImluIHIsaT1mdW5jdGlvbihlKXt2YXIgdD1uZXcgTW91c2VFdmVudCgiY2xpY2siKTtlLmRpc3BhdGNoRXZlbnQodCl9LGE9L2NvbnN0cnVjdG9yL2kudGVzdChlLkhUTUxFbGVtZW50KSxmPS9DcmlPU1wvW1xkXSsvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksdT1mdW5jdGlvbih0KXsoZS5zZXRJbW1lZGlhdGV8fGUuc2V0VGltZW91dCkoZnVuY3Rpb24oKXt0aHJvdyB0fSwwKX0sZD0iYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtIixzPTFlMyo0MCxjPWZ1bmN0aW9uKGUpe3ZhciB0PWZ1bmN0aW9uKCl7aWYodHlwZW9mIGU9PT0ic3RyaW5nIil7bigpLnJldm9rZU9iamVjdFVSTChlKX1lbHNle2UucmVtb3ZlKCl9fTtzZXRUaW1lb3V0KHQscyl9LGw9ZnVuY3Rpb24oZSx0LG4pe3Q9W10uY29uY2F0KHQpO3ZhciByPXQubGVuZ3RoO3doaWxlKHItLSl7dmFyIG89ZVsib24iK3Rbcl1dO2lmKHR5cGVvZiBvPT09ImZ1bmN0aW9uIil7dHJ5e28uY2FsbChlLG58fGUpfWNhdGNoKGkpe3UoaSl9fX19LHA9ZnVuY3Rpb24oZSl7aWYoL15ccyooPzp0ZXh0XC9cUyp8YXBwbGljYXRpb25cL3htbHxcUypcL1xTKlwreG1sKVxzKjsuKmNoYXJzZXRccyo9XHMqdXRmLTgvaS50ZXN0KGUudHlwZSkpe3JldHVybiBuZXcgQmxvYihbU3RyaW5nLmZyb21DaGFyQ29kZSg2NTI3OSksZV0se3R5cGU6ZS50eXBlfSl9cmV0dXJuIGV9LHY9ZnVuY3Rpb24odCx1LHMpe2lmKCFzKXt0PXAodCl9dmFyIHY9dGhpcyx3PXQudHlwZSxtPXc9PT1kLHksaD1mdW5jdGlvbigpe2wodiwid3JpdGVzdGFydCBwcm9ncmVzcyB3cml0ZSB3cml0ZWVuZCIuc3BsaXQoIiAiKSl9LFM9ZnVuY3Rpb24oKXtpZigoZnx8bSYmYSkmJmUuRmlsZVJlYWRlcil7dmFyIHI9bmV3IEZpbGVSZWFkZXI7ci5vbmxvYWRlbmQ9ZnVuY3Rpb24oKXt2YXIgdD1mP3IucmVzdWx0OnIucmVzdWx0LnJlcGxhY2UoL15kYXRhOlteO10qOy8sImRhdGE6YXR0YWNobWVudC9maWxlOyIpO3ZhciBuPWUub3Blbih0LCJfYmxhbmsiKTtpZighbillLmxvY2F0aW9uLmhyZWY9dDt0PXVuZGVmaW5lZDt2LnJlYWR5U3RhdGU9di5ET05FO2goKX07ci5yZWFkQXNEYXRhVVJMKHQpO3YucmVhZHlTdGF0ZT12LklOSVQ7cmV0dXJufWlmKCF5KXt5PW4oKS5jcmVhdGVPYmplY3RVUkwodCl9aWYobSl7ZS5sb2NhdGlvbi5ocmVmPXl9ZWxzZXt2YXIgbz1lLm9wZW4oeSwiX2JsYW5rIik7aWYoIW8pe2UubG9jYXRpb24uaHJlZj15fX12LnJlYWR5U3RhdGU9di5ET05FO2goKTtjKHkpfTt2LnJlYWR5U3RhdGU9di5JTklUO2lmKG8pe3k9bigpLmNyZWF0ZU9iamVjdFVSTCh0KTtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ci5ocmVmPXk7ci5kb3dubG9hZD11O2kocik7aCgpO2MoeSk7di5yZWFkeVN0YXRlPXYuRE9ORX0pO3JldHVybn1TKCl9LHc9di5wcm90b3R5cGUsbT1mdW5jdGlvbihlLHQsbil7cmV0dXJuIG5ldyB2KGUsdHx8ZS5uYW1lfHwiZG93bmxvYWQiLG4pfTtpZih0eXBlb2YgbmF2aWdhdG9yIT09InVuZGVmaW5lZCImJm5hdmlnYXRvci5tc1NhdmVPck9wZW5CbG9iKXtyZXR1cm4gZnVuY3Rpb24oZSx0LG4pe3Q9dHx8ZS5uYW1lfHwiZG93bmxvYWQiO2lmKCFuKXtlPXAoZSl9cmV0dXJuIG5hdmlnYXRvci5tc1NhdmVPck9wZW5CbG9iKGUsdCl9fXcuYWJvcnQ9ZnVuY3Rpb24oKXt9O3cucmVhZHlTdGF0ZT13LklOSVQ9MDt3LldSSVRJTkc9MTt3LkRPTkU9Mjt3LmVycm9yPXcub253cml0ZXN0YXJ0PXcub25wcm9ncmVzcz13Lm9ud3JpdGU9dy5vbmFib3J0PXcub25lcnJvcj13Lm9ud3JpdGVlbmQ9bnVsbDtyZXR1cm4gbX0odHlwZW9mIHNlbGYhPT0idW5kZWZpbmVkIiYmc2VsZnx8dHlwZW9mIHdpbmRvdyE9PSJ1bmRlZmluZWQiJiZ3aW5kb3d8fHRoaXMuY29udGVudCk7aWYodHlwZW9mIG1vZHVsZSE9PSJ1bmRlZmluZWQiJiZtb2R1bGUuZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHMuc2F2ZUFzPXNhdmVBc31lbHNlIGlmKHR5cGVvZiBkZWZpbmUhPT0idW5kZWZpbmVkIiYmZGVmaW5lIT09bnVsbCYmZGVmaW5lLmFtZCE9PW51bGwpe2RlZmluZShbXSxmdW5jdGlvbigpe3JldHVybiBzYXZlQXN9KX0="},{"meta":{"name":"gifjs.js","url":"https://greasyfork.org/scripts/2963-gif-js/code/gifjs.js?version=8596","ts":1549970282747,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"gm4-polyfill-101.js","url":"https://greasyfork.org/scripts/375359-gm4-polyfill-1-0-1/code/gm4-polyfill-101.js?version=652238","ts":1549970282750,"mimetype":"text/javascript"},"source":"LyogZ200LXBvbHlmaWxsLmpzIHYxLjAuMSAqLwoKLy8gPT1Vc2VyTGlicmFyeT09Ci8vIEBwc2V1ZG9IZWFkZXIKLy8gQHZlcnNpb24gICAgIDEuMC4xCi8vIEBuYW1lICAgICAgICBHTTQgUG9seUZpbGwKLy8gPT0vVXNlckxpYnJhcnk9PQoKLyogICBUaGlzIGhlbHBlciBzY3JpcHQgYnJpZGdlcyBiYWNrd2FyZGx5IGNvbXBhdGliaWxpdHkgYmV0d2VlbiB0aGUgR3JlYXNlbW9ua2V5IDQgQVBJcyBhbmQKICAgZXhpc3RpbmcvbGVnYWN5IEFQSXMuICBTYXkgZm9yIGV4YW1wbGUgeW91ciB1c2VyIHNjcmlwdCBpbmNsdWRlcwogICAKICAgLy8gQGdyYW50IEdNX2dldFZhbHVlCiAgIAogICBBbmQgeW91J2QgbGlrZSB0byBiZSBjb21wYXRpYmxlIHdpdGggYm90aCBHcmVhc2Vtb25rZXkgMyBhbmQgR3JlYXNlbW9ua2V5IDQKICAgKGFuZCBmb3IgdGhhdCBtYXR0ZXIgYWxsIHZlcnNpb25zIG9mIFZpb2xlbnRtb25rZXksIFRhbXBlcm1vbmtleSwgYW5kIGFueSBvdGhlcgogICB1c2VyIHNjcmlwdCBlbmdpbmUpLiAgQWRkOgogICAKICAgLy8gQGdyYW50IEdNLmdldFZhbHVlCiAgIC8vIEByZXF1aXJlICAgICBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vU2xvYW5lRm94L2NvZGUvbWFzdGVyL2dtNC1wb2x5ZmlsbC5qcwogICAKICAgRWcsIHRoaXMgd2lsbCBkZWZpbmUgR00uZ2V0VmFsdWUgaW4gb2xkZXIgR00gdmVyc2lvbnMsIHNvIHVwZGF0ZWQgY29kZSB3aWxsIGJlIGJhY2t3YXJkIGNvbXBhdGlibGUKICAgdG8gb2xkZXIgR00gdmVyc2lvbnMuICBJdCB3aWxsIG5vdCBkZWZpbmUgR01fZ2V0VmFsdWUgaW4gbmV3ZXIgR00gdmVyc2lvbnMuCiAgIE1pc3NpbmcgZnVuY3Rpb25zIGZyb20gdGhlIG5ldyBHTSBhcGkgYXJlIGFkZGVkLCBoZW5jZSBHTS5yZWdpc3Rlck1lbnVDb21tYW5kIGFuZCBHTS5hZGRTdHlsZSBhcmUgZGVmaW5lZC4KCiAgIEluY2x1ZGUgYWJvdmUgYW5kIHJlY29kZSB1c2Vyc2NyaXB0IHRvIHRoZSBuZXcgKEdNLWRvdCkgQVBJcywgd2hpY2ggcmV0dXJuIHByb21pc2VzLiAgSWYgeW91ciBzY3JpcHQKICAgaXMgcnVubmluZyBpbiBhbiBlbmdpbmUgdGhhdCBkb2VzIG5vdCBwcm92aWRlIHRoZSBuZXcgYXN5bmNocm9ub3VzIEFQSXMsIHRoaXMKICAgaGVscGVyIHdpbGwgYWRkIHRoZW0sIGJhc2VkIG9uIHRoZSBvbGQgQVBJcy4KICAgCiAgIElmIHlvdSB1c2UgYGF3YWl0YCBhdCB0aGUgdG9wIGxldmVsLCB5b3UnbGwgbmVlZCB0byB3cmFwIHlvdXIgc2NyaXB0IGluIGFuCiAgIGBhc3luY2AgZnVuY3Rpb24gdG8gYmUgY29tcGF0aWJsZSB3aXRoIGFueSB1c2VyIHNjcmlwdCBlbmdpbmUgYmVzaWRlcwogICBHcmVhc2Vtb25rZXkgNC4KICAgCiAgIHZhciBnVmFsdWU7CiAgIGFzeW5jIGZ1bmN0aW9uIGluaXRfZ2xvYmFscygpIHsgZ1ZhbHVlID0gYXdhaXQgR00uZ2V0VmFsdWUoJ3gnKTsgfQogICBhc3luYyBtYWluKCkgeyBhd2FpdCBpbml0X2dsb2JhbHMoKTsgfQogICBhZGRFdmVudExpc3RlbmVyKCJsb2FkIixtYWluKTsKCiovCiAKaWYgKHR5cGVvZiBHTSA9PSAndW5kZWZpbmVkJykKCWV2YWwoInZhciBHTSA9IHt9OyIpOyAgLy8gRGVmaW5lZCBpbiB0aGUgY2xvc3VyZSBnaXZlbiB3aGVuIGxvYWRlZC9pbmplY3RlZCBwcmV2ZW50cyBpbnRyYS1zY3JpcHQgY2xvYmJlcmluZy4gIEV2YWwgbmVlZGVkIGR1ZSB0byBHTSdzIGRlY2xhcmF0aW9uIGFzIGEgY29uc3QgaW4gc2NvcGUgd3JhcHBlciAuCgoKaWYgKHR5cGVvZiBHTV9hZGRTdHlsZSA9PSAndW5kZWZpbmVkJykgewoJdGhpcy5HTV9hZGRTdHlsZSA9IChhQ3NzKSA9PiB7CgkJJ3VzZSBzdHJpY3QnOwoJCWxldCBoZWFkID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXTsKCQlpZiAoaGVhZCkgewoJCQlsZXQgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpOwoJCQlzdHlsZS5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dC9jc3MnKTsKCQkJc3R5bGUudGV4dENvbnRlbnQgPSBhQ3NzOwoJCQloZWFkLmFwcGVuZENoaWxkKHN0eWxlKTsKCQkJcmV0dXJuIHN0eWxlOwoJCX0KCQlyZXR1cm4gbnVsbDsKCX07Cn0KR00uYWRkU3R5bGU9dGhpcy5HTV9hZGRTdHlsZTsKCmlmICh0eXBlb2YgR01fZ2V0UmVzb3VyY2VUZXh0ID09ICd1bmRlZmluZWQnKQoJdGhpcy5HTV9nZXRSZXNvdXJjZVRleHQgPSBhc3luYyBhUmVzb3VyY2VOYW1lID0+CgkoIGF3YWl0IGZldGNoKGF3YWl0IEdNLmdldFJlc291cmNlVXJsKGFSZXNvdXJjZU5hbWUpKSApLnRleHQoKTsgCgppZiAodHlwZW9mIEdNX3JlZ2lzdGVyTWVudUNvbW1hbmQ9PSJmdW5jdGlvbiIgJiYgL2lzIG5vdCBzdXBwb3J0ZWRbXl17MCwxMDB9JC8udGVzdChHTV9yZWdpc3Rlck1lbnVDb21tYW5kLnRvU3RyaW5nKCkpKQoJR01fcmVnaXN0ZXJNZW51Q29tbWFuZD11bmRlZmluZWQ7CgpHTS5yZWdpc3Rlck1lbnVDb21tYW5kID0gZnVuY3Rpb24gKGNhcHRpb24sIGNvbW1hbmRGdW5jLCBhY2Nlc3NLZXkpIHsKCWxldCBib2R5PWRvY3VtZW50LmJvZHk7CglpZiAoIWJvZHkpIHRocm93ICJHTSByZWdpc3Rlck1lbnVDb21tYW5kIGFpbnQgZ290IG5vIGJvZHkgaW4gZG9jdW1lbnQsIGNhbGwgYWdhaW4gbGF0ZXIuIjsKCWxldCBjb250ZXh0TWVudSA9IGJvZHkuZ2V0QXR0cmlidXRlKCdjb250ZXh0bWVudScpOwoJbGV0IG1lbnUgPSAoY29udGV4dE1lbnUgPyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdtZW51IycgKyBjb250ZXh0TWVudSkgOiBudWxsKTsKCWlmICghbWVudSkgewoJCW1lbnUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdtZW51Jyk7CgkJbWVudS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2dtLXJlZ2lzdGVyZWQtbWVudScpOwoJCW1lbnUuc2V0QXR0cmlidXRlKCd0eXBlJywgJ2NvbnRleHQnKTsKCQlib2R5Lmluc2VydEJlZm9yZShtZW51LGJvZHkuZmlyc3RDaGlsZCk7CgkJYm9keS5zZXRBdHRyaWJ1dGUoJ2NvbnRleHRtZW51JywgJ2dtLXJlZ2lzdGVyZWQtbWVudScpOwoJfQoJbGV0IG1lbnVJdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbWVudWl0ZW0nKTsKCW1lbnVJdGVtLnNldEF0dHJpYnV0ZSgibGFiZWwiLGNhcHRpb24pOwoJbWVudUl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjb21tYW5kRnVuYywgdHJ1ZSk7CgltZW51LmFwcGVuZENoaWxkKG1lbnVJdGVtKTsKCXJldHVybiBtZW51SXRlbTsgICAgLy8gVGhlIHJlYWwgR01fcmVnaXN0ZXJNZW51Q29tbWFuZCByZXR1cm5zIHVuZGVmaW5lZC4gIEhlcmUgdXNlciBjYW4gY2hhbmdlIGVnLCBsYWJlbCBhdHRyaWJ1dGUgb2YgcmV0dXJuZWQgbWVudUl0ZW0uCn07CgppZiAodHlwZW9mIEdNX3JlZ2lzdGVyTWVudUNvbW1hbmQgPT0gJ3VuZGVmaW5lZCcpIHRoaXMuR01fcmVnaXN0ZXJNZW51Q29tbWFuZD1HTS5yZWdpc3Rlck1lbnVDb21tYW5kOwoKT2JqZWN0LmVudHJpZXMoewoJJ2xvZyc6IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSksCgknaW5mbyc6IHR5cGVvZiBHTV9pbmZvID09ICJ1bmRlZmluZWQiID8gbnVsbCA6IEdNX2luZm8gCn0pLmZvckVhY2goKFtuZXdLZXksIG9sZF0pID0+IHsKCWlmIChvbGQgJiYgKHR5cGVvZiBHTVtuZXdLZXldID09ICd1bmRlZmluZWQnKSkgewoJCUdNW25ld0tleV0gPSBvbGQ7Cgl9Cn0pOwoKT2JqZWN0LmVudHJpZXMoeyAgICAgICAgICAvLyBPYmplY3QuZW50cmllcygpIHJldHVybnMgYSAyLWQgYXJyYXkgb2YgYWxsIHRoZSBnaXZlbiBvYmplY3QncyBuYW1lIHZhbHVlIHBhaXJzLgoJJ0dNX2FkZFN0eWxlJzogJ2FkZFN0eWxlJywKCSdHTV9kZWxldGVWYWx1ZSc6ICdkZWxldGVWYWx1ZScsCgknR01fZ2V0UmVzb3VyY2VVUkwnOiAnZ2V0UmVzb3VyY2VVcmwnLAoJJ0dNX2dldFZhbHVlJzogJ2dldFZhbHVlJywKCSdHTV9saXN0VmFsdWVzJzogJ2xpc3RWYWx1ZXMnLAoJJ0dNX25vdGlmaWNhdGlvbic6ICdub3RpZmljYXRpb24nLAoJJ0dNX29wZW5JblRhYic6ICdvcGVuSW5UYWInLAoJJ0dNX3JlZ2lzdGVyTWVudUNvbW1hbmQnOiAncmVnaXN0ZXJNZW51Q29tbWFuZCcsCgknR01fc2V0Q2xpcGJvYXJkJzogJ3NldENsaXBib2FyZCcsCgknR01fc2V0VmFsdWUnOiAnc2V0VmFsdWUnLAoJJ0dNX3htbGh0dHBSZXF1ZXN0JzogJ3htbEh0dHBSZXF1ZXN0JywKCSdHTV9nZXRSZXNvdXJjZVRleHQnOiAnZ2V0UmVzb3VyY2VUZXh0Jwp9KS5mb3JFYWNoKChbb2xkS2V5LCBuZXdLZXldKSA9PiB7ICAgICAgICAgLy8gRW5hYmxlcyBlZywgImF3YWl0IEdNLmdldFZhbHVlIiB0byBydW4gb2sgb24gcHJlIEdNNC4gQnV0IG5vdCB2aWNlIHZlcnNhLCBpZSwgaXQgZGVmaW5lcyBubyBHTV9nZXRWYWx1ZSBpbiBuZXdlciBHTS4KCWxldCBvbGQgPSB0aGlzW29sZEtleV07CglpZiAob2xkICYmICh0eXBlb2YgR01bbmV3S2V5XSA9PSAndW5kZWZpbmVkJykpIHsKCQlHTVtuZXdLZXldID0gZnVuY3Rpb24oLi4uYXJncykgewoJCQlyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7IHRyeSB7CgkJCQlyZXNvbHZlKG9sZC5hcHBseSh0aGlzLCBhcmdzKSk7CgkJCX0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9CgkJCQkJCQkJCQkJCQkJIH0pOwoJCX07Ly9HTVtuZXdLZXldPWZ1bmMKCX0KfSk7Ly9mb3JFYWNoKCkKCgo="}]},{"name":"仙尊 Pixiv 图片批量下载器","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["i.pximg.net","i1.pixiv.net","i2.pixiv.net","i3.pixiv.net","i4.pixiv.net","i5.pixiv.net","imgaz.pixiv.net"],"orig_excludes":[],"orig_includes":["*://www.pixiv.net/*","*://www.pixivision.net/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1547874362806,"data":{}},"enabled":true,"position":6,"file_url":"https://greasyfork.org/scripts/24252-%E4%BB%99%E5%B0%8A-pixiv-%E5%9B%BE%E7%89%87%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD%E5%99%A8/code/%E4%BB%99%E5%B0%8A%20Pixiv%20%E5%9B%BE%E7%89%87%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD%E5%99%A8.user.js","uuid":"4a0738bc-b010-45c4-8be2-fbcdedafed32","source":""},{"name":"贴吧全能助手","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":["*://tieba.baidu.com/f/fdir*","*://tieba.baidu.com/f/search*"],"orig_includes":["*://tieba.baidu.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-body","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{"confVer":"s[1]","definedEvent":"sclick,click,1,0,1","modules":"s{}","repairDefinedEvent":"bfalse"},"ts":1549871721666},"enabled":false,"position":7,"file_url":"https://greasyfork.org/scripts/26992-%E8%B4%B4%E5%90%A7%E5%85%A8%E8%83%BD%E5%8A%A9%E6%89%8B/code/%E8%B4%B4%E5%90%A7%E5%85%A8%E8%83%BD%E5%8A%A9%E6%89%8B.user.js","uuid":"1cea6396-f8d4-4b70-a102-8aad68406ae4","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"http://cdn.staticfile.org/jquery/2.1.1/jquery.min.js","ts":1549847694105,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"jquery.scrollTo.min.js","url":"http://cdn.staticfile.org/jquery-scrollTo/1.4.11/jquery.scrollTo.min.js","ts":1549847694089,"mimetype":"text/javascript"},"source":"LyoqCiAqIENvcHlyaWdodCAoYykgMjAwNy0yMDE0IEFyaWVsIEZsZXNsZXIgLSBhZmxlc2xlcjxhPmdtYWlsPGQ+Y29tIHwgaHR0cDovL2ZsZXNsZXIuYmxvZ3Nwb3QuY29tCiAqIExpY2Vuc2VkIHVuZGVyIE1JVAogKiBAYXV0aG9yIEFyaWVsIEZsZXNsZXIKICogQHZlcnNpb24gMS40LjExCiAqLwo7KGZ1bmN0aW9uKGEpe2lmKHR5cGVvZiBkZWZpbmU9PT0nZnVuY3Rpb24nJiZkZWZpbmUuYW1kKXtkZWZpbmUoWydqcXVlcnknXSxhKX1lbHNle2EoalF1ZXJ5KX19KGZ1bmN0aW9uKCQpe3ZhciBqPSQuc2Nyb2xsVG89ZnVuY3Rpb24oYSxiLGMpe3JldHVybiAkKHdpbmRvdykuc2Nyb2xsVG8oYSxiLGMpfTtqLmRlZmF1bHRzPXtheGlzOid4eScsZHVyYXRpb246cGFyc2VGbG9hdCgkLmZuLmpxdWVyeSk+PTEuMz8wOjEsbGltaXQ6dHJ1ZX07ai53aW5kb3c9ZnVuY3Rpb24oYSl7cmV0dXJuICQod2luZG93KS5fc2Nyb2xsYWJsZSgpfTskLmZuLl9zY3JvbGxhYmxlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uKCl7dmFyIGE9dGhpcyxpc1dpbj0hYS5ub2RlTmFtZXx8JC5pbkFycmF5KGEubm9kZU5hbWUudG9Mb3dlckNhc2UoKSxbJ2lmcmFtZScsJyNkb2N1bWVudCcsJ2h0bWwnLCdib2R5J10pIT0tMTtpZighaXNXaW4pcmV0dXJuIGE7dmFyIGI9KGEuY29udGVudFdpbmRvd3x8YSkuZG9jdW1lbnR8fGEub3duZXJEb2N1bWVudHx8YTtyZXR1cm4vd2Via2l0L2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KXx8Yi5jb21wYXRNb2RlPT0nQmFja0NvbXBhdCc/Yi5ib2R5OmIuZG9jdW1lbnRFbGVtZW50fSl9OyQuZm4uc2Nyb2xsVG89ZnVuY3Rpb24oZixnLGgpe2lmKHR5cGVvZiBnPT0nb2JqZWN0Jyl7aD1nO2c9MH1pZih0eXBlb2YgaD09J2Z1bmN0aW9uJyloPXtvbkFmdGVyOmh9O2lmKGY9PSdtYXgnKWY9OWU5O2g9JC5leHRlbmQoe30sai5kZWZhdWx0cyxoKTtnPWd8fGguZHVyYXRpb247aC5xdWV1ZT1oLnF1ZXVlJiZoLmF4aXMubGVuZ3RoPjE7aWYoaC5xdWV1ZSlnLz0yO2gub2Zmc2V0PWJvdGgoaC5vZmZzZXQpO2gub3Zlcj1ib3RoKGgub3Zlcik7cmV0dXJuIHRoaXMuX3Njcm9sbGFibGUoKS5lYWNoKGZ1bmN0aW9uKCl7aWYoZj09bnVsbClyZXR1cm47dmFyIGQ9dGhpcywkZWxlbT0kKGQpLHRhcmc9Zix0b2ZmLGF0dHI9e30sd2luPSRlbGVtLmlzKCdodG1sLGJvZHknKTtzd2l0Y2godHlwZW9mIHRhcmcpe2Nhc2UnbnVtYmVyJzpjYXNlJ3N0cmluZyc6aWYoL14oWystXT0/KT9cZCsoXC5cZCspPyhweHwlKT8kLy50ZXN0KHRhcmcpKXt0YXJnPWJvdGgodGFyZyk7YnJlYWt9dGFyZz0kKHRhcmcsdGhpcyk7aWYoIXRhcmcubGVuZ3RoKXJldHVybjtjYXNlJ29iamVjdCc6aWYodGFyZy5pc3x8dGFyZy5zdHlsZSl0b2ZmPSh0YXJnPSQodGFyZykpLm9mZnNldCgpfXZhciBlPSQuaXNGdW5jdGlvbihoLm9mZnNldCkmJmgub2Zmc2V0KGQsdGFyZyl8fGgub2Zmc2V0OyQuZWFjaChoLmF4aXMuc3BsaXQoJycpLGZ1bmN0aW9uKGksYSl7dmFyIGI9YT09J3gnPydMZWZ0JzonVG9wJyxwb3M9Yi50b0xvd2VyQ2FzZSgpLGtleT0nc2Nyb2xsJytiLG9sZD1kW2tleV0sbWF4PWoubWF4KGQsYSk7aWYodG9mZil7YXR0cltrZXldPXRvZmZbcG9zXSsod2luPzA6b2xkLSRlbGVtLm9mZnNldCgpW3Bvc10pO2lmKGgubWFyZ2luKXthdHRyW2tleV0tPXBhcnNlSW50KHRhcmcuY3NzKCdtYXJnaW4nK2IpKXx8MDthdHRyW2tleV0tPXBhcnNlSW50KHRhcmcuY3NzKCdib3JkZXInK2IrJ1dpZHRoJykpfHwwfWF0dHJba2V5XSs9ZVtwb3NdfHwwO2lmKGgub3Zlcltwb3NdKWF0dHJba2V5XSs9dGFyZ1thPT0neCc/J3dpZHRoJzonaGVpZ2h0J10oKSpoLm92ZXJbcG9zXX1lbHNle3ZhciBjPXRhcmdbcG9zXTthdHRyW2tleV09Yy5zbGljZSYmYy5zbGljZSgtMSk9PSclJz9wYXJzZUZsb2F0KGMpLzEwMCptYXg6Y31pZihoLmxpbWl0JiYvXlxkKyQvLnRlc3QoYXR0cltrZXldKSlhdHRyW2tleV09YXR0cltrZXldPD0wPzA6TWF0aC5taW4oYXR0cltrZXldLG1heCk7aWYoIWkmJmgucXVldWUpe2lmKG9sZCE9YXR0cltrZXldKWFuaW1hdGUoaC5vbkFmdGVyRmlyc3QpO2RlbGV0ZSBhdHRyW2tleV19fSk7YW5pbWF0ZShoLm9uQWZ0ZXIpO2Z1bmN0aW9uIGFuaW1hdGUoYSl7JGVsZW0uYW5pbWF0ZShhdHRyLGcsaC5lYXNpbmcsYSYmZnVuY3Rpb24oKXthLmNhbGwodGhpcyx0YXJnLGgpfSl9fSkuZW5kKCl9O2oubWF4PWZ1bmN0aW9uKGEsYil7dmFyIGM9Yj09J3gnPydXaWR0aCc6J0hlaWdodCcsc2Nyb2xsPSdzY3JvbGwnK2M7aWYoISQoYSkuaXMoJ2h0bWwsYm9keScpKXJldHVybiBhW3Njcm9sbF0tJChhKVtjLnRvTG93ZXJDYXNlKCldKCk7dmFyIGQ9J2NsaWVudCcrYyxodG1sPWEub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsYm9keT1hLm93bmVyRG9jdW1lbnQuYm9keTtyZXR1cm4gTWF0aC5tYXgoaHRtbFtzY3JvbGxdLGJvZHlbc2Nyb2xsXSktTWF0aC5taW4oaHRtbFtkXSxib2R5W2RdKX07ZnVuY3Rpb24gYm90aChhKXtyZXR1cm4gJC5pc0Z1bmN0aW9uKGEpfHx0eXBlb2YgYT09J29iamVjdCc/YTp7dG9wOmEsbGVmdDphfX07cmV0dXJuIGp9KSk7Cg=="},{"meta":{"name":"mustache.min.js","url":"http://cdn.staticfile.org/mustache.js/0.8.1/mustache.min.js","ts":1549847694091,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"tieba_ui.js","url":"https://greasyfork.org/scripts/2657/code/tieba_ui.js","ts":1549847694808,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"Interval_Looper.js","url":"https://greasyfork.org/scripts/3588/code/Interval_Looper.js","ts":1549847694631,"mimetype":"text/javascript"},"source":"Ly8gSW50ZXJ2YWwgTG9vcGVyIGJ5IEppeHVuOgovLyBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9KaXh1bk1vZS9jNzdiYjM5MzZhNjg5OTdmY2UyMgoKdmFyIEludGVydmFsTG9vcCA9IGZ1bmN0aW9uIChhcnJEYXRhLCBsb29wZXIsIGRlbGF5KSB7CglpZiAoISh0aGlzIGluc3RhbmNlb2YgSW50ZXJ2YWxMb29wKSkKCQlyZXR1cm4gbmV3IEludGVydmFsTG9vcCAoYXJyRGF0YSwgbG9vcGVyLCBkZWxheSk7CiAKCS8qKgoJICogU3RhdHVzCgkgKiBAdHlwZSBOdW1iZXIKCSAqIDA6IOW+queOr+acquW8gOWniwoJICogMTog5q2j5Zyo5b6q546vCgkgKiAyOiDlvqrnjq/nu5PmnZ8KCSAqLwoJdGhpcy5zdGF0dXMgPSAwOwoJdGhpcy5uZXh0ID0gdGhpcy5fbmV4dC5iaW5kICh0aGlzKTsKCXRoaXMuaW5kZXggPSAwOwogCgl0aGlzLnNldERlbGF5IChkZWxheSB8fCA1MCk7Cgl0aGlzLmRhdGEgPSAoYXJyRGF0YSBpbnN0YW5jZW9mIEFycmF5KSA/IGFyckRhdGEgOiBbXTsKCXRoaXMuc2V0TG9vcGVyIChsb29wZXIpOwp9OwogCkludGVydmFsTG9vcC5wcm90b3R5cGUgPSB7CglfZ2V0RGVsYXk6IGZ1bmN0aW9uICgpIHsKCQlpZiAoIXRoaXMuZGVsYXkpCgkJCXJldHVybiA1MDsKIAoJCWlmICh0aGlzLmRlbGF5LmFwcGx5KQoJCQlyZXR1cm4gdGhpcy5kZWxheSgpOwogCgkJcmV0dXJuIHRoaXMuZGVsYXk7Cgl9LAoJX25leHQ6IGZ1bmN0aW9uICgpIHsKCQkvLyDnirbmgIHmlLnkuLog6L+b6KGM5LitCgkJdGhpcy5zdGF0dXMgPSAxOwoJCWlmICh0aGlzLmluZGV4IDwgdGhpcy5kYXRhLmxlbmd0aCkgewoJCQlzZXRUaW1lb3V0ICh0aGlzLmxvb3Blci5iaW5kKHRoaXMsIHRoaXMuZGF0YVt0aGlzLmluZGV4XSksIHRoaXMuZGVsYXkpOwoJCQl0aGlzLmluZGV4ICsrOwoJCQlpZiAodGhpcy5vblByb2dyZXNzICYmIHRoaXMub25Qcm9ncmVzcy5hcHBseSkgewoJCQkJdHJ5IHsKCQkJCQl0aGlzLm9uUHJvZ3Jlc3MgKHRoaXMuaW5kZXgsIHRoaXMuZGF0YS5sZW5ndGgpOwoJCQkJfSBjYXRjaCAoZSkgewoJCQkJCWNvbnNvbGUuZXJyb3IgKCdFcnJvciB3aGlsZSBjYWxsYmFjayB0byBgb25Qcm9ncmVzc2AnKTsKCQkJCQljb25zb2xlLmVycm9yIChlKTsKCQkJCX0KCQkJfQoJCX0gZWxzZSB7CgkJCXRoaXMuc3RhdHVzID0gMjsKCQkJaWYgKHRoaXMub25Db21wbGV0ZSAmJiB0aGlzLm9uQ29tcGxldGUuYXBwbHkpIHsKCQkJCXRyeSB7CgkJCQkJdGhpcy5vbkNvbXBsZXRlICh0aGlzLmRhdGEubGVuZ3RoKTsKCQkJCX0gY2F0Y2ggKGUpIHsKCQkJCQljb25zb2xlLmVycm9yICgnRXJyb3Igd2hpbGUgY2FsbGJhY2sgdG8gYG9uQ29tcGxldGVgJyk7CgkJCQkJY29uc29sZS5lcnJvciAoZSk7CgkJCQl9CgkJCX0KCQl9Cgl9LAoJY2xlYW51cDogZnVuY3Rpb24gKCkgewoJCWlmICh0aGlzLnN0YXR1cyA9PSAyKSB7CgkJCS8vIOW3sue7j+eUqOi/h+eahOaVsOaNruWwsea4heaOieOAggoJCQl0aGlzLmRhdGEuc3BsaWNlKDAsIHRoaXMuaW5kZXgpOwoJCQl0aGlzLmluZGV4ID0gMDsKCQkJdGhpcy5zdGF0dXMgPSAwOwoJCX0KIAoJCXJldHVybiB0aGlzOwoJfSwKCWFkZDogZnVuY3Rpb24gKCkgewoJCWlmIChhcmd1bWVudHMubGVuZ3RoID4gMCkgewoJCQkvLyDlsIbmiYDmnInlj4LmlbDkvZzkuLrmlbDmja7mjqjlhaUgdGhpcy5kYXRhCgkJCWZvciAodmFyIGkgPSAwOyBpPGFyZ3VtZW50cy5sZW5ndGg7IGkrKykKCQkJCXRoaXMuZGF0YS5wdXNoIChhcmd1bWVudHNbaV0pOwogCgkJCS8vIOaVtOS4que7hOW3sue7j+WujOe7k++8jOa4heeQhuWQjuiHquWKqOe7p+e7rQoJCQlpZiAodGhpcy5zdGF0dXMgPT0gMikKCQkJCXRoaXMuY2xlYW51cCgpLm5leHQoKTsKCQl9CiAKCQkvLyDov57plIEKCQlyZXR1cm4gdGhpczsKCX0sCglzZXREZWxheTogZnVuY3Rpb24gKG5ld0RlbGF5KSB7CgkJaWYgKG5ld0RlbGF5KSB0aGlzLmRlbGF5ID0gcGFyc2VJbnQgKG5ld0RlbGF5KTsKCQlyZXR1cm4gdGhpczsKCX0sCglzZXRMb29wZXI6IGZ1bmN0aW9uIChmb29DYWxsYmFjaykgewoJCWlmIChmb29DYWxsYmFjayAmJiBmb29DYWxsYmFjay5hcHBseSkKCQkJdGhpcy5sb29wZXIgPSBmb29DYWxsYmFjay5iaW5kKHRoaXMsIHRoaXMubmV4dCk7CiAKCQlyZXR1cm4gdGhpczsKCX0sCglsb29wOiBmdW5jdGlvbiAoKSB7CgkJaWYgKHRoaXMuc3RhdHVzID09IDApCgkJCS8vIOWwmuacquWQr+WKqCwg5LuO5aS05byA5aeLCgkJCXRoaXMubmV4dCAoKTsKIAoJCXJldHVybiB0aGlzOwoJfQp9Ow=="},{"meta":{"name":"gm2_port_v103.js","url":"https://greasyfork.org/scripts/2599/code/gm2_port_v103.js","ts":1549847694809,"mimetype":"text/javascript"},"source":""}]},{"name":"贴吧页面精简","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":["*://tieba.baidu.com/f/fdir*"],"orig_includes":["*://tieba.baidu.com/*","*://dq.tieba.com/*","*://jump2.bdimg.com/*","*://jump.bdimg.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-body","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{"version":"s2.7.15"},"ts":1547901566931},"enabled":false,"position":8,"file_url":"https://greasyfork.org/scripts/23687-%E8%B4%B4%E5%90%A7%E9%A1%B5%E9%9D%A2%E7%B2%BE%E7%AE%80/code/%E8%B4%B4%E5%90%A7%E9%A1%B5%E9%9D%A2%E7%B2%BE%E7%AE%80.user.js","uuid":"5b531d40-c2bc-4811-95bf-02f4eb03d872","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js","ts":1547874442345,"mimetype":"text/javascript"},"source":""}]},{"name":"去除贴吧列表里面的广告","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["tags","*"],"orig_excludes":[],"orig_includes":["http://tieba.baidu.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1547874455647,"data":{}},"enabled":true,"position":9,"file_url":"https://greasyfork.org/scripts/10003-%E5%8E%BB%E9%99%A4%E8%B4%B4%E5%90%A7%E5%88%97%E8%A1%A8%E9%87%8C%E9%9D%A2%E7%9A%84%E5%B9%BF%E5%91%8A/code/%E5%8E%BB%E9%99%A4%E8%B4%B4%E5%90%A7%E5%88%97%E8%A1%A8%E9%87%8C%E9%9D%A2%E7%9A%84%E5%B9%BF%E5%91%8A.user.js","uuid":"b025e384-29d7-41c5-9c6e-f075677cc0a6","source":""},{"name":"知乎免登录","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["http://*.zhihu.com/*","https://*.zhihu.com/*"],"orig_matches":["http://*.zhihu.com/*","https://*.zhihu.com/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1547874480454,"data":{}},"enabled":true,"position":10,"file_url":"https://greasyfork.org/scripts/25885-%E7%9F%A5%E4%B9%8E%E5%85%8D%E7%99%BB%E5%BD%95/code/%E7%9F%A5%E4%B9%8E%E5%85%8D%E7%99%BB%E5%BD%95.user.js","uuid":"43fb97ef-9a68-427f-a325-6e319d174b86","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgICAgICAg55+l5LmO5YWN55m75b2VCi8vIEBkZXNjcmlwdGlvbiAgICAgICAgIOW5tuS4lOWOu+aOiemTvuaOpei3s+i9rOOAggovLyBAYXV0aG9yICAgICAgICAgICAgICBEYW1uCi8vIEBuYW1lc3BhY2UgICAgICAgICAgIGluY2FzdC5pbmZvCi8vIEBydW4tYXQgICAgICAgICAgICAgIGRvY3VtZW50LXN0YXJ0Ci8vIEBpbmNsdWRlICAgICAgICAgICAgIGh0dHA6Ly8qLnpoaWh1LmNvbS8qCi8vIEBpbmNsdWRlICAgICAgICAgICAgIGh0dHBzOi8vKi56aGlodS5jb20vKgovLyBAbWF0Y2ggICAgICAgICAgICAgICBodHRwOi8vKi56aGlodS5jb20vKgovLyBAbWF0Y2ggICAgICAgICAgICAgICBodHRwczovLyouemhpaHUuY29tLyoKLy8gQGRhdGUgICAgICAgICAgICAgICAgMTgvMTIvMjAxNgovLyBAdmVyc2lvbiAgICAgICAgICAgICAyLjAuNAovLyA9PS9Vc2VyU2NyaXB0PT0KCmlmKGxvY2F0aW9uLmhyZWY9PSJodHRwczovL3d3dy56aGlodS5jb20vIil7bG9jYXRpb24uaHJlZj0iaHR0cHM6Ly93d3cuemhpaHUuY29tL2V4cGxvcmUiO30KZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcscHJvY2VlZCgpKTsKdmFyIG1vPW5ldyBNdXRhdGlvbk9ic2VydmVyKGZ1bmN0aW9uKCl7cHJvY2VlZCgpO30pOwptby5vYnNlcnZlKGRvY3VtZW50LHsnY2hpbGRMaXN0Jzp0cnVlLCdzdWJ0cmVlJzp0cnVlfSk7CmZ1bmN0aW9uIHByb2NlZWQoKXsKKGZ1bmN0aW9uKCl7CglpZihkb2N1bWVudC5ib2R5KXsKCQlmdW5jdGlvbiB0cmVhdCh0aGF0KXsKCQkJdmFyIHRhcmdldHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoYXQpOwoJCQlpZih0YXJnZXRzLmxlbmd0aD4wKXsKCQkJCVtdLmZvckVhY2guY2FsbCh0YXJnZXRzLGZ1bmN0aW9uKG5vZGUpewoJCQkJCW5vZGUuc3R5bGUuZGlzcGxheT0ibm9uZSI7CgkJCQkJY29uc29sZS5sb2codGhhdCk7CgkJCQl9KTsKCQkJfQoJCX0KCQl0cmVhdCgiZGl2LnptLWVkaXRhYmxlLWVkaXRvci13cmFwIik7CgkJdHJlYXQoImRpdi56dS1lZGl0YWJsZS1lZGl0b3Itd3JhcCIpOwoJCXRyZWF0KCJ1bC50b3BuYXYtbm9hdXRoIik7CgkJdHJlYXQoIiNTaWRlYmFyU2lnbkZsb3ciKTsKCQl0cmVhdCgiI3p1LXRvcC1hZGQtcXVlc3Rpb24iKTsKCQl0cmVhdCgiI3poLXRvcC1uYXYtdG9waWMiKTsKCQl0cmVhdCgiI3poLWZvb3RlciIpOwoJCXRyZWF0KCJkaXYuRG93bmxvYWRBcHAiKTsKCQl0cmVhdCgiYnV0dG9uW2NsYXNzXj0nX0NvbW1lbnRJdGVtJ106bm90KFtjbGFzc149J19Db21tZW50SXRlbV9vcGVuQ29udmVyc2F0aW9ucyddKSIpOwoJCWlmKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2EuenUtYnV0dG9uLW1vcmUnKS5sZW5ndGg+MCl7ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnYS56dS1idXR0b24tbW9yZScpWzBdLm91dGVySFRNTD0iPGhyPiI7fQoJCVtdLmZvckVhY2guY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdhW2hyZWY9Ii8iXScpLGZ1bmN0aW9uKG5vZGUpe25vZGUuaHJlZj0iL2V4cGxvcmUiO30pOwoJCVtdLmZvckVhY2guY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdkaXYuY29ucHVsc29yeS1sb2dpbi1tYXNrJyksZnVuY3Rpb24obm9kZSl7bm9kZS5wYXJlbnROb2RlLnN0eWxlLmhlaWdodD0iIjtub2RlLnN0eWxlLmRpc3BsYXk9J25vbmUnO30pOwoJCVtdLmZvckVhY2guY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdhLmV4dGVybmFsJyksZnVuY3Rpb24obm9kZSl7aWYobm9kZS5ocmVmLmluZGV4T2YoInRhcmdldCIpPjApe25vZGUuaHJlZj1kZWNvZGVVUklDb21wb25lbnQobm9kZS5ocmVmLnNsaWNlKG5vZGUuaHJlZi5pbmRleE9mKCJ0YXJnZXQiKSs3KSk7fX0pOwoJCVtdLmZvckVhY2guY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdhLm1ldGEtaXRlbScpLGZ1bmN0aW9uKG5vZGUpe2lmKG5vZGUuaW5uZXJIVE1MLmluZGV4T2YoJ+a3u+WKoOivhOiuuicpPjApe25vZGUub3V0ZXJIVE1MPSc8bGFiZWwgY2xhc3M9Im1ldGEtaXRlbSI+5pqC5peg6K+E6K66PC9sYWJlbD4nO30gaWYoKG5vZGUuY2xhc3NOYW1lLmluZGV4T2YoJ3RvZ2dsZS1jb21tZW50Jyk8MCkqKG5vZGUuY2xhc3NOYW1lLmluZGV4T2YoJ2Fuc3dlci1kYXRlLWxpbmsnKTwwKSl7bm9kZS5zdHlsZS5kaXNwbGF5PSdub25lJzt9fSk7CgkJW10uZm9yRWFjaC5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2EuYWN0aW9uLWl0ZW0nKSxmdW5jdGlvbihub2RlKXtpZihub2RlLmNsYXNzTmFtZS5pbmRleE9mKCdqcy10b2dnbGVDb21tZW50Qm94Jyk8MCl7bm9kZS5zdHlsZS5kaXNwbGF5PSdub25lJzt9fSk7CgkJW10uZm9yRWFjaC5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2J1dHRvbltjbGFzc149IkZlZWRiYWNrQnV0dG9uIl0nKSxmdW5jdGlvbihub2RlKXtub2RlLnBhcmVudE5vZGUuc3R5bGUuZGlzcGxheT0nbm9uZSc7fSk7CgkJW10uZm9yRWFjaC5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2J1dHRvbltjbGFzc149ImZvbGxvdy1idXR0b24iXScpLGZ1bmN0aW9uKG5vZGUpe25vZGUucGFyZW50Tm9kZS5zdHlsZS5kaXNwbGF5PSdub25lJzt9KTsKCQlbXS5mb3JFYWNoLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnI1NpZGViYXJTaWduRmxvdycpLGZ1bmN0aW9uKG5vZGUpe25vZGUucGFyZW50Tm9kZS5zdHlsZS5kaXNwbGF5PSdub25lJzt9KTsKCQlbXS5mb3JFYWNoLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnZGl2LnptLWNvbW1lbnQtZnQnKSxmdW5jdGlvbihub2RlKXtbXS5mb3JFYWNoLmNhbGwobm9kZS5jaGlsZE5vZGVzLGZ1bmN0aW9uKGNodCl7aWYoY2h0Lm5vZGVOYW1lPT0iQSIpe2NodC5zdHlsZS5kaXNwbGF5PSdub25lJzt9fSk7fSk7Cgl9Cn0pKCkKfQoK"},{"name":"MyFigureCollection: doujinshi links","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["http*://myfigurecollection.net/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1547874688310,"data":{}},"enabled":true,"position":11,"file_url":"https://greasyfork.org/scripts/39644-myfigurecollection-doujinshi-links/code/MyFigureCollection:%20doujinshi%20links.user.js","uuid":"878944be-0963-49ae-a639-d0844d6e45e3","source":""},{"name":"Endless EH Pages","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["http://g.e-hentai.org/*","http://exhentai.org/*"],"orig_matches":[],"orig_noframes":true,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1547879465383,"data":{}},"enabled":true,"position":12,"file_url":"https://openuserjs.org/install/K/Endless_EH_Pages.user.js","uuid":"5d8bd7f1-7369-4eec-b3fa-5b5cc862d333","source":""},{"name":"Webcomic Reader","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":["http://www.nerfnow.com/*/comments*","http://nerfnow.com/*/comments*","http://www.gocomics.com/","http://www.gocomics.com/?*","http://www.reddit.com/*/comments/*","http://old.lu.scio.us/hentai/albums/*/page/*"],"orig_includes":["http://www.sluggy.com/*","http://sluggy.com/*","http://www.penny-arcade.com/comic*","http://penny-arcade.com/comic*","https://www.penny-arcade.com/comic*","https://penny-arcade.com/comic*","http://www.giantitp.com/*","http://www.dilbert.com/strip/*","http://dilbert.com/strip/*","http://hf.dilbert.com/strip/*","http://www.explosm.net/*","http://explosm.net/*","http://www.nuklearpower.com/*","http://www.reallifecomics.com/*","http://reallifecomics.com/*","http://www.pvponline.com/*","http://pvponline.com/*","http://www.brawlinthefamily.com/*","http://drmcninja.com/*","http://www.vgcats.com/*/*","http://www.phdcomics.com/*","http://www.cad-comic.com/*","http://abstrusegoose.com/*","http://thedoghousediaries.com/*","http://www.erfworld.com/*","http://es.juanelo.net/*/*","http://mangastream.com/*","http://www.mangastream.com/*","http://readms.net/*","https://mangastream.com/*","https://www.mangastream.com/*","https://readms.net/*","http://www.readms.net/*","http://readms.com/*","http://www.qwantz.com/*","http://qwantz.com/*","http://www.2pstart.com/*/*","http://www.spaceavalanche.com/*","http://www.gunshowcomic.com/*","http://gunshowcomic.com/*","http://www.terrorisland.net/*","http://nedroid.com/*","http://manga.animea.net/*","http://www.bobandgeorge.com/*","http://bobandgeorge.com/*","http://www.shamusyoung.com/*","http://www.stationv3.com/*","http://www.lfgcomic.com/page/*","http://lfgcomic.com/page/*","http://www.gpf-comics.com/*","http://miscellanea.wellingtongrey.net/*","http://www.daisyowl.com/*","http://daisyowl.com/*","http://www.hyperdeathbabies.com/*","http://www.mangatoshokan.com/*","http://amultiverse.com/*","http://wondermark.com/*","http://www.amazingsuperpowers.com/*","http://www.anymanga.com/*","http://anymanga.com/*","http://www.leasticoulddo.com/*","http://leasticoulddo.com/*","http://www.sinfest.net/*","http://www.crfh.net/*","http://crfh.net/*","http://www.pennyandaggie.com/*","http://pennyandaggie.com/*","http://www.darkbolt.com/*","http://darkbolt.com/*","http://www.egscomics.com/*","http://egscomics.com/*","http://www.the-gutters.com/*","http://www.punchanpie.net/*","http://punchanpie.net/*","http://noneedforbushido.com/*","http://www.teahousecomic.com/*","http://www.applegeeks.com/*","http://applegeeks.com/*","http://www.mangareader.net/*","http://stoptazmo.com/*","http://www.arcamax.com/*","http://www.nettserier.no/*","http://nettserier.no/*","http://www.nerfnow.com/*","http://nerfnow.com/*","http://www.virtualshackles.com/*","http://www.little-gamers.com/*","http://www.digitalunrestcomic.com/*","http://digitalunrestcomic.com/*","http://www.duelinganalogs.com/*","http://www.actiontrip.com/*","http://actiontrip.com/*","http://www.myextralife.com/*","http://www.mondaynightcrew.com/*","http://mondaynightcrew.com/*","http://notinventedhe.re/*","http://www.unshelved.com/*","https://www.eviscerati.org/comics*","http://read.mangashare.com/*","http://haven-reader.net/*","http://www.manga2u.me/*","http://manga2u.me/*","http://buttersafe.com/*","http://www.romanticallyapocalyptic.com/*","http://romanticallyapocalyptic.com/*","http://www.somethingpositive.net/*","http://somethingpositive.net/*","http://www.rhymes-with-witch.com/*","http://rhymes-with-witch.com/*","http://www.superstupor.com/*","http://superstupor.com/*","http://www.misfile.com/*","http://www.asofterworld.com/*","http://asofterworld.com/*","http://www.achewood.com/*","http://achewood.com/*","http://www.act-i-vate.com/*","http://act-i-vate.com/*","http://www.biggercheese.com/*","http://biggercheese.com/*","http://www.gwscomic.com/*","http://gwscomic.com/*","http://www.fonflatter.de/*","http://www.ruthe.de/*","http://ruthe.de/*","http://www.daybydaycartoon.com/*","http://daybydaycartoon.com/*","http://www.dieselsweeties.com/*","http://dieselsweeties.com/*","http://www.foxtrot.com/*","http://www.csectioncomics.com/*","http://garfieldminusgarfield.net/*","http://www.girlgeniusonline.com/*","http://www.gocomics.com/*","http://www.gunnerkrigg.com/*","http://gunnerkrigg.com/*","http://www.ho-lo.co.il/*","http://www.jeffzugale.com/*","http://www.threepanelsoul.com/*","http://threepanelsoul.com/*","http://www.kevinandkell.com/*","http://kevinandkell.com/*","http://kittyhawkcomic.com/*","http://www.lackadaisycats.com/comic.php*","http://lackadaisycats.com/comic.php*","http://www.lukesurl.com/*","http://mycardboardlife.com/*","http://megatokyo.com/*","http://www.megatokyo.it/*","http://www.megatokyo.de/*","http://ex2.unixmanga.net/*","http://noreasoncomics.com/*","http://www.pixelcomic.net/*","http://pixelcomic.net/*","http://www.redmeat.com/*","http://redmeat.com/*","http://sexylosers.com/*","http://www.doonesbury.com/*","http://stalebacon.com/*","http://www.mangaeden.com/*","http://www.pbfcomics.com/*","http://tjandamal.com/*","http://sfeertheory.littlefoolery.com/*","http://wanderingones.com/*","http://www.big-big-truck.com/ayiw/*","http://big-big-truck.com/ayiw/*","http://wapsisquare.com/*","http://www.wastedtalent.ca/*","http://www.wulffmorgenthaler.com/*","http://wulffmorgenthaler.com/*","http://www.weregeek.com/*","http://*.katbox.net/*","http://*.keenspace.com/*","http://*.comicgenesis.com/*","http://www.beanleafpress.com/*","http://gipcomic.com/*","http://www.theoswaldchronicles.com/*","http://www.awkwardzombie.com/*","http://awkwardzombie.com/*","http://*.seraph-inn.com/*","https://www.fakku.net/manga/*","https://www.fakku.net/doujinshi/*","http://www.deadwinter.cc/*","http://deadwinter.cc/*","http://www.loveisintheblood.com/*","http://rhapsodies.wpmorse.com/*","http://www.piratesofmars.com/*","http://www.soulless-comic.com/*","http://www.earthsongsaga.com/vol*","http://rainchildstudios.com/strawberry/*","http://www.goblinscomic.org/*","http://www.venusenvycomic.com/*","http://venusenvycomic.com/*","http://www.meekcomic.com/*","http://www.dominic-deegan.com/*","http://dominic-deegan.com/*","http://yafgc.net/*","http://www.sdamned.com/*","http://www.twolumps.net/*","http://twolumps.net/*","http://www.precociouscomic.com/*","http://precociouscomic.com/*","http://betweenplaces.spiderforest.com/*","http://specialschool.spiderforest.com/*","http://requiem.spiderforest.com/*","http://sevensmith.net/chirault/*","http://www.junglestudio.com/roza/*","http://www.dream-scar.net/*","http://dream-scar.net/*","http://www.tryinghuman.com/*","http://tryinghuman.com/*","http://www.thedreamercomic.com/*","http://thedreamercomic.com/","http://www.shazzbaa.com/*","http://shazzbaa.com/*","http://www.freakangels.com/*","http://comics.com/*","http://www.sakanacomic.com/*","http://www.jaygeefisher.com/*","http://jaygeefisher.com/*","http://www.doujin-moe.us/*","http://keychain.patternspider.net/*","http://www.collectedcurios.com/*","http://www.doomies.com/*","http://doomies.com/*","http://www.qgmindpolice.com/*","http://www.slowwave.com/*","http://slowwave.com/*","http://www.sylvanmigdal.com/*","http://sylvanmigdal.com/*","http://www.c.urvy.org/*","http://c.urvy.org/*","http://www.the-artiste.net/*","http://www.doublefine.com/*","http://www.survivingtheworld.net/*","http://survivingtheworld.net/*","http://view.thespectrum.net/*","http://www.mangavolume.com/*","http://nonadventures.com/*","http://www.robandelliot.cycomics.com/*","http://robandelliot.cycomics.com/*","http://soulsymphonycomic.com/*","http://www.blastwave-comic.com/*","http://www.channelate.com/*","http://www.picturesforsadchildren.com/*","http://picturesforsadchildren.com/*","http://www.optipess.com/*","http://www.drawuntilitsfunny.com/*","http://beardfluff.com/*","http://lawlscomic.com/*","http://www.maakies.com/*","http://www.lefthandedtoons.com/*","http://trollscience.com/*","http://www.diggercomic.com/*","http://luciphurrsimps.com/*","http://nikkisprite.com/*","http://planet-nowhere.com/*","http://www.mysisterthefreak.com/*","http://www.gronkcomic.com/*","http://www.redsplanet.com/*","http://www.cowshell.com/*","http://everblue-comic.com/*","http://tmkcomic.depleti.com/*","http://www.remindblog.com/*","http://inkdolls.com/*","http://www.terra-comic.com/*","http://lovecraftismissing.com/*","http://www.redmoonrising.org/*","http://www.khaoskomix.com/*","http://ipaintgirls.com/*","http://memoria.valice.net/*","http://www.twilightlady.com/*","http://submanga.com/*","http://e-hentai.org/s/*","https://e-hentai.org/s/*","http://crazytje.be/*","http://www.tenmangas.com/*","http://tenmangas.com/*","http://www.tenmanga.com/*","http://tenmanga.com/*","http://www.perveden.com/*","http://reader.imangascans.org/*","http://www.bittersweetcandybowl.com/*","http://www.doujintoshokan.com/*","http://www.imagebam.com/*","http://www.exploitationnow.com/*","http://www.otakuworks.com/*","http://h-manga.info/*","http://basicinstructions.net/*","http://www.insaneyetisquirrel.com/*","http://*.kukudm.com/comiclist/*/*/*","http://*.kukudm.net/comiclist/*/*/*","http://mh.socomic.com/comiclist/*/*/*","http://www.socomic.net/comiclist/*/*/*","http://www.webcomicsnation.com/*","http://www.pawn.se/*","http://www.rpgworldcomic.com/*","http://rpgworldcomic.com/*","http://maskedretriever.com/*","http://www.missmab.com/*","http://www.lookwhatibroughthome.com/*","http://hijinksensue.com/*","http://www.darthsanddroids.net/*","http://darthsanddroids.net/*","http://www.harkavagrant.com/*","http://www.turbosloth.net/*","http://turbosloth.net/*","http://www.walkinginsquares.com/*","http://walkinginsquares.com/*","http://dresdencodak.com/*","http://www.straysonline.com/comic/*","http://straysonline.com/comic/*","http://www.emi-art.com/*","http://emi-art.com/*","http://www.dragonball-multiverse.com/*","http://insanesoft.org/fanfyria/*","http://*.snafu-comics.com/*","http://www.wayfarersmoon.com/*","http://wayfarersmoon.com/*","http://*.smackjeeves.com/*","http://www.10kcommotion.com/*","http://10kcommotion.com/*","http://somemangas.com/*","http://www.multiplexcomic.com/*","http://multiplexcomic.com/*","http://www.johnandjohn.nl/index.php?*wltypeid=1*","http://www.sorcery101.net/*","http://www.treadingground.com/*","http://www.jerkcity.com/*","http://jerkcity.com/*","http://www.kiwiblitz.com/*","http://thepunchlineismachismo.com/*","http://kafkaskoffee.com/*","http://occasionalcomics.com/*","http://www.zombieboycomics.com/*","http://www.babyblues.com/*","http://babyblues.com/*","http://www.bearandtiger.com/*","http://mangatopia.net/*","http://exhentai.org/s/*","https://exhentai.org/s/*","http://www.wigucomics.com/*","http://www.mankin-trad.net/*","http://mankin-trad.net/*","http://www.mangahere.co/*","http://es.mangahere.co/*","http://www.mangahere.cc/*","http://es.mangahere.cc/*","http://www.scarygoround.com/*","http://scarygoround.com/*","http://www.schlockmercenary.com/*","http://www.warehousecomic.com/*","http://warehousecomic.com/*","http://www.tnemrot.com/*","http://www.holiday-wars.com/*","http://www.zapcomic.com/*","http://www.twokinds.net/*","http://twokinds.net/*","http://www.dumbingofage.com/*","http://www.shortpacked.com/*","http://www.itswalky.com/*","http://itswalky.com/*","http://www.evildivacomics.com/*","http://axecop.com/*","http://www.somethingofthatilk.com/*","http://somethingofthatilk.com/*","http://www.reddit.com/","http://www.reddit.com/?*","http://www.reddit.com/r/*","http://blankitcomics.com/*","http://www.anime-source.com/*","http://anime-source.com/*","http://www.mangarush.com/*","http://www.citymanga.com/*/*/*","http://citymanga.com/*/*/*","http://www.dctp.ws/*/V*.html","http://dctp.ws/*/V*.html","http://doctorcatmd.com/*","http://www.sheldoncomics.com/*","http://sheldoncomics.com/*","http://luscious.net/*/pictures/*","http://old.lu.scio.us/hentai/albums/*","http://www.geekculture.com/joyoftech/*","http://www.basketcasecomix.com/*","http://www.geeklifecomic.com/*","http://www.realmofatland.com/*","http://realmofatland.com/*","http://thedoujin.com/index.php/pages/*","http://eatmanga.com/*","http://eatmanga.me/*","http://www.oslevadosdabreca.com/*","http://www.thedevilbear.com/*","http://thedevilbear.com/*","http://www.bladebunny.com/*","http://www.exiern.com/*","http://nsfw-comix.com/*","http://jaynaylor.com/*","http://www.anelnoath.com/*","http://www.faans.com/*","http://www.truefork.org/*","http://truefork.org/*","http://www.aorange.com/*","http://www.thewotch.com/*","http://thewotch.com/*","http://www.cheercomic.com/*","http://cheercomic.com/*","http://www.sgvy.com/*","http://sgvy.com/*","http://www.drunkduck.com/*","http://drunkduck.com/*","http://www.ephralon.de/seekers_detailed.php*","http://ephralon.de/seekers_detailed.php*","http://www.terinu.com/*","http://terinu.com/*","http://dcisgoingtohell.com/*","http://las-historietas.blogspot.com/*","http://www.palcomix.com/*","http://palcomix.com/*","http://www.palcomix.org/*","http://palcomix.org/*","http://www.whiteninjacomics.com/*","http://whiteninjacomics.com/*","http://www.apenotmonkey.com/*","http://malandchad.com/*","http://www.goodmanga.net/*","http://www.digitalcomicmuseum.com/*","http://digitalcomicmuseum.com/*","http://goldenagecomics.co.uk/*","http://fourcolorshadows.blogspot.com/*","http://thehorrorsofitall.blogspot.com/*","*//bato.to/reader*","http://www.eegra.com/*","http://www.octopuspie.com/*","http://www.lovemenicecomic.com/*","http://www.ju-ni.net/*","http://ju-ni.net/*","http://blog.saveapathea.com/*","http://www.dead-philosophers.com/*","http://www.nerd-theater.com/*","http://nerd-theater.com/*","http://lackadaisy.foxprints.com/comic.php*","http://www.mangastream.to/*","http://www.kingfeatures.com/*","http://kingfeatures.com/*","http://www.thezombiehunters.com/*","http://thezombiehunters.com/*","http://www.bugcomic.com/*","http://www.interrobangstudios.com/*","http://interrobangstudios.com/*","http://www.hlcomic.com/*","http://hlcomic.com/*","http://syacartoonist.com/*","http://satwcomic.com/*","http://stupidfox.net/*","http://www.casualvillain.com/*","http://fanboys-online.com/*","http://www.girlswithslingshots.com/*","http://www.mntgaiden.com/*","http://lovehentaimanga.com/*","http://ravensdojo.com/*","http://freefall.purrsia.com/*","http://www.mangachapter.net/*","http://www.mangachapter.me/*","http://www.shd-wk.com/*","http://shd-wk.com/*","http://www.pepsaga.com/*","http://slimythief.com/*","http://www.pebbleversion.com/*","http://pebbleversion.com/*","http://mentalcatproductions.com/*","http://schoolbites.net/*","http://www.accurseddragon.com/*","http://www.krakowstudios.com/*","http://www.stringtheorycomic.com/*","http://www.supercrash.net/*","http://loveandcapes.com/*","http://victorycomic.comicgenesis.com/*","http://magellanverse.com/*","http://www.evil-comic.com/*","http://flakypastry.runningwithpencils.com/*","http://www.pointguardian.com/*","http://gogetaroomie.chloe-art.com/*","http://legendofbill.com/*","http://www.springiette.net/*","http://springiette.net/*","http://www.vampirecheerleaders.net/*","http://www.paranormalmysterysquad.com/*","http://www.draculaeverlasting.com/*","http://www.amazingagentjennifer.com/*","http://mindmistress.comicgenesis.com/*","http://www.evernightcomic.com/*","http://www.xindm.cn/*","http://mh2.xindm.cn/*","http://www.manga123.com/read/*","http://manga.redhawkscans.com/*","http://slide.extrascans.net/*","http://*.thewebcomic.com/*","http://www.mangapark.com/*","http://mangapark.com/*","http*://mangapark.me/*","http://www.manga-go.com/*","http://www.comicstriplibrary.org/display/*","http://comicstriplibrary.org/display/*","http://www.wirepop.com/*","http://wirepop.com/*","http://www.fantasyrealmsonline.com/manga/*","http://foolrulez.org/*","http://reader.japanzai.com/*","http://www.psychopandas.com/reader/*","http://psychopandas.com/reader/*","http://www.ourmanga.com/*","http://readonline.egscans.org/*","http://read.egscans.com/*","http://reader.eternalmanga.net/*","http://gallery.ryuutama.com/*","http://*.tiraecol.net/*","http://tiraecol.net/*","http://www.conejofrustrado.com/*","http://www.e2w-illustration.com/*","http://2gamerz.com/*","http://reader.fth-scans.com/*","http://www.simple-scans.com/*","http://simple-scans.com/*","http://www.mymangaspot.com/*","http://comic.naver.com/*","http://www.peteristhewolf.com/*","http://peteristhewolf.com/*","http://www.wlpcomics.com/*","http://wlpcomics.com/*","http://www.mangatraders.com/*","http://hentaifromhell.net/*","http://trenchescomic.com/*","http://www.sakicow.com/reader/*","http://sakicow.com/reader/*","http://www.goominet.com/unspeakable-vault/*","http://www.doesnotplaywellwithothers.com/*","http://krakowstudios.com/*","http://www.aikoniacomic.com/*","http://aikoniacomic.com/*","http://www.grrlpowercomic.com/*","http://www.poisonedminds.com/*","http://poisonedminds.com/*","http://nodwick.humor.gamespy.com/*","http://www.the-whiteboard.com/*","http://the-whiteboard.com/*","http://www.mezzacotta.net/*","http://www.hbrowse.com/*","http://aptitude.surfacingpoint.com/*","http://www.bardsworth.com/*","http://fancyadventures.com/*","http://www.chron.com/entertainment/comics-games/comic/*","http://www.purplepussy.net/*","http://purplepussy.net/*","http://www.heroeslocales.com/bunsen/*","http://www.readhentaionline.com/*","http://readhentaionline.com/*","http://www.darklegacycomics.com/*","http://darklegacycomics.com/*","http://candicomics.com/*","http://www.buckocomic.com/*","http://bearmageddon.com/*","http://betweenfailures.net/*","http://www.sisterclaire.com/*","http://www.fayerwayer.com/*","http://www.niubie.com/*","http://www.awesomehospital.com/*","http://ars.userfriendly.org/cartoons/*","http://www.friendswithboys.com/*","http://www.mangago.com/*","http://www.jesusandmo.net/*","http://www.calamitiesofnature.com/*","http://www.rosalarian.com/*","http://rosalarian.com/*","http://dungeond.com/*","http://www.irregularwebcomic.net/*","http://adistantsoil.com/*","http://comic.nodwick.com/*","http://ffn.nodwick.com/*","http://ps238.nodwick.com/*","http://kronos.mcanime.net/*","http://www.ghastlycomic.com/*","http://thedevilspanties.com/*","http://walkingdeadbr.com/*displayimage.php*","http://www.mangapanda.com/*","http://mangable.com/*","http://dragonflyscans.org/*","http://readincesthentai.com/*","http://www.animephile.com/*","http://hentaistreamer.com/*","http://www.mangatank.com/*","http://www.snowflakescomic.com/*","http://mangafox.mobi/*","http://www.mangainn.me/*","http://invisiblebread.com/*","http://onlinereader.mangapirate.net/*","http://www.8comic.com/love/*","http://8comic.com/love/*","http://www.mangahead.com/*","http://www.mangahead.me/*","http://mangahead.com/*","http://www.vickifox.com/*","http://www.spinnyverse.com/*","http://zenpencils.com/*","http://wootmanga.com/*","http://hentai2read.com/*","http://m.hentai2read.com/*","http://komikmy.com/*/*/*","http://www.hentaifr.net/doujinshisheng.php*","http://www.commissionedcomic.com/*","http://www.mangasky.com/*","http://mangapirate.net/*","http://nomanga.com/*","http://hentaimangaonline.com/*","http://webcomics.yaoi911.com/*","http://www.whompcomic.com/*","http://actiontimebuddies.com/*","http://www.superbrophybrothers.com/*","http://www.surasplace.com/*","http://surasplace.com/*","http://fallensyndicate.com/reader/*","http://www.nekothekitty.net/*","http://curtailedcomic.com/*","http://www.wiemanga.com/*","http://img.wiemanga.com/*","http://hentai4manga.com/*","http://bradcolbow.com/*","http://www.gaomanga.com/*","http://www.theherobiz.com/*","http://guildedage.net/*","http://betweenfailures.com/*","http://www.claudeandmonet.com/*","http://phobia.subcultura.es/tira/*","http://www.manga-tu.be/*","http://de.ninemanga.com/*","http://proxer.me/*","http://www.demanga.com/*","http://www.meinmanga.com/*","http*://www.senmanga.com/*","http*://raw.senmanga.com/*","http://www.mangaesta.net/*","http://www.mabuns.web.id/*","http://www.manga4indo.com/*","http://www.bloomingfaeries.com/*","http://www.friendshipscans.com/*","http://neechan.net/*","http://www.komikid.com/*","http://komikid.com/*","http://blog.komikid.com/*","http://www.findchaos.com/*","http://chaoslife.findchaos.com/*","http://moonoverjune.com/*","http://www.shadbase.com/*","http://www.shagbase.com/*","http://www.mrlovenstein.com/*","http://www.anticscomic.com/*","http://octopuns.blogspot.com/*","http://www.onemanga.me/*","http://mangacow.co/*","http://www.mangabee.com/*","http://mangadoom.co/*","http://www.powernapcomic.com/*","http://mangachrome.com/*","http://www.7manga.com/*","http://7manga.com/*","http://www.mangadevil.com/*","http://mangadevil.com/*","http://www.mangamofo.com/*","http://*.hentai.ms/*","http://view.mangamonger.com/*","http://blackbird.ashen-ray.com/*","http://carciphona.com/*","http://ahs-comic.com/*","http://www.gogetaroomie.com/*","http://gogetaroomie.com/*","http://*.thecomicseries.com/*","http://www.sleepymaid.com/gallery/displayimage.php*","http://sleepymaid.com/gallery/displayimage.php*","http://www.squid-ops.com/*","http://squid-ops.com/*","http://www.endcomic.com/*","http://www.thenoobcomic.com/*","http://thenoobcomic.com/*","http://zizki.com/*","http://*.zizki.com/*","http://pururin.com/*","http://www.thedailyblink.com/*","http://mangabandits.net/*","http://www.neumanga.com/*","http://www.pecintakomik.com/*","http://www.schizmatic.com/*","http://schizmatic.com/*","http://www.yuri-ism.net/*","http://www.bringbackroomies.com/*","http://www.wtfcomics.com/*archive.html?*","http://wtfcomics.com/*archive.html?*","http://www.olympusoverdrive.com/index.php?*","http://olympusoverdrive.com/index.php?*","http://*gucomics.com/*","http://www.punksandnerds.com/*","http://*.troutcave.net/*","http://www.berserkersdaughter.com/*","http://gingerhaze.com/nimona/comic/*","http://aiacrowd.com/*","http://aspect.waywardstudios.net/*","http://chirault.sevensmith.net/*","http://cucumber.gigidigi.com/*","http://filteredfuzz.com/*","http://www.dorktower.com/*","http://mangajoy.com/*","http://nhentai.net/*","http://www.hejibits.com/*","http://mangaindo.co/*","http://5.79.87.81/*","http://www.gao-subs.com/*","http://www.mangawindow.com/*","http://mangawindow.com/*","http://omgmanga.com/*","http://paintraincomic.com/*","http://extrafabulouscomics.com/*","http://hellocomic.com/*","http://*.hellocomic.com/*","http://www.feywinds.com/comic/*","http://www.omgbeaupeep.com/*","http://orgymania.net/*","http://mspaintadventures.com/*","http://www.mspaintadventures.com/*","http://mspfanventures.com/","http://agc.deskslave.org/comic_viewer.html","http://www.readmanga.today/*","http://www.mangatown.com/manga/*","http://www.mymanga.me/manga/*","http://www.legostargalactica.net/*","http://hentaihere.com/m/*/*/*","http://gomanga.co/reader/read*","http://mangasee.co/manga/*","http://mangaseeonline.us/*","http://mangafap.com/image/*","http://*.keenspot.com/*","http://dynasty-scans.com/*","http://*.dynasty-scans.com/*","http://mangafast.online/manga/*","http://www.demonicscans.com/FoOlSlide/read/*","http://raws.yomanga.co/read/*","http://*.dm5.com/m*","https://nhentai.net/g/*","http://www.marycagle.com/*","http://www.sleeplessdomain.com/*","http://www.webtoons.com/*","http://www.tsumino.com/Read/View/*","http://incase.buttsmithy.com/comic/*","http://leylinescomic.com/comics/*","http://project-apollo.net/mos/*","http://afterstrife.com/?p*","https://hitomi.la/reader/*","https://danbooru.donmai.us/*","https://manga.madokami.al/reader/*"],"orig_matches":["*://*.xkcd.com/*","*://*.smbc-comics.com/*","*://*.questionablecontent.net/*","*://fanfox.net/*","*://m.fanfox.net/*","*://*.oglaf.com/*","*://*.sandraandwoo.com/*","*://kissmanga.com/*","*://*.blindsprings.com/*","*://*.forgottenordercomic.com/*","*://www.mngdoom.com/*/*","*://kimchicuddles.com/post/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{"wcr.settings":"s{\"e-hentai.org\":{\"last\":{\"url\":\"https://e-hentai.org/s/6ae1ab670d/1349675-12\",\"title\":\"(C85) [Entelekheia (Chirumakuro)] Zuri Live! (Love Live!) [Spanish] [SatoSatori Fansub]\"},\"fit\":\"1\",\"achw\":1,\"achh\":1,\"agrw\":0,\"agrh\":0,\"bordex\":0,\"bordey\":0}}"},"ts":1547883531132},"enabled":true,"position":13,"file_url":"https://openuserjs.org/install/anka-213/Webcomic_Reader.user.js","uuid":"b09dab1b-762e-4878-9e53-124419b92fc0","source":""},{"name":"E[-X]Hentai Helper","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://*.e-hentai.org/*","*://exhentai.org/*"],"orig_noframes":true,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1547879847919,"data":{}},"enabled":false,"position":14,"file_url":"https://openuserjs.org/install/Crazycatz00/E[-X]Hentai_Helper.user.js","uuid":"e6ee488d-d01c-459a-b0bd-8f45bd9cdf4f","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIEVbLVhdSGVudGFpIEhlbHBlcgovLyBAbmFtZXNwYWNlICAgQ3JhenljYXR6MDAKLy8gQGRlc2NyaXB0aW9uIEF1dG8gdHJhbnNmZXIgZmpvcmRzOyBJbnRlci1zaXRlIGxpbmtzOyBTYWQgUGFuZGEgbG9naW47IGV0Yy4KLy8gQGljb24gICAgICAgIGRhdGE6aW1hZ2UvZ2lmO2Jhc2U2NCxSMGxHT0RsaExBQXdBUFFmQUhGeGNKS1NraTR1THRMUTBQNysvdUhpNHJ1N3UxaFlXRVZGUmZYMTlkS2pwQWdJQ0tTaW9tUldWMVJIU0lxSWgyaG9aMGRVUnpnNE9ERWlJajQrUGp4Rk94c2FHMU5UVTBVOFJHSmlZbitBZjExZFhVMU5UU1FrSk96czdKT1NreUg1QkFVQUFCOEFMQUFBQUFBc0FEQUFBQVgvNENlT1pHbCsyUVlBMittKzhBZGNVTUFNZzJGb1IreS9GSTJoNFBFRU9CZUFZUUQ0T1VjTmhpZVJJQlE2RnF4QXcydytZWmVPZ1pBb0Vnd0NpVURRRVh1OFh4T2dzd2dRaXRTelpTMnhjQklGVEhFbUN4WVNIbmRWQkZacUVuUU1kNEVRZ3lOckN3Q0pCRGxMRzNzV2RsUkVCbkJ4RnhZTEQzZFdkQjFwRmhhUVpHVUZCQUdVSXAxMmlBd0xDQm9QRzFnRHNyTUZCYVNEa0xzTEZ4b0FGQllhaTFTaEF3a010eUpTaUFNZENCUUMwWXZFbWtNZUd0a0Ixb3NJQzh4ajQza0pTd1hYMlIrcGlPMEdpdVMxc2NZbTNYcHdZeDR0UldVVUFUQUVRZEdEYkVMR2FhS1ZpUUVkQWFZd2FXcEI2UUdpZWhObEViaXdvRU1HQ0NndC80eEpnT3dKZ0FjUE5NWWpvR0VCQndBWk1od0lCb0VNdGxzTEpvd3hzNGlYTHdnWkxpQkFJQUFCR1VHM09EQXc4SUJXQVFQUUFqdzRvUFJibWxBUHN3bEFKWW9KQkFZUUxuQllxa1lBTFE4L2dhWWljMFpBQUEwWHVrcFEwMkdZaDFIWkZsQ2Nra0hDQXdnSDF1NmxzRUJBbFVBdG5Xam9NTTNEQUFvWldDU21JQUZjblVVZUNxQTdJZkRGaGd5Z0V3U1FBQUN4VXM1anBZMHpRdW9BbXpXUlJWQUFSWmdDWXE0STlyNGFKaEV0Q1FzUU9GQUk4MEtBM3dRREVIRFljQUc0bzE0U0Z4bklNQUtBZ3djT0dqd3c2UUxCbENrQkJHdzRzRE00bTgvWkM1UVdRSUZwZ3daN1QyOUFpUlJqSkE4UXFMZlRCZUMwWVFGRkVoMGpBdjhBQW5BZ1FYQ2RZUVpCYXpsQnNFQlB4Z3l3Rm5zSEZEaldBZG1CNXNVekY5REhsZ0RzYmFEaVRndElNMEFCREZDUUlsT3QwR0ZIaU9jc0tFRk9HTlMzUmw1cWNTQmtIZEFkUTRHS05MWmhZNGgzaE9XZ0FnTTAwRlFhUzFXNTFBSU1HSVBWQlJsd29BVUZISENGSW5HempmYUJCQXdvNE1DRGkxSGc1bEtNWlhrT0FvVzFnc0FCT2ExbnlnTHdMQ0xhQ0JMYzk2Q2JuSFhtQ0Jhd3pOTmhCeEpNbHdLSEhMYUMwQUMyaUxCWFUwc3BaNmlCcDR6UlRsTjVRc3BlWGh6QVJ3QURZWDNnNEp2MWZlT0lBeHcwZGFHRk8rcTBrNjJpY29BY1hRQXNVTUVJakxMUlNpUGZZWUFBQkl4WmNCS2tLNTZXUWw0SVdMQ0JkcTJBQTBPcG9CbDAwRUFBNENDdzNucDQ1bFNoVGtKS3NBQnFDWkQwRFFiWHdpYUJBNXgxNEtpektPVkpuV0tYbkxvQVp4UEVjT1Fhd2JtSkVYOG5RUUR1dmNwaHNVUWJBdlFiQXhJT09DRGRZdUx5dHlJU2lyRkJFSGRQYkNDQkFtb1c2dTFPS3VyWkZXenlsdmJFQlE0TW9BQituTW00NHFoc1NUQUJGci9lWWdISXhzYU1oRm9JWU1CWEt4SGNJd0tqR0dEMHBvUGhNQnBCRDBhWFVLMmJiZFVYTlF5eHJrSEIxU0tFQUFBNwovLyBAbWF0Y2ggICAgICAgKjovLyouZS1oZW50YWkub3JnLyoKLy8gQG1hdGNoICAgICAgICo6Ly9leGhlbnRhaS5vcmcvKgovLyBAdmVyc2lvbiAgICAgMi4yLjMKLy8gQGdyYW50ICAgICAgIG5vbmUKLy8gQG5vZnJhbWVzCi8vID09L1VzZXJTY3JpcHQ9PQoKaWYgKHdpbmRvdy5sb2NhdGlvbi5oYXNoID09PSAnI2V4aENvb2tpZUxvZycpCnsKCXdpbmRvdy5wcm9tcHQoIk1ha2Ugc3VyZSB5b3UgYXJlIGN1cnJlbnRseSBsb2dnZWQgaW4hXG5Db2RlOiIsIEpTT04uc3RyaW5naWZ5KGRvY3VtZW50LmNvb2tpZS5zcGxpdCgvO1xzKi8pLmZpbHRlcihmdW5jdGlvbihjKXsgcmV0dXJuIGMuaW5kZXhPZignaXBiXycpID09PSAwOyB9KSkpOwp9Cgp2YXIgYXBwZW5kSGVhZExpbmsgPSBmdW5jdGlvbigpewoJdmFyIGhlYWQsIGltZzsKCXJldHVybiBmdW5jdGlvbih0eHQsIHNyYyl7CgkJaWYgKCFoZWFkKSB7IGlmICghKGhlYWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbmInKSkpIHsgcmV0dXJuIG51bGw7IH0gfQoJCWlmICghaW1nKSB7IGltZyA9IChoZWFkLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdpbWcnKVswXSB8fCB7fSkuc3JjOyB9CgoJCXZhciBlOwoJCWlmIChpbWcpCgkJewoJCQllID0gaGVhZC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKSk7CgkJCWUuYWx0ID0gJyc7CgkJCWUuc3JjID0gaW1nOwoJCQloZWFkLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCcgJykpOwoJCX0KCQkKCQllID0gaGVhZC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJykpOwoJCWUuaHJlZiA9IHNyYzsKCQllLnRleHRDb250ZW50ID0gdHh0OwoJCXJldHVybiBlOwoJfTsKfSgpLAoKZWhlbnRhaSA9IGZ1bmN0aW9uKCl7CgkvLyAtLS0gQWRkIEV4IGxpbmsKCXZhciBoZWFkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25iMycpLCBlOwoJaWYgKGhlYWQpCgl7CgkJZSA9IGhlYWQucGFyZW50Tm9kZTsKCQllLnN0eWxlLmRpc3BsYXkgPSAnaW5saW5lLWJsb2NrJzsKCQllLnN0eWxlLndpZHRoID0gaGVhZC5zdHlsZS53aWR0aCA9ICdhdXRvJzsKCQkKCQllID0gaGVhZC5pbnNlcnRCZWZvcmUoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JyksIGhlYWQuY2hpbGRyZW5baGVhZC5jaGlsZHJlbi5sZW5ndGggLSAxXSk7CgkJZS5zdHlsZS5jc3NGbG9hdCA9ICdsZWZ0JzsKCQkKCQllID0gZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJykpOwoJCWUuaHJlZiA9ICcvL2V4aGVudGFpLm9yZy8nOwoJCQoJCWUgPSBlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpKTsKCQllLmFsdCA9ICdFeEhlbnRhaSBHYWxsZXJpZXMnOwoJCWUuc3JjID0gJ2RhdGE6aW1hZ2UvZ2lmO2Jhc2U2NCxSMGxHT0RkaGN3QWxBUFVBQUhSQ0Q1dE1DdUhlejFzT0RhcFlFYXhxTUtlaWhKbFNCSUJHQm1jMUJidUdVYXhtS1p0WkZhaDlUWFk3QTFreUNhbHpPSVE5QWFoaEhKNWxLcGRjSkcwcEJKQkZBckoxUFpoTUZiZHJJNGRWRzdKb05aNUxBSDFKR1k5TUFvOUpES05kTkp4RUF1YmsxYW1raHQzYXk5clh4cXVtaUxXd2s3Q3JqdWpnM2JPdWtkWFN3ZVRoenE2cGpMbXptZC9jemRqVnhNN010OFMvcWRQUXY4ekhzN3kybnNqRHJkRE51cis3b21BOEZxMXlMcDVlRzdCdUxsVkFKSXBQRU1KMVFTd0FBQUFBY3dBbEFBQUcvOENCY0Vnc0dvL0lwSExKYkRxVmhhaDBTcTFhcjlpc2RzdnRaZy9nc0hoTUxwdlA2TFI2elVZSDN2QzRmRTZ2MisvNHZINS9mL3IvZ0lHQ1NpS0Zob2VJaVlxTGpJMk9qNUNSalNtVWxaYVhtSm1hbTV5ZG5wK2duQ3lqcEtXbXA2aXBxcXVzcmE2dnF3S3lzN1MxdHJlNHVicTd2TDIrdjhEQndzUEV4Qy9IeU1uS3k4ek56cy9RMGRMVHp5VFcxOWpaMnR2YzNkN2Y0T0hpM2lYbDV1Zm82ZXJyN08zdTcvRHg3VEQwOWZiMytQbjYrL3o5L3Y4QSthMFlTTENnd1lNSUV5cGN5TENodzRjTFowaWNTQkZBRG9vemNnREFLUEdCeHdRZ0UzVG8rQ0JrZ2h3clpqell5TEZIajVRY2M1UU02V0JrRHBNZ0w2cEVxWEltU1A4SExEK2ExTUNSNG8yalNKTVc4SkRnYUl3RUh3b2tQWm9nQWdNSkJDanNtREFoaG9NSUZDRHcySUVCZzRVYkRqQk1wUnBnN1kwSEVRNFF1Q29CQW9RYkhqaG94Y0RBQXdJRU53Q2NyUnFBZ0dFSk9uakU2SUdBdzQ3RElCcTRSUnFqc3VYTE1Sb2dxQkNqQW9JR21DczcyQkZhdEFUTVBqakVRRUNnTkFEU29YUDRpSEdqTk8zTGNtTkVVSTJnUTIzYXYzVi9zRTJjaHZIanlJMVRpSkRBd1lUakVUem1vSkdBQUEwRUVTdzQrRXZqQTRQa0NBNWMvNTZjQmdEeXlTdDQ4R0RoTC9vSFFBRTRTQURnQUFRYUZyNUg4SEFnUW5ZS3gzM0FBUVlJT1BCVkIrVWxaOE9DRERhNG9BWVlnTUFYZzNSaFlJTmdObndRQUFZZWhIRC9nQTBPRUdCRGRBL2tFTjZJSERpNG9BTUJxR2dEQWdHTVJjQldERG9Rd2dJTEVKQVhCUXNpNE1HSUIwaXd3Mk1UTktpQkJGY3hnSUFGR3JqSW9BeFFSaW1sREtsSklJTUVCeUF3SlpRT0hEQ2xCZ3pJWUFFQk1sUVl3QUl5QVBEQmxqSTRzT2FXRG9USkpnQVRSQWtDQVZhMjZlVUhHTERwSndkMStpa0REb1FXYWlnRmNoVkt3QUU3R0Vyb2VoMFVDQUFDSDBpQVExU09FcEFCRGhTRVlJRkpIZUNnZ1YrZzR2REdCOW9CRUFFQW9WcXdnYUVNWklXREJRdmc0SU9IazM0VkFRSTR6QWZBcnhINHNFTURqanBhdzdISUpxdkFBc25Xc0lBQ3pSNEx3UVVaOExEQkJSZEFXMEFEelc1N0xMVTg4RkFBQk56V01PMEZDMXg3LzRHME91aVFnUTdqUXVEc0Q4MU9vRzI1RUZ4YndBWUxURnZEVlRvc2tFRUIyVWJickFzSUo2end3Z3czdkhBTkRrY3NNY1FTVjJ4eHd4UkhmTUxHSEhmczhjY2doeXp5eUNTWGJQTEpJNnVnOHNvc3Qrenl5ekRITFBQTU5OZHNzOHdvNUt6enpqejM3UFBQUUFjdDlOQkVGeDEwQzBnbnJmVFNURGZ0OU5OUVJ5MzExRlJEYmNMVldHZXQ5ZFpjZCszMTEyQ0hMZmJZWDQ5Zzl0bG9wNjMyMm15MzdmYmJjTWN0dDlzRzFHMzMzWGpucmZmZWZQZnQ5OStBQnk3NDRJUVhidmpoaHcraStPS01OODdINDVCSEx2bmtkMWhnK2VXWVo2NzU1cHgzN3Zubm9JY3V1dWNWbEc3NjZhaW5ydnJxckxmdSt1dXd4OTU2NDdUWGJnUjdFa0VBQURzSyc7Cgl9Cn0sCmdlaGVudGFpID0gZnVuY3Rpb24oKXsKCXZhciBleFVSTCA9ICcvL2V4aGVudGFpLm9yZycgKyB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWU7CgkKCS8vIC0tLSBSZWRpcmVjdCBmam9yZHMKCWlmIChkb2N1bWVudC50aXRsZS5pbmRleE9mKCdHYWxsZXJ5IE5vdCBBdmFpbGFibGUnKSAhPT0gLTEpCgl7CgkJd2luZG93LmdvdG9uZXh0ID0gZnVuY3Rpb24oKXt9OwoJCXdpbmRvdy5zdG9wKCk7CgkJd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoZXhVUkwgKyAnP2Zqb3JkcycpOwoJCXJldHVybjsKCX0KCQoJLy8gLS0tIEFkZCBFeCBsaW5rCglhcHBlbmRIZWFkTGluaygnRXhIZW50YWknLCBleFVSTCk7Cn0sCmV4aGVudGFpID0gZnVuY3Rpb24oKXsKCXZhciBlOwoJCgkvLyAtLS0gU2FkIFBhbmRhIGNoZWNrCglpZiAoKGUgPSBkb2N1bWVudC5ib2R5LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdpbWcnKSkubGVuZ3RoID09PSAxICYmIGVbMF0uc3JjID09PSB3aW5kb3cubG9jYXRpb24uaHJlZikKCXsKCQlleGhlbnRhaUxvZ2luKCk7CgkJcmV0dXJuOwoJfQoJCgkvLyAtLS0gQWRkIEdFIGxpbmsgaWYgbm90IGZqb3JkcwoJaWYgKHdpbmRvdy5sb2NhdGlvbi5zZWFyY2guc2VhcmNoKC9bPyZdZmpvcmRzKD86WyY9XXwkKS9pKSA9PT0gLTEpCgl7CgkJYXBwZW5kSGVhZExpbmsoJ0UtSGVudGFpJywgJy8vZy5lLWhlbnRhaS5vcmcnICsgd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lKTsKCX0KfSwKZXhoZW50YWlMb2dpbiA9IGZ1bmN0aW9uKCl7Cgl2YXIgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JyksCgkJY29va2llVGV4dCA9IGNvbnRhaW5lci5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpKSwKCQlzdWJtaXQgPSBjb250YWluZXIuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKSksCgkJZ2V0Q29kZSA9IGNvbnRhaW5lci5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJykpLAoJCW9uRW50ZXIgPSBmdW5jdGlvbihlKXsgaWYgKGUud2hpY2ggPT09IDEzICYmICFzdWJtaXQuZGlzYWJsZWQpIHsgb25TdWJtaXQoKTsgfSB9LAoJCW9uU3VibWl0ID0gZnVuY3Rpb24oKXsKCQkJaWYgKHN1Ym1pdC5kaXNhYmxlZCkgeyByZXR1cm47IH0KCQkJc3VibWl0LmRpc2FibGVkID0gdHJ1ZTsKCQkJdHJ5CgkJCXsKCQkJCXZhciBjb29raWVzID0gSlNPTi5wYXJzZShjb29raWVUZXh0LnZhbHVlKTsKCQkJCWlmICh0eXBlb2YgY29va2llcyA9PT0gJ29iamVjdCcgJiYgY29va2llcy5sZW5ndGggPiAwKQoJCQkJewoJCQkJCWZvciAodmFyIGkgPSAwOyBpIDwgY29va2llcy5sZW5ndGg7ICsraSkKCQkJCQl7CgkJCQkJCWRvY3VtZW50LmNvb2tpZSA9IGNvb2tpZXNbaV0ucmVwbGFjZSgvKD86O1xzKnBhdGg9XFMrfCQpLywgJzsgcGF0aD0vJykucmVwbGFjZSgvKD86O1xzKmRvbWFpbj1cUyt8JCkvLCAnOyBkb21haW49LicgKyB3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUpLnJlcGxhY2UoLyg/OjtccyptYXgtYWdlPVxTK3wkKS8sICc7IG1heC1hZ2U9MzE1MzYwMDAnKTsKCQkJCQl9CgkJCQkJd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpOwoJCQkJfQoJCQl9CgkJCWNhdGNoIChlKQoJCQl7CgkJCQlhbGVydChlKTsKCQkJCXN1Ym1pdC5kaXNhYmxlZCA9IGZhbHNlOwoJCQl9CgkJfTsKCQoJY29udGFpbmVyLnN0eWxlLnRleHRBbGlnbiA9ICdjZW50ZXInOwoJY29va2llVGV4dC50eXBlID0gJ3RleHQnOwoJY29va2llVGV4dC5wbGFjZWhvbGRlciA9ICdDb29raWUgQ29kZSc7CgkKCXN1Ym1pdC50eXBlID0gJ2J1dHRvbic7CglzdWJtaXQudmFsdWUgPSAnTG9naW4hJzsKCQoJZ2V0Q29kZS5ocmVmPSAnaHR0cDovL2ZvcnVtcy5lLWhlbnRhaS5vcmcvaW5kZXgucGhwP2FjdD1Mb2dpbiNleGhDb29raWVMb2cnOwoJZ2V0Q29kZS50YXJnZXQgPSAnZXhoV2luZG93JzsKCWdldENvZGUudGV4dENvbnRlbnQgPSAnR2V0IENvZGUnOwoJZ2V0Q29kZS5zdHlsZS5jc3NUZXh0ID0gJy1tb3otYXBwZWFyYW5jZTogYnV0dG9uOyBhcHBlYXJhbmNlOiBidXR0b247IHBhZGRpbmc6IDAgLjJlbTsgdGV4dC1kZWNvcmF0aW9uOiBub25lOyBjb2xvcjogaW5pdGlhbDsnOwoJCgljb29raWVUZXh0LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBvbkVudGVyLCBmYWxzZSk7CglzdWJtaXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvblN1Ym1pdCwgZmFsc2UpOwoJCglkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNvbnRhaW5lcik7Cn0sCgpnZW5lcmFsX3ZpZXdlciA9IGZ1bmN0aW9uKCl7CgkvLyAtLS0gQXV0by1ydW4gdGhlIGZhaWxlZCBpbWFnZSBjb2RlIGFmdGVyIDMgc2Vjb25kcwoJdmFyIGxvYWRGYWlsU1RPLAoJCWxvYWRGYWlsQ2hlY2sgPSBmdW5jdGlvbigpewoJCQl2YXIgaW1nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ltZycpOwoJCQlpZiAoaW1nLm5hdHVyYWxXaWR0aCA9PT0gMCkKCQkJewoJCQkJaWYgKHR5cGVvZiB3aW5kb3cuc2kgIT09ICdudW1iZXInKSB7IHdpbmRvdy5zaSA9IDE7IH0KCQkJCWlmICh0eXBlb2Ygd2luZG93Lm5sID09PSAnZnVuY3Rpb24nKSB7IHdpbmRvdy5ubCh3aW5kb3cuc2kpOyB9CgkJCQllbHNlIHsgd2luZG93LmxvY2F0aW9uLnNlYXJjaCArPSAod2luZG93LmxvY2F0aW9uLnNlYXJjaFswXSA9PT0gJz8nID8gJyYnIDogJz8nKSArICdubD0nICsgd2luZG93LnNpOyB9CgkJCX0KCQl9LAoJCWxvYWRGYWlsID0gZnVuY3Rpb24oKXsKCQkJLy8gRG9uJ3QgcnVuIGl0IGFnYWluIGlmIHdlIGFscmVhZHkgaGF2ZSAodmlld2VyIHNldHMgdGhpcyBmb3IgdXMpCgkJCWlmICh3aW5kb3cubG9jYXRpb24uc2VhcmNoLnNlYXJjaCgvWz8mXW5sPS9pKSA9PT0gLTEpCgkJCXsKCQkJCWxvYWRGYWlsU1RPID0gc2V0VGltZW91dChsb2FkRmFpbENoZWNrLCAyNTAwKTsKCQkJfQoJCX07CgkKCWxvYWRGYWlsKCk7CgkKCS8vIEFsc28gYWZmZWN0IGR5bmFtaWNhbGx5IGxvYWRlZCBwYWdlcwoJdmFyIHByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKHdpbmRvdy5oaXN0b3J5KTsKCXByb3RvLm9yaWdSZXBsYWNlU3RhdGUgPSBwcm90by5yZXBsYWNlU3RhdGU7Cglwcm90by5yZXBsYWNlU3RhdGUgPSBmdW5jdGlvbihkYXRhLCB0aXRsZSwgdXJsKXsKCQlpZiAobG9hZEZhaWxTVE8pIHsgY2xlYXJUaW1lb3V0KGxvYWRGYWlsU1RPKTsgfQoJCXdpbmRvdy5oaXN0b3J5Lm9yaWdSZXBsYWNlU3RhdGUoZGF0YSwgdGl0bGUsIHVybCk7CgkJbG9hZEZhaWwoKTsKCX07Cn07Cgpzd2l0Y2ggKHdpbmRvdy5sb2NhdGlvbi5ob3N0KQp7CgljYXNlICdlLWhlbnRhaS5vcmcnOiBlaGVudGFpKCk7IGJyZWFrOwoJY2FzZSAnZy5lLWhlbnRhaS5vcmcnOiBnZWhlbnRhaSgpOyBicmVhazsKCWNhc2UgJ2V4aGVudGFpLm9yZyc6IGV4aGVudGFpKCk7IGJyZWFrOwp9CmlmICh3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUuaW5kZXhPZignL3MvJykgPT09IDApIHsgZ2VuZXJhbF92aWV3ZXIoKTsgfQo="},{"name":"ExVisited","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["http://exhentai.org/*","https://exhentai.org/*","http://g.e-hentai.org/*","https://g.e-hentai.org/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1547879896909,"data":{}},"enabled":true,"position":15,"file_url":"https://openuserjs.org/install/Luciano_Basurto/ExVisited.user.js","uuid":"0949bff4-1694-4ea9-b70a-0598ad982054","source":"","requires":[{"meta":{"name":"jquery-1.11.0.min.js","url":"http://code.jquery.com/jquery-1.11.0.min.js","ts":1547879900507,"mimetype":"text/javascript"},"source":""}]},{"name":"CSDN web助手","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://blog.csdn.net/**","https://www.baidu.com/**"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1548047675261,"data":{}},"enabled":true,"position":16,"uuid":"890e9051-5708-4dad-96d1-b538ae38c0a1","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBDU0ROIHdlYuWKqeaJiwovLyBAbmFtZXNwYWNlICAgIGh0dHA6Ly90YW1wZXJtb25rZXkubmV0LwovLyBAdmVyc2lvbiAgICAgIDAuMQovLyBAZGVzY3JpcHRpb24gIHRyeSB0byB0YWtlIG92ZXIgdGhlIHdvcmxkIQovLyBAYXV0aG9yICAgICAgIFlvdQovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vYmxvZy5jc2RuLm5ldC8qKgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vd3d3LmJhaWR1LmNvbS8qKgovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gPT0vVXNlclNjcmlwdD09CgooZnVuY3Rpb24oKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICBpZighJCl7CiAgICAgICAgdmFyIHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpOwogICAgICAgIHNjcmlwdC5zcmMgPSAiaHR0cHM6Ly9jZG4uYm9vdGNzcy5jb20vanF1ZXJ5LzMuMi4xL2pxdWVyeS5taW4uanMiOwogICAgICAgIHNjcmlwdC5hc3luYyA9ICJmYWxzZSI7CiAgICB9CiAgICB2YXIgdGVzdCA9ICQoJyNidG4tcmVhZG1vcmUnKTsKICAgIHRlc3QudHJpZ2dlcignY2xpY2snKTsKICAgICQoJy5ibG9nX3N0YXJfZW50ZXInKS5oaWRlKCk7CmNvbnNvbGUubG9nKCflsI/liqnmiYsnKQoKfSkoKTsKZnVuY3Rpb24gdGVzdCAoKXsKYWxlcnQoJ3Rlc3QnKQp9Ci8vIGZhaWwKZnVuY3Rpb24gZmlyZUtleUV2ZW50MihlbCwgZXZ0VHlwZSwga2V5Q29kZSl7CiAgICB2YXIgZG9jID0gZWwub3duZXJEb2N1bWVudCwKICAgICAgICB3aW4gPSBkb2MuZGVmYXVsdFZpZXcgfHwgZG9jLnBhcmVudFdpbmRvdywKICAgICAgICBldnRPYmo7CiAgICBpZihkb2MuY3JlYXRlRXZlbnQpewogICAgICAgIGlmKHdpbi5LZXlFdmVudCkgewogICAgICAgICAgICBldnRPYmogPSBkb2MuY3JlYXRlRXZlbnQoJ0tleUV2ZW50cycpOwogICAgICAgICAgICBldnRPYmouaW5pdEtleUV2ZW50KCBldnRUeXBlLCB0cnVlLCB0cnVlLCB3aW4sIGZhbHNlLCBmYWxzZSwgZmFsc2UsIGZhbHNlLCBrZXlDb2RlLCAwICk7CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgICBldnRPYmogPSBkb2MuY3JlYXRlRXZlbnQoJ1VJRXZlbnRzJyk7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShldnRPYmosICdrZXlDb2RlJywgewogICAgICAgICAgICAgICAgZ2V0IDogZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzLmtleUNvZGVWYWw7IH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShldnRPYmosICd3aGljaCcsIHsKICAgICAgICAgICAgICAgIGdldCA6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcy5rZXlDb2RlVmFsOyB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBldnRPYmouaW5pdFVJRXZlbnQoIGV2dFR5cGUsIHRydWUsIHRydWUsIHdpbiwgMSApOwogICAgICAgICAgICBldnRPYmoua2V5Q29kZVZhbCA9IGtleUNvZGU7CiAgICAgICAgICAgIGlmIChldnRPYmoua2V5Q29kZSAhPT0ga2V5Q29kZSkgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coImtleUNvZGUgIiArIGV2dE9iai5rZXlDb2RlICsgIiDlkowgKCIgKyBldnRPYmoud2hpY2ggKyAiKSDkuI3ljLnphY0iKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBlbC5kaXNwYXRjaEV2ZW50KGV2dE9iaik7CiAgICB9CiAgICBlbHNlIGlmKGRvYy5jcmVhdGVFdmVudE9iamVjdCl7CiAgICAgICAgZXZ0T2JqID0gZG9jLmNyZWF0ZUV2ZW50T2JqZWN0KCk7CiAgICAgICAgZXZ0T2JqLmtleUNvZGUgPSBrZXlDb2RlOwogICAgICAgIGVsLmZpcmVFdmVudCgnb24nICsgZXZ0VHlwZSwgZXZ0T2JqKTsKICAgIH0KfQoKLy8gZmFpbApmdW5jdGlvbiBmaXJlS2V5RXZlbnQxKGVsLCBldnRUeXBlLCBrZXlDb2RlKSB7CiAgICAgICAgICAgIHZhciBldnRPYmo7CiAgICAgICAgICAgIGlmIChkb2N1bWVudC5jcmVhdGVFdmVudCkgewogICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5LZXlFdmVudCkgey8vZmlyZWZveCDmtY/op4jlmajkuIvmqKHmi5/kuovku7YKICAgICAgICAgICAgICAgICAgICBldnRPYmogPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnS2V5RXZlbnRzJyk7CiAgICAgICAgICAgICAgICAgICAgZXZ0T2JqLmluaXRLZXlFdmVudChldnRUeXBlLCB0cnVlLCB0cnVlLCB3aW5kb3csIHRydWUsIGZhbHNlLCBmYWxzZSwgZmFsc2UsIGtleUNvZGUsIDApOwogICAgICAgICAgICAgICAgfSBlbHNlIHsvL2Nocm9tZSDmtY/op4jlmajkuIvmqKHmi5/kuovku7YKICAgICAgICAgICAgICAgICAgICBldnRPYmogPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnVUlFdmVudHMnKTsKICAgICAgICAgICAgICAgICAgICBldnRPYmouaW5pdFVJRXZlbnQoZXZ0VHlwZSwgdHJ1ZSwgdHJ1ZSwgd2luZG93LCAxKTsKCiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIGV2dE9iai5rZXlDb2RlOwogICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZXZ0T2JqLmtleUNvZGUgPT09ICJ1bmRlZmluZWQiKSB7Ly/kuLrkuobmqKHmi59rZXljb2RlCiAgICAgICAgICAgICAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShldnRPYmosICJrZXlDb2RlIiwgeyB2YWx1ZToga2V5Q29kZSB9KTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBldnRPYmoua2V5ID0gU3RyaW5nLmZyb21DaGFyQ29kZShrZXlDb2RlKTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZXZ0T2JqLmN0cmxLZXkgPT09ICd1bmRlZmluZWQnKSB7Ly/kuLrkuobmqKHmi59jdHJs6ZSuCiAgICAgICAgICAgICAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShldnRPYmosICJjdHJsS2V5IiwgeyB2YWx1ZTogdHJ1ZSB9KTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBldnRPYmouY3RybEtleSA9IHRydWU7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWwuZGlzcGF0Y2hFdmVudChldnRPYmopOwoKICAgICAgICAgICAgfSBlbHNlIGlmIChkb2N1bWVudC5jcmVhdGVFdmVudE9iamVjdCkgey8vSUUg5rWP6KeI5Zmo5LiL5qih5ouf5LqL5Lu2CiAgICAgICAgICAgICAgICBldnRPYmogPSBkb2N1bWVudC5jcmVhdGVFdmVudE9iamVjdCgpOwogICAgICAgICAgICAgICAgZXZ0T2JqLmtleUNvZGUgPSBrZXlDb2RlCiAgICAgICAgICAgICAgICBlbC5maXJlRXZlbnQoJ29uJyArIGV2dFR5cGUsIGV2dE9iaik7CiAgICAgICAgICAgIH0KICAgICAgICB9Cgo="},{"name":"问卷星 自动随机填写","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["https://www\\.wjx\\.cn/[(jq)|(m)|(hj)]/\\d+\\.aspx"],"orig_matches":["https://www.wjx.cn/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1548052866437,"data":{}},"enabled":true,"position":17,"file_url":"https://greasyfork.org/scripts/369392-%E9%97%AE%E5%8D%B7%E6%98%9F-%E8%87%AA%E5%8A%A8%E9%9A%8F%E6%9C%BA%E5%A1%AB%E5%86%99/code/%E9%97%AE%E5%8D%B7%E6%98%9F%20%E8%87%AA%E5%8A%A8%E9%9A%8F%E6%9C%BA%E5%A1%AB%E5%86%99.user.js","uuid":"0bc871a5-a9a4-43c8-b14d-d0c95dcf1c89","source":"","requires":[{"meta":{"name":"jquery-2.2.4.min.js","url":"https://code.jquery.com/jquery-2.2.4.min.js","ts":1548052866447,"mimetype":"text/javascript"},"source":""}]},{"name":"虾米音乐助手","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["http://www.xiami.com/download/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1549700606588,"data":{}},"enabled":false,"position":18,"file_url":"https://greasyfork.org/scripts/987-%E8%99%BE%E7%B1%B3%E9%9F%B3%E4%B9%90%E5%8A%A9%E6%89%8B/code/%E8%99%BE%E7%B1%B3%E9%9F%B3%E4%B9%90%E5%8A%A9%E6%89%8B.user.js","uuid":"9f8653de-e6e7-47ee-89df-d1547603374a","source":""},{"name":"虾米高清歌曲下载兼容版","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["http://www.xiami.com/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1549700633809,"data":{}},"enabled":false,"position":19,"file_url":"https://greasyfork.org/scripts/28463-%E8%99%BE%E7%B1%B3%E9%AB%98%E6%B8%85%E6%AD%8C%E6%9B%B2%E4%B8%8B%E8%BD%BD%E5%85%BC%E5%AE%B9%E7%89%88/code/%E8%99%BE%E7%B1%B3%E9%AB%98%E6%B8%85%E6%AD%8C%E6%9B%B2%E4%B8%8B%E8%BD%BD%E5%85%BC%E5%AE%B9%E7%89%88.user.js","uuid":"f4365c6d-7a1f-4bc4-a49e-48370606cae4","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDomb7nsbPpq5jmuIXmrYzmm7LkuIvovb3lhbzlrrnniYgKLy8gQG5hbWVzcGFjZSAgICBodHRwczovL2dyZWFzeWZvcmsub3JnL3poLUNOL3NjcmlwdHMvMjg0NjMKLy8gQHZlcnNpb24gICAgICAwLjQKLy8gQGRlc2NyaXB0aW9uICDlpoLmnpzigJzomb7nsbPpq5jmuIXmrYzmm7LkuIvovb3igJ3ml6Dms5Xkvb/nlKjvvIzlsLHnlKjov5nkuKrlkKfvvIzml6DpnIDnmbvlvZXvvIzku47mkq3mlL7nmoTnlLXlj7DmiJbmkq3mlL7liJfooajnrYnmnInkuIvovb3nmoTlnLDmlrnvvIzlj6/kuIvovb3pq5jmuIXmrYzmm7Is55u05o6l54K55Ye75Y6f5p2l55qE5LiL6L295oyJ6ZKu5Y2z5Y+vCi8vIEBhdXRob3IgICAgICAgb3BlbnRkb29yCi8vIEBtYXRjaCAgICAgICAgaHR0cDovL3d3dy54aWFtaS5jb20vKgovLyBAcnVuLWF0IGRvY3VtZW50LWVuZAovLyBAZ3JhbnQgbm9uZQovLyA9PS9Vc2VyU2NyaXB0PT0KKGZ1bmN0aW9uICgpIHsKICAndXNlIHN0cmljdCc7CiAgdmFyIGluaXQgPSBmdW5jdGlvbiAoKSB7CiAgICB2YXIgR01feG1saHR0cFJlcXVlc3QgPSBmdW5jdGlvbiAob3B0aW9ucykgewogICAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7CiAgICAgIHhoci5vcGVuKG9wdGlvbnMubWV0aG9kLCBvcHRpb25zLnVybCk7CiAgICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nLCAnKicpOwogICAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcignUmVmZXJlcicsICdodHRwOi8vd3d3LnhpYW1pLmNvbScpOwogICAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcignT3JpZ2luJywgJ2h0dHA6Ly93d3cueGlhbWkuY29tJyk7CiAgICAgIHhoci5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgb3B0aW9ucy5vbmxvYWQoeGhyKTsKICAgICAgfTsKICAgICAgeGhyLnNlbmQoKTsKICAgIH07CiAgICBmdW5jdGlvbiBHZXRMb2NhdGlvbihzdHIpIHsKICAgICAgdmFyIGxvYzIgPSBOdW1iZXIoc3RyWzBdKTsKICAgICAgdmFyIGxvYzQgPSBNYXRoLmZsb29yKChzdHIubGVuZ3RoIC0gMSkgLyBsb2MyKTsKICAgICAgdmFyIGxvYzUgPSAoc3RyLmxlbmd0aCAtIDEpICUgbG9jMjsKICAgICAgdmFyIGluZGV4ID0gLSAxOwogICAgICB2YXIgcmVzdWx0ID0gJyc7CiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbG9jNCArIDE7IGkrKykgewogICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgbG9jMjsgaisrKSB7CiAgICAgICAgICBpbmRleCA9IGogPCBsb2M1ID8gKGxvYzQgKyAxKSAqIGogKyBpICsgMSA6IGxvYzQgKiAoaiAtIGxvYzUpICsgKGxvYzQgKyAxKSAqIGxvYzUgKyBpICsgMTsKICAgICAgICAgIGlmIChqID49IGxvYzUgJiYgaSA9PSBsb2M0KSBicmVhazsKICAgICAgICAgIHJlc3VsdCArPSBzdHJbaW5kZXhdOwogICAgICAgIH0KICAgICAgfQogICAgICByZXN1bHQgPSB1bmVzY2FwZShyZXN1bHQpLnJlcGxhY2UoL1xeL2dpLCAnMCcpLnJlcGxhY2UoL1wrL2dpLCAnICcpOwogICAgICByZXR1cm4gcmVzdWx0OwogICAgfQogICAgdmFyIEZtZG93bmxvYWQgPSBmdW5jdGlvbiAob2JqKSB7CiAgICAgIHZhciByZXEgPSBHTV94bWxodHRwUmVxdWVzdCh7CiAgICAgICAgbWV0aG9kOiAnR0VUJywKICAgICAgICB1cmw6ICdodHRwOi8vd3d3LnhpYW1pLmNvbS9zb25nL2dldGhxc29uZy9zaWQvJyArIG9iai5zb25nSWQsCiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ1JlZmVyZXInOiAnaHR0cDovL3d3dy54aWFtaS5jb20nCiAgICAgICAgfSwKICAgICAgICBvbmxvYWQ6IGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIHZhciBuID0gSlNPTi5wYXJzZShyZXMucmVzcG9uc2VUZXh0KTsKICAgICAgICAgIGlmIChuLnN0YXR1cyA9PSAxKSB7CiAgICAgICAgICAgIHZhciB1cmwgPSBHZXRMb2NhdGlvbihuLmxvY2F0aW9uKTsKICAgICAgICAgICAgdmFyIGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7CiAgICAgICAgICAgIGEuaHJlZiA9IHVybDsKICAgICAgICAgICAgYS5kb3dubG9hZCA9IG9iai5zb25nTmFtZS5yZXBsYWNlKC9bXDxcPlxcXC9cfFw6XCJcKlw/XHJcbl0vZ2ksICcnKSArICcubXAzJzsKICAgICAgICAgICAgdmFyIGV2ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ01vdXNlRXZlbnRzJyk7CiAgICAgICAgICAgIGV2LmluaXRFdmVudCgnY2xpY2snLCB0cnVlLCB0cnVlKTsKICAgICAgICAgICAgYS5kaXNwYXRjaEV2ZW50KGV2KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGFsZXJ0KCfml6Dms5XkuIvovb3vvIEnKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgfTsKICAgIGlmICh0eXBlb2Ygd2luZG93LkZtX2Rvd25sb2FkID09ICdmdW5jdGlvbicpIHdpbmRvdy5GbV9kb3dubG9hZCA9IEZtZG93bmxvYWQ7CiAgICBpZiAodHlwZW9mIHdpbmRvdy5wcmVwYXJlWmlweCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHZhciBvbGRweiA9IHdpbmRvdy5wcmVwYXJlWmlweDsKICAgICAgd2luZG93LnByZXBhcmVaaXB4ID0gZnVuY3Rpb24gKHR5cGUsIGlkKSB7CiAgICAgICAgaWYgKHR5cGUgPT0gJ3NvbmcnKSB7CiAgICAgICAgICB2YXIgdGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdkaXZbZGF0YS1pZD1cJycgKyBpZCArICdcJ10gYScpOwogICAgICAgICAgdGl0bGUgPSB0aXRsZSA/IHRpdGxlLmlubmVySFRNTCA6IGlkOwogICAgICAgICAgRm1kb3dubG9hZCh7CiAgICAgICAgICAgIHNvbmdJZDogaWQsCiAgICAgICAgICAgIHNvbmdOYW1lOiB0aXRsZQogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGlmIChvbGRweikgb2xkcHouY2FsbCh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgIH0KICAgICAgfTsKICAgIH0KICAgIGlmICh0eXBlb2Ygd2luZG93LmJ1eU11c2ljID09ICdmdW5jdGlvbicpIHsKICAgICAgdmFyIG9sZGJtID0gd2luZG93LmJ1eU11c2ljOwogICAgICB3aW5kb3cuYnV5TXVzaWMgPSBmdW5jdGlvbiAodHlwZSwgaWQpIHsKICAgICAgICBpZiAodHlwZSA9PSAnc29uZycpIHsKICAgICAgICAgIHZhciB0aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2RpdltkYXRhLWlkPVwnJyArIGlkICsgJ1wnXSBhJyk7CiAgICAgICAgICB0aXRsZSA9IHRpdGxlID8gdGl0bGUuaW5uZXJIVE1MIDogaWQ7CiAgICAgICAgICBGbWRvd25sb2FkKHsKICAgICAgICAgICAgc29uZ0lkOiBpZCwKICAgICAgICAgICAgc29uZ05hbWU6IHRpdGxlCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgaWYgKG9sZGJtKSBvbGRibS5jYWxsKHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgfQogICAgICB9OwogICAgfQogICAgaWYgKHR5cGVvZiB3aW5kb3cueG1fZG93bmxvYWQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB2YXIgb2xkeG1kID0gd2luZG93LnhtX2Rvd25sb2FkOwogICAgICB3aW5kb3cueG1fZG93bmxvYWQgPSBmdW5jdGlvbiAoaWQsIHR5cGUsIF90aGlzKSB7CiAgICAgICAgaWYgKHR5cGUgPT0gJ3NvbmcnKSB7CiAgICAgICAgICB2YXIgdGl0bGUgPSAkKF90aGlzKS5jbG9zZXN0KCd0cicpLmZpbmQoJy5zb25nX25hbWUgYTplcSgwKScpOwogICAgICAgICAgdGl0bGUgPSB0aXRsZS5sZW5ndGggPyB0aXRsZS50ZXh0KCkgIDogKCQoJyN0aXRsZSBoMScpLnRleHQoKSB8fCBfdGhpcy50aXRsZSB8fCBpZCk7CiAgICAgICAgICBGbWRvd25sb2FkKHsKICAgICAgICAgICAgc29uZ0lkOiBpZCwKICAgICAgICAgICAgc29uZ05hbWU6IHRpdGxlCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgaWYgKG9sZHhtZCkgb2xkeG1kLmNhbGwodGhpcywgYXJndW1lbnRzKTsKICAgICAgICB9CiAgICAgIH07CiAgICB9CiAgICBpZiAodHlwZW9mIHdpbmRvdy5wcm9tb3Rpb25fZG93bmxvYWQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB3aW5kb3cucHJvbW90aW9uX2Rvd25sb2FkID0gZnVuY3Rpb24gKGlkLCB4LCBhciwgX3RoaXMpIHsKICAgICAgICB2YXIgdGl0bGUgPSAkKF90aGlzKS5jbG9zZXN0KCdsaScpLmZpbmQoJy5zb25nX25hbWUgYTplcSgwKScpOwogICAgICAgIHRpdGxlID0gdGl0bGUubGVuZ3RoID8gdGl0bGUudGV4dCgpLnJlcGxhY2UoLyheXHN8XHMkKS9naSwgJycpICA6IGlkOwogICAgICAgIEZtZG93bmxvYWQoewogICAgICAgICAgc29uZ0lkOiBpZCwKICAgICAgICAgIHNvbmdOYW1lOiB0aXRsZQogICAgICAgIH0pOwogICAgICB9OwogICAgfQogICAgIGlmICh0eXBlb2Ygd2luZG93LmRvd25sb2FkVG9QQyA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHdpbmRvd+OAgmRvd25sb2FkVG9QQyA9IGZ1bmN0aW9uIChpZCkgewogICAgICAgIHZhciB0aXRsZSA9ICQoJ1tkYXRhLWlkPSInICsgaWQgKyAnIl0+YScpLmh0bWwoKTsKICAgICAgICBGbWRvd25sb2FkKHsKICAgICAgICAgIHNvbmdJZDogaWQsCiAgICAgICAgICBzb25nTmFtZTogdGl0bGUKICAgICAgICB9KTsKICAgICAgfTsKICAgIH0KICB9OwogIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgaW5pdCk7Cn0pICgpOwo="},{"name":"全网音乐一键免费下载 一键搜索 在线试听 【高清品质请选择QQ下载源】2019.1.10更新","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://music.163.com/*","*://y.qq.com/*","*://www.kugou.com/*","*://www.kuwo.cn/*","*://www.xiami.com/*","*://music.baidu.com/*","*://www.qingting.fm/*","*://www.lizhi.fm/*","*://music.migu.cn/*","*://www.ximalaya.com/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1549700651019,"data":{}},"enabled":false,"position":20,"file_url":"https://greasyfork.org/scripts/37058-%E5%85%A8%E7%BD%91%E9%9F%B3%E4%B9%90%E4%B8%80%E9%94%AE%E5%85%8D%E8%B4%B9%E4%B8%8B%E8%BD%BD-%E4%B8%80%E9%94%AE%E6%90%9C%E7%B4%A2-%E5%9C%A8%E7%BA%BF%E8%AF%95%E5%90%AC-%E9%AB%98%E6%B8%85%E5%93%81%E8%B4%A8%E8%AF%B7%E9%80%89%E6%8B%A9qq%E4%B8%8B%E8%BD%BD%E6%BA%90-2019-1-10%E6%9B%B4%E6%96%B0/code/%E5%85%A8%E7%BD%91%E9%9F%B3%E4%B9%90%E4%B8%80%E9%94%AE%E5%85%8D%E8%B4%B9%E4%B8%8B%E8%BD%BD%20%E4%B8%80%E9%94%AE%E6%90%9C%E7%B4%A2%20%E5%9C%A8%E7%BA%BF%E8%AF%95%E5%90%AC%20%E3%80%90%E9%AB%98%E6%B8%85%E5%93%81%E8%B4%A8%E8%AF%B7%E9%80%89%E6%8B%A9QQ%E4%B8%8B%E8%BD%BD%E6%BA%90%E3%80%912019110%E6%9B%B4%E6%96%B0.user.js","uuid":"87b66714-5973-4c6d-8a67-9a86765e446e","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDlhajnvZHpn7PkuZDkuIDplK7lhY3otLnkuIvovb0g5LiA6ZSu5pCc57SiIOWcqOe6v+ivleWQrCDjgJDpq5jmuIXlk4HotKjor7fpgInmi6lRUeS4i+i9vea6kOOAkTIwMTkuMS4xMOabtOaWsAovLyBAdmVyc2lvbiAgICAgIDEuNi4zNCAKLy8gQGhvbWVwYWdlICAgICBodHRwczovL2dyZWFzeWZvcmsub3JnL3poLUNOL3NjcmlwdHMvMzcwNTgKLy8gQG1hdGNoICAgICAgICAqOi8vbXVzaWMuMTYzLmNvbS8qCi8vIEBtYXRjaCAgICAgICAgKjovL3kucXEuY29tLyoKLy8gQG1hdGNoICAgICAgICAqOi8vd3d3Lmt1Z291LmNvbS8qCi8vIEBtYXRjaCAgICAgICAgKjovL3d3dy5rdXdvLmNuLyoKLy8gQG1hdGNoICAgICAgICAqOi8vd3d3LnhpYW1pLmNvbS8qCi8vIEBtYXRjaCAgICAgICAgKjovL211c2ljLmJhaWR1LmNvbS8qCi8vIEBtYXRjaCAgICAgICAgKjovL3d3dy5xaW5ndGluZy5mbS8qCi8vIEBtYXRjaCAgICAgICAgKjovL3d3dy5saXpoaS5mbS8qCi8vIEBtYXRjaCAgICAgICAgKjovL211c2ljLm1pZ3UuY24vKgovLyBAbWF0Y2ggICAgICAgICo6Ly93d3cueGltYWxheWEuY29tLyoKLy8gQGRlc2NyaXB0aW9uICDlhajnvZHpn7PkuZDlnKjnur/or5XlkKwg5LiA6ZSu5YWN6LS55LiL6L29IOS4gOmUruaQnOe0oiDmj5DkvpvlpJrnq5nlkIjkuIAg6Z+z5LmQ6K+V5ZCsIOmfs+S5kOS4i+i9vSDpn7PkuZDmkJzntKLop6PlhrPmlrnmoYjvvIznvZHmmJPkupHpn7PkuZDvvIxRUemfs+S5kO+8jOmFt+eLl+mfs+S5kO+8jOmFt+aIkemfs+S5kO+8jOiZvuexs+mfs+S5kO+8jOeZvuW6pumfs+S5kO+8jOicu+ick0ZN77yM6I2U5p6dRk3vvIzllpzpqazmi4npm4UKLy8gQGdyYW50ICAgICAgICB1bnNhZmVXaW5kb3cKLy8gQHJlcXVpcmUgICAgICBodHRwOi8vY2RuLmJvb3Rjc3MuY29tL2pxdWVyeS8xLjguMy9qcXVlcnkubWluLmpzCi8vIEBpY29uICAgICAgICAgaHR0cDovL211c2ljLnNvbmltZWkuY24vZmF2aWNvbi5pY28KLy8gQHJ1bi1hdCAgICAgICBkb2N1bWVudC1lbmQKLy8gQG5hbWVzcGFjZSAKLy8gPT0vVXNlclNjcmlwdD09CihmdW5jdGlvbigpIHsKCSd1c2Ugc3RyaWN0JzsKCXZhciBjdXJQbGF5U2l0ZSA9ICcnOwoJdmFyIGN1cldvcmRzID0gJyc7Cgl2YXIgdmlkZW9TaXRlID0gd2luZG93LmxvY2F0aW9uLmhyZWY7Cgl2YXIgcmVXWSA9IC8xNjMoLiopc29uZy9pOwoJdmFyIHJlUVEgPSAvUVEoLiopc29uZy9pOwoJdmFyIHJlS0cgPSAva3Vnb3UoLiopc29uZy9pOwoJdmFyIHJlS1cgPSAva3V3byguKil5aW55dWUvaTsKCXZhciByZVhNID0gL3hpYW1pL2k7Cgl2YXIgcmVCRCA9IC9iYWlkdS9pOwoJdmFyIHJlUVQgPSAvcWluZ3RpbmcvaTsKCXZhciByZUxaID0gL2xpemhpL2k7Cgl2YXIgcmVNRyA9IC9taWd1L2k7Cgl2YXIgcmVYTUxZID0gL3hpbWFsYXlhL2k7Cgl2YXIgdmlwQnRuID0gJzxhIHRhcmdldD0iX2JsYW5rIiBpZD0iVmlwTXVzaWNCdG4iIHN0eWxlPSJtYXJnaW46MTBweCAwO2Rpc3BsYXk6aW5saW5lLWJsb2NrO3BhZGRpbmc6MCA1cHg7aGVpZ2h0OjIycHg7Ym9yZGVyOjFweCBzb2xpZCByZWQ7Y29sb3I6cmVkO3ZlcnRpY2FsLWFsaWduOmJvdHRvbTt0ZXh0LWRlY29yYXRpb246bm9uZTtmb250LXNpemU6MTdweDtsaW5lLWhlaWdodDoyMnB4O2N1cnNvcjpwb2ludGVyOyI+5LiA6ZSu5YWN6LS55LiL6L29PC9hPic7CgogIC8v572R5piT5LqR6Z+z5LmQCiAgaWYocmVXWS50ZXN0KHZpZGVvU2l0ZSkpewogICAgdmFyIFRpdGxlID0gJCgnLnUtaWNuLTM3Jyk7CiAgICBUaXRsZS5wYXJlbnQoJy5oZCcpLmFmdGVyKHZpcEJ0bik7CiAgICAkKCcjVmlwTXVzaWNCdG4nKS5hdHRyKCdocmVmJywnaHR0cDovL211c2ljLnNvbmltZWkuY24vP3VybD0nICsgZW5jb2RlVVJJQ29tcG9uZW50KHdpbmRvdy5sb2NhdGlvbi5ocmVmLnJlcGxhY2UoJ2h0dHA6Ly9tdXNpYy4xNjMuY29tJywgImh0dHA6Ly9tdXNpYy4xNjMuY29tLyMiKSkpOwogIH0KICAKICAvL1FR6Z+z5LmQCiAgaWYocmVRUS50ZXN0KHZpZGVvU2l0ZSkpewogICAgdmFyIFRpdGxlID0gJCgnLmRhdGFfX25hbWVfdHh0Jyk7CiAgICBUaXRsZS5wYXJlbnQoJy5kYXRhX19uYW1lJykuYWZ0ZXIodmlwQnRuKTsKICAgICQoJyNWaXBNdXNpY0J0bicpLmF0dHIoJ2hyZWYnLCdodHRwOi8vbXVzaWMuc29uaW1laS5jbi8/dXJsPScgKyBlbmNvZGVVUklDb21wb25lbnQod2luZG93LmxvY2F0aW9uLmhyZWYpKTsKICB9CiAgCiAgLy/phbfni5fpn7PkuZAKICBpZihyZUtHLnRlc3QodmlkZW9TaXRlKSl7CglLR2FkZCgpOwoJc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXtLR2FkZCgpfSwxMDAwKTsKCWZ1bmN0aW9uIEtHYWRkKCl7CgkJaWYoJCgiI1ZpcE11c2ljQnRuIikubGVuZ3RoPT0wICYmICQoIi5hdWRpb05hbWUiKS5sZW5ndGg+MCl7CgkJCXZhciBUaXRsZSA9ICQoJy5hdWRpb05hbWUnKTsKCQkJVGl0bGUucGFyZW50KCcuc29uZ05hbWUnKS5hZnRlcih2aXBCdG4pOwoJCX0KCQkkKCIjVmlwTXVzaWNCdG4iKS5hdHRyKCJocmVmIiwiaHR0cDovL211c2ljLnNvbmltZWkuY24vP3VybD0iICsgZW5jb2RlVVJJQ29tcG9uZW50KHdpbmRvdy5sb2NhdGlvbi5ocmVmKSk7Cgl9CiAgfQoKICAvL+mFt+aIkemfs+S5kAogIGlmKHJlS1cudGVzdCh2aWRlb1NpdGUpKXsKICAgIHZhciBUaXRsZSA9ICQoJyNzaW5sZXNEb3duQnRuJyk7CiAgICBUaXRsZS5wYXJlbnQoJy5kb3duJykuYWZ0ZXIodmlwQnRuKTsKICAgICQoJyNWaXBNdXNpY0J0bicpLmF0dHIoJ2hyZWYnLCdodHRwOi8vbXVzaWMuc29uaW1laS5jbi8/dXJsPScgKyBlbmNvZGVVUklDb21wb25lbnQod2luZG93LmxvY2F0aW9uLmhyZWYpKTsKICB9CgogIC8v6Jm+57Gz6Z+z5LmQCiAgaWYocmVYTS50ZXN0KHZpZGVvU2l0ZSkpewogICAgdmFyIFRpdGxlID0gJCgnLnBsYXllcicpOwogICAgVGl0bGUucGFyZW50KCcuc29uZ19pbmZvJykuYWZ0ZXIodmlwQnRuKTsKICAgICQoJyNWaXBNdXNpY0J0bicpLmF0dHIoJ2hyZWYnLCdodHRwOi8vbXVzaWMuc29uaW1laS5jbi8/dXJsPScgKyBlbmNvZGVVUklDb21wb25lbnQod2luZG93LmxvY2F0aW9uLmhyZWYpKTsKICB9CiAgCiAgLy/nmb7luqbpn7PkuZAKICBpZihyZUJELnRlc3QodmlkZW9TaXRlKSl7CiAgICB2YXIgVGl0bGUgPSAkKCcuc29uZ3BhZ2UtdGl0bGUnKTsKICAgIFRpdGxlLnBhcmVudCgnLnNvbmcnKS5hZnRlcih2aXBCdG4pOwogICAgJCgnI1ZpcE11c2ljQnRuJykuYXR0cignaHJlZicsJ2h0dHA6Ly9tdXNpYy5zb25pbWVpLmNuLz91cmw9JyArIGVuY29kZVVSSUNvbXBvbmVudCh3aW5kb3cubG9jYXRpb24uaHJlZikpOwogIH0KICAKICAvL+icu+ick0ZNCiAgaWYocmVRVC50ZXN0KHZpZGVvU2l0ZSkpewoJUVRhZGQoKTsKCXNldEludGVydmFsKGZ1bmN0aW9uKCl7UVRhZGQoKX0sMTAwMCk7CglmdW5jdGlvbiBRVGFkZCgpewoJCWlmKCQoIiNWaXBNdXNpY0J0biIpLmxlbmd0aD09MCAmJiAkKCIuc3ByaXRlLXByb2dyYW0iKS5sZW5ndGg+MCAmJiAvcWluZ3RpbmcoLiopcHJvZ3JhbXMvaS50ZXN0KHdpbmRvdy5sb2NhdGlvbi5ocmVmKSl7CgkJCSQoIi5zcHJpdGUtcHJvZ3JhbSIpLnBhcmVudCgpLmFmdGVyKHZpcEJ0bik7CgkJfQoJCSQoIiNWaXBNdXNpY0J0biIpLmF0dHIoImhyZWYiLCJodHRwOi8vbXVzaWMuc29uaW1laS5jbi8/dXJsPSIgKyBlbmNvZGVVUklDb21wb25lbnQod2luZG93LmxvY2F0aW9uLmhyZWYpKTsKCX0KICB9CgogIC8v6I2U5p6dRk0KICBpZihyZUxaLnRlc3QodmlkZW9TaXRlKSl7CiAgICB2YXIgVGl0bGUgPSAkKCcuYXVkaW9OYW1lJyk7CiAgICBUaXRsZS5wYXJlbnQoJy5hdWRpb0luZm8nKS5hZnRlcih2aXBCdG4pOwogICAgJCgnI1ZpcE11c2ljQnRuJykuYXR0cignaHJlZicsJ2h0dHA6Ly9tdXNpYy5zb25pbWVpLmNuLz91cmw9JyArIGVuY29kZVVSSUNvbXBvbmVudCh3aW5kb3cubG9jYXRpb24uaHJlZikpOwogIH0KICAKICAvL+WWnOmprOaLiembhQogIGlmKHJlWE1MWS50ZXN0KHZpZGVvU2l0ZSkpewoJWE1hZGQoKTsKCXNldEludGVydmFsKGZ1bmN0aW9uKCl7WE1hZGQoKX0sMTAwMCk7CglmdW5jdGlvbiBYTWFkZCgpewoJCWlmKCQoIiNWaXBNdXNpY0J0biIpLmxlbmd0aD09MCAmJiAkKCIuZGV0YWlsQ29udGVudF90aXRsZSIpLmxlbmd0aD4wICYmIC94aW1hbGF5YSguKilzb3VuZC9pLnRlc3Qod2luZG93LmxvY2F0aW9uLmhyZWYpKXsKCQkJdmFyIFRpdGxlID0gJCgnLmRldGFpbENvbnRlbnRfdGl0bGUnKTsKCQkJVGl0bGUucGFyZW50KCcucmlnaHQnKS5hZnRlcih2aXBCdG4pOwoJCX0KCQkkKCIjVmlwTXVzaWNCdG4iKS5hdHRyKCJocmVmIiwiaHR0cDovL211c2ljLnNvbmltZWkuY24vP3VybD0iICsgZW5jb2RlVVJJQ29tcG9uZW50KHdpbmRvdy5sb2NhdGlvbi5ocmVmKSk7Cgl9CiAgfSAKICAKfSkoKTs=","requires":[{"meta":{"name":"jquery.min.js","url":"http://cdn.bootcss.com/jquery/1.8.3/jquery.min.js","ts":1549700674479,"mimetype":"text/javascript"},"source":""}]},{"name":"谷歌助手破解程序（测试版）","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["**","chrome-extension://gocklaboggjfkolaknpbhddbaopcepfp/**"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1549850110320,"data":{}},"enabled":false,"position":21,"uuid":"1d36c0b8-183f-449d-97ad-af4cc1fa68e4","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDosLfmrYzliqnmiYvnoLTop6PnqIvluo/vvIjmtYvor5XniYjvvIkKLy8gQG5hbWVzcGFjZSAgICBodHRwOi8vdGFtcGVybW9ua2V5Lm5ldC8KLy8gQHZlcnNpb24gICAgICAwLjEKLy8gQGRlc2NyaXB0aW9uICB0cnkgdG8gdGFrZSBvdmVyIHRoZSB3b3JsZCEKLy8gQGF1dGhvciAgICAgICBZb3UKLy8gQG1hdGNoICAgICAgICAqKgovLyBAbWF0Y2ggICAgICAgIGNocm9tZS1leHRlbnNpb246Ly9nb2NrbGFib2dnamZrb2xha25wYmhkZGJhb3BjZXBmcC8qKgovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gPT0vVXNlclNjcmlwdD09CgooZnVuY3Rpb24oKSB7CiAgICAndXNlIHN0cmljdCc7CgogICAgLy8gWW91ciBjb2RlIGhlcmUuLi4KCn0pKCk7"},{"name":"网易云音乐直接下载","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["126.net","163.com","172.*"],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://music.163.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1549937732606,"data":{}},"enabled":true,"position":22,"file_url":"https://greasyfork.org/scripts/33046-%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD/code/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD.user.js","uuid":"b77541f4-4614-4832-9a8f-d8bd32e2f70d","source":"","requires":[{"meta":{"name":"core.min.js","url":"https://cdn.bootcss.com/crypto-js/3.1.9/core.min.js","ts":1549937732772,"mimetype":"text/javascript"},"source":"IWZ1bmN0aW9uKHQsbil7Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzP21vZHVsZS5leHBvcnRzPWV4cG9ydHM9bigpOiJmdW5jdGlvbiI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtdLG4pOnQuQ3J5cHRvSlM9bigpfSh0aGlzLGZ1bmN0aW9uKCl7dmFyIHQ9dHx8ZnVuY3Rpb24odCxuKXt2YXIgaT1PYmplY3QuY3JlYXRlfHxmdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt9cmV0dXJuIGZ1bmN0aW9uKG4pe3ZhciBpO3JldHVybiB0LnByb3RvdHlwZT1uLGk9bmV3IHQsdC5wcm90b3R5cGU9bnVsbCxpfX0oKSxlPXt9LHI9ZS5saWI9e30sbz1yLkJhc2U9ZnVuY3Rpb24oKXtyZXR1cm57ZXh0ZW5kOmZ1bmN0aW9uKHQpe3ZhciBuPWkodGhpcyk7cmV0dXJuIHQmJm4ubWl4SW4odCksbi5oYXNPd25Qcm9wZXJ0eSgiaW5pdCIpJiZ0aGlzLmluaXQhPT1uLmluaXR8fChuLmluaXQ9ZnVuY3Rpb24oKXtuLiRzdXBlci5pbml0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX0pLG4uaW5pdC5wcm90b3R5cGU9bixuLiRzdXBlcj10aGlzLG59LGNyZWF0ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZXh0ZW5kKCk7cmV0dXJuIHQuaW5pdC5hcHBseSh0LGFyZ3VtZW50cyksdH0saW5pdDpmdW5jdGlvbigpe30sbWl4SW46ZnVuY3Rpb24odCl7Zm9yKHZhciBuIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShuKSYmKHRoaXNbbl09dFtuXSk7dC5oYXNPd25Qcm9wZXJ0eSgidG9TdHJpbmciKSYmKHRoaXMudG9TdHJpbmc9dC50b1N0cmluZyl9LGNsb25lOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaW5pdC5wcm90b3R5cGUuZXh0ZW5kKHRoaXMpfX19KCkscz1yLldvcmRBcnJheT1vLmV4dGVuZCh7aW5pdDpmdW5jdGlvbih0LGkpe3Q9dGhpcy53b3Jkcz10fHxbXSxpIT1uP3RoaXMuc2lnQnl0ZXM9aTp0aGlzLnNpZ0J5dGVzPTQqdC5sZW5ndGh9LHRvU3RyaW5nOmZ1bmN0aW9uKHQpe3JldHVybih0fHxjKS5zdHJpbmdpZnkodGhpcyl9LGNvbmNhdDpmdW5jdGlvbih0KXt2YXIgbj10aGlzLndvcmRzLGk9dC53b3JkcyxlPXRoaXMuc2lnQnl0ZXMscj10LnNpZ0J5dGVzO2lmKHRoaXMuY2xhbXAoKSxlJTQpZm9yKHZhciBvPTA7bzxyO28rKyl7dmFyIHM9aVtvPj4+Ml0+Pj4yNC1vJTQqOCYyNTU7bltlK28+Pj4yXXw9czw8MjQtKGUrbyklNCo4fWVsc2UgZm9yKHZhciBvPTA7bzxyO28rPTQpbltlK28+Pj4yXT1pW28+Pj4yXTtyZXR1cm4gdGhpcy5zaWdCeXRlcys9cix0aGlzfSxjbGFtcDpmdW5jdGlvbigpe3ZhciBuPXRoaXMud29yZHMsaT10aGlzLnNpZ0J5dGVzO25baT4+PjJdJj00Mjk0OTY3Mjk1PDwzMi1pJTQqOCxuLmxlbmd0aD10LmNlaWwoaS80KX0sY2xvbmU6ZnVuY3Rpb24oKXt2YXIgdD1vLmNsb25lLmNhbGwodGhpcyk7cmV0dXJuIHQud29yZHM9dGhpcy53b3Jkcy5zbGljZSgwKSx0fSxyYW5kb206ZnVuY3Rpb24obil7Zm9yKHZhciBpLGU9W10scj1mdW5jdGlvbihuKXt2YXIgbj1uLGk9OTg3NjU0MzIxLGU9NDI5NDk2NzI5NTtyZXR1cm4gZnVuY3Rpb24oKXtpPTM2OTY5Kig2NTUzNSZpKSsoaT4+MTYpJmUsbj0xOGUzKig2NTUzNSZuKSsobj4+MTYpJmU7dmFyIHI9KGk8PDE2KStuJmU7cmV0dXJuIHIvPTQyOTQ5NjcyOTYscis9LjUscioodC5yYW5kb20oKT4uNT8xOi0xKX19LG89MDtvPG47bys9NCl7dmFyIGE9cig0Mjk0OTY3Mjk2KihpfHx0LnJhbmRvbSgpKSk7aT05ODc2NTQwNzEqYSgpLGUucHVzaCg0Mjk0OTY3Mjk2KmEoKXwwKX1yZXR1cm4gbmV3IHMuaW5pdChlLG4pfX0pLGE9ZS5lbmM9e30sYz1hLkhleD17c3RyaW5naWZ5OmZ1bmN0aW9uKHQpe2Zvcih2YXIgbj10LndvcmRzLGk9dC5zaWdCeXRlcyxlPVtdLHI9MDtyPGk7cisrKXt2YXIgbz1uW3I+Pj4yXT4+PjI0LXIlNCo4JjI1NTtlLnB1c2goKG8+Pj40KS50b1N0cmluZygxNikpLGUucHVzaCgoMTUmbykudG9TdHJpbmcoMTYpKX1yZXR1cm4gZS5qb2luKCIiKX0scGFyc2U6ZnVuY3Rpb24odCl7Zm9yKHZhciBuPXQubGVuZ3RoLGk9W10sZT0wO2U8bjtlKz0yKWlbZT4+PjNdfD1wYXJzZUludCh0LnN1YnN0cihlLDIpLDE2KTw8MjQtZSU4KjQ7cmV0dXJuIG5ldyBzLmluaXQoaSxuLzIpfX0sdT1hLkxhdGluMT17c3RyaW5naWZ5OmZ1bmN0aW9uKHQpe2Zvcih2YXIgbj10LndvcmRzLGk9dC5zaWdCeXRlcyxlPVtdLHI9MDtyPGk7cisrKXt2YXIgbz1uW3I+Pj4yXT4+PjI0LXIlNCo4JjI1NTtlLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShvKSl9cmV0dXJuIGUuam9pbigiIil9LHBhcnNlOmZ1bmN0aW9uKHQpe2Zvcih2YXIgbj10Lmxlbmd0aCxpPVtdLGU9MDtlPG47ZSsrKWlbZT4+PjJdfD0oMjU1JnQuY2hhckNvZGVBdChlKSk8PDI0LWUlNCo4O3JldHVybiBuZXcgcy5pbml0KGksbil9fSxmPWEuVXRmOD17c3RyaW5naWZ5OmZ1bmN0aW9uKHQpe3RyeXtyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGVzY2FwZSh1LnN0cmluZ2lmeSh0KSkpfWNhdGNoKHQpe3Rocm93IG5ldyBFcnJvcigiTWFsZm9ybWVkIFVURi04IGRhdGEiKX19LHBhcnNlOmZ1bmN0aW9uKHQpe3JldHVybiB1LnBhcnNlKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudCh0KSkpfX0saD1yLkJ1ZmZlcmVkQmxvY2tBbGdvcml0aG09by5leHRlbmQoe3Jlc2V0OmZ1bmN0aW9uKCl7dGhpcy5fZGF0YT1uZXcgcy5pbml0LHRoaXMuX25EYXRhQnl0ZXM9MH0sX2FwcGVuZDpmdW5jdGlvbih0KXsic3RyaW5nIj09dHlwZW9mIHQmJih0PWYucGFyc2UodCkpLHRoaXMuX2RhdGEuY29uY2F0KHQpLHRoaXMuX25EYXRhQnl0ZXMrPXQuc2lnQnl0ZXN9LF9wcm9jZXNzOmZ1bmN0aW9uKG4pe3ZhciBpPXRoaXMuX2RhdGEsZT1pLndvcmRzLHI9aS5zaWdCeXRlcyxvPXRoaXMuYmxvY2tTaXplLGE9NCpvLGM9ci9hO2M9bj90LmNlaWwoYyk6dC5tYXgoKDB8YyktdGhpcy5fbWluQnVmZmVyU2l6ZSwwKTt2YXIgdT1jKm8sZj10Lm1pbig0KnUscik7aWYodSl7Zm9yKHZhciBoPTA7aDx1O2grPW8pdGhpcy5fZG9Qcm9jZXNzQmxvY2soZSxoKTt2YXIgcD1lLnNwbGljZSgwLHUpO2kuc2lnQnl0ZXMtPWZ9cmV0dXJuIG5ldyBzLmluaXQocCxmKX0sY2xvbmU6ZnVuY3Rpb24oKXt2YXIgdD1vLmNsb25lLmNhbGwodGhpcyk7cmV0dXJuIHQuX2RhdGE9dGhpcy5fZGF0YS5jbG9uZSgpLHR9LF9taW5CdWZmZXJTaXplOjB9KSxwPShyLkhhc2hlcj1oLmV4dGVuZCh7Y2ZnOm8uZXh0ZW5kKCksaW5pdDpmdW5jdGlvbih0KXt0aGlzLmNmZz10aGlzLmNmZy5leHRlbmQodCksdGhpcy5yZXNldCgpfSxyZXNldDpmdW5jdGlvbigpe2gucmVzZXQuY2FsbCh0aGlzKSx0aGlzLl9kb1Jlc2V0KCl9LHVwZGF0ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fYXBwZW5kKHQpLHRoaXMuX3Byb2Nlc3MoKSx0aGlzfSxmaW5hbGl6ZTpmdW5jdGlvbih0KXt0JiZ0aGlzLl9hcHBlbmQodCk7dmFyIG49dGhpcy5fZG9GaW5hbGl6ZSgpO3JldHVybiBufSxibG9ja1NpemU6MTYsX2NyZWF0ZUhlbHBlcjpmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24obixpKXtyZXR1cm4gbmV3IHQuaW5pdChpKS5maW5hbGl6ZShuKX19LF9jcmVhdGVIbWFjSGVscGVyOmZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihuLGkpe3JldHVybiBuZXcgcC5ITUFDLmluaXQodCxpKS5maW5hbGl6ZShuKX19fSksZS5hbGdvPXt9KTtyZXR1cm4gZX0oTWF0aCk7cmV0dXJuIHR9KTsKLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29yZS5taW4uanMubWFw"},{"meta":{"name":"crypto-js.js","url":"https://cdn.bootcss.com/crypto-js/3.1.9/crypto-js.js","ts":1549937732808,"mimetype":"text/javascript"},"source":"OyhmdW5jdGlvbiAocm9vdCwgZmFjdG9yeSkgewoJaWYgKHR5cGVvZiBleHBvcnRzID09PSAib2JqZWN0IikgewoJCS8vIENvbW1vbkpTCgkJbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzID0gZmFjdG9yeSgpOwoJfQoJZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gImZ1bmN0aW9uIiAmJiBkZWZpbmUuYW1kKSB7CgkJLy8gQU1ECgkJZGVmaW5lKFtdLCBmYWN0b3J5KTsKCX0KCWVsc2UgewoJCS8vIEdsb2JhbCAoYnJvd3NlcikKCQlyb290LkNyeXB0b0pTID0gZmFjdG9yeSgpOwoJfQp9KHRoaXMsIGZ1bmN0aW9uICgpIHsKCgkvKioKCSAqIENyeXB0b0pTIGNvcmUgY29tcG9uZW50cy4KCSAqLwoJdmFyIENyeXB0b0pTID0gQ3J5cHRvSlMgfHwgKGZ1bmN0aW9uIChNYXRoLCB1bmRlZmluZWQpIHsKCSAgICAvKgoJICAgICAqIExvY2FsIHBvbHlmaWwgb2YgT2JqZWN0LmNyZWF0ZQoJICAgICAqLwoJICAgIHZhciBjcmVhdGUgPSBPYmplY3QuY3JlYXRlIHx8IChmdW5jdGlvbiAoKSB7CgkgICAgICAgIGZ1bmN0aW9uIEYoKSB7fTsKCgkgICAgICAgIHJldHVybiBmdW5jdGlvbiAob2JqKSB7CgkgICAgICAgICAgICB2YXIgc3VidHlwZTsKCgkgICAgICAgICAgICBGLnByb3RvdHlwZSA9IG9iajsKCgkgICAgICAgICAgICBzdWJ0eXBlID0gbmV3IEYoKTsKCgkgICAgICAgICAgICBGLnByb3RvdHlwZSA9IG51bGw7CgoJICAgICAgICAgICAgcmV0dXJuIHN1YnR5cGU7CgkgICAgICAgIH07CgkgICAgfSgpKQoKCSAgICAvKioKCSAgICAgKiBDcnlwdG9KUyBuYW1lc3BhY2UuCgkgICAgICovCgkgICAgdmFyIEMgPSB7fTsKCgkgICAgLyoqCgkgICAgICogTGlicmFyeSBuYW1lc3BhY2UuCgkgICAgICovCgkgICAgdmFyIENfbGliID0gQy5saWIgPSB7fTsKCgkgICAgLyoqCgkgICAgICogQmFzZSBvYmplY3QgZm9yIHByb3RvdHlwYWwgaW5oZXJpdGFuY2UuCgkgICAgICovCgkgICAgdmFyIEJhc2UgPSBDX2xpYi5CYXNlID0gKGZ1bmN0aW9uICgpIHsKCgoJICAgICAgICByZXR1cm4gewoJICAgICAgICAgICAgLyoqCgkgICAgICAgICAgICAgKiBDcmVhdGVzIGEgbmV3IG9iamVjdCB0aGF0IGluaGVyaXRzIGZyb20gdGhpcyBvYmplY3QuCgkgICAgICAgICAgICAgKgoJICAgICAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IG92ZXJyaWRlcyBQcm9wZXJ0aWVzIHRvIGNvcHkgaW50byB0aGUgbmV3IG9iamVjdC4KCSAgICAgICAgICAgICAqCgkgICAgICAgICAgICAgKiBAcmV0dXJuIHtPYmplY3R9IFRoZSBuZXcgb2JqZWN0LgoJICAgICAgICAgICAgICoKCSAgICAgICAgICAgICAqIEBzdGF0aWMKCSAgICAgICAgICAgICAqCgkgICAgICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgICAgICoKCSAgICAgICAgICAgICAqICAgICB2YXIgTXlUeXBlID0gQ3J5cHRvSlMubGliLkJhc2UuZXh0ZW5kKHsKCSAgICAgICAgICAgICAqICAgICAgICAgZmllbGQ6ICd2YWx1ZScsCgkgICAgICAgICAgICAgKgoJICAgICAgICAgICAgICogICAgICAgICBtZXRob2Q6IGZ1bmN0aW9uICgpIHsKCSAgICAgICAgICAgICAqICAgICAgICAgfQoJICAgICAgICAgICAgICogICAgIH0pOwoJICAgICAgICAgICAgICovCgkgICAgICAgICAgICBleHRlbmQ6IGZ1bmN0aW9uIChvdmVycmlkZXMpIHsKCSAgICAgICAgICAgICAgICAvLyBTcGF3bgoJICAgICAgICAgICAgICAgIHZhciBzdWJ0eXBlID0gY3JlYXRlKHRoaXMpOwoKCSAgICAgICAgICAgICAgICAvLyBBdWdtZW50CgkgICAgICAgICAgICAgICAgaWYgKG92ZXJyaWRlcykgewoJICAgICAgICAgICAgICAgICAgICBzdWJ0eXBlLm1peEluKG92ZXJyaWRlcyk7CgkgICAgICAgICAgICAgICAgfQoKCSAgICAgICAgICAgICAgICAvLyBDcmVhdGUgZGVmYXVsdCBpbml0aWFsaXplcgoJICAgICAgICAgICAgICAgIGlmICghc3VidHlwZS5oYXNPd25Qcm9wZXJ0eSgnaW5pdCcpIHx8IHRoaXMuaW5pdCA9PT0gc3VidHlwZS5pbml0KSB7CgkgICAgICAgICAgICAgICAgICAgIHN1YnR5cGUuaW5pdCA9IGZ1bmN0aW9uICgpIHsKCSAgICAgICAgICAgICAgICAgICAgICAgIHN1YnR5cGUuJHN1cGVyLmluaXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKCSAgICAgICAgICAgICAgICAgICAgfTsKCSAgICAgICAgICAgICAgICB9CgoJICAgICAgICAgICAgICAgIC8vIEluaXRpYWxpemVyJ3MgcHJvdG90eXBlIGlzIHRoZSBzdWJ0eXBlIG9iamVjdAoJICAgICAgICAgICAgICAgIHN1YnR5cGUuaW5pdC5wcm90b3R5cGUgPSBzdWJ0eXBlOwoKCSAgICAgICAgICAgICAgICAvLyBSZWZlcmVuY2Ugc3VwZXJ0eXBlCgkgICAgICAgICAgICAgICAgc3VidHlwZS4kc3VwZXIgPSB0aGlzOwoKCSAgICAgICAgICAgICAgICByZXR1cm4gc3VidHlwZTsKCSAgICAgICAgICAgIH0sCgoJICAgICAgICAgICAgLyoqCgkgICAgICAgICAgICAgKiBFeHRlbmRzIHRoaXMgb2JqZWN0IGFuZCBydW5zIHRoZSBpbml0IG1ldGhvZC4KCSAgICAgICAgICAgICAqIEFyZ3VtZW50cyB0byBjcmVhdGUoKSB3aWxsIGJlIHBhc3NlZCB0byBpbml0KCkuCgkgICAgICAgICAgICAgKgoJICAgICAgICAgICAgICogQHJldHVybiB7T2JqZWN0fSBUaGUgbmV3IG9iamVjdC4KCSAgICAgICAgICAgICAqCgkgICAgICAgICAgICAgKiBAc3RhdGljCgkgICAgICAgICAgICAgKgoJICAgICAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICAgICAqCgkgICAgICAgICAgICAgKiAgICAgdmFyIGluc3RhbmNlID0gTXlUeXBlLmNyZWF0ZSgpOwoJICAgICAgICAgICAgICovCgkgICAgICAgICAgICBjcmVhdGU6IGZ1bmN0aW9uICgpIHsKCSAgICAgICAgICAgICAgICB2YXIgaW5zdGFuY2UgPSB0aGlzLmV4dGVuZCgpOwoJICAgICAgICAgICAgICAgIGluc3RhbmNlLmluaXQuYXBwbHkoaW5zdGFuY2UsIGFyZ3VtZW50cyk7CgoJICAgICAgICAgICAgICAgIHJldHVybiBpbnN0YW5jZTsKCSAgICAgICAgICAgIH0sCgoJICAgICAgICAgICAgLyoqCgkgICAgICAgICAgICAgKiBJbml0aWFsaXplcyBhIG5ld2x5IGNyZWF0ZWQgb2JqZWN0LgoJICAgICAgICAgICAgICogT3ZlcnJpZGUgdGhpcyBtZXRob2QgdG8gYWRkIHNvbWUgbG9naWMgd2hlbiB5b3VyIG9iamVjdHMgYXJlIGNyZWF0ZWQuCgkgICAgICAgICAgICAgKgoJICAgICAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICAgICAqCgkgICAgICAgICAgICAgKiAgICAgdmFyIE15VHlwZSA9IENyeXB0b0pTLmxpYi5CYXNlLmV4dGVuZCh7CgkgICAgICAgICAgICAgKiAgICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHsKCSAgICAgICAgICAgICAqICAgICAgICAgICAgIC8vIC4uLgoJICAgICAgICAgICAgICogICAgICAgICB9CgkgICAgICAgICAgICAgKiAgICAgfSk7CgkgICAgICAgICAgICAgKi8KCSAgICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHsKCSAgICAgICAgICAgIH0sCgoJICAgICAgICAgICAgLyoqCgkgICAgICAgICAgICAgKiBDb3BpZXMgcHJvcGVydGllcyBpbnRvIHRoaXMgb2JqZWN0LgoJICAgICAgICAgICAgICoKCSAgICAgICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBwcm9wZXJ0aWVzIFRoZSBwcm9wZXJ0aWVzIHRvIG1peCBpbi4KCSAgICAgICAgICAgICAqCgkgICAgICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgICAgICoKCSAgICAgICAgICAgICAqICAgICBNeVR5cGUubWl4SW4oewoJICAgICAgICAgICAgICogICAgICAgICBmaWVsZDogJ3ZhbHVlJwoJICAgICAgICAgICAgICogICAgIH0pOwoJICAgICAgICAgICAgICovCgkgICAgICAgICAgICBtaXhJbjogZnVuY3Rpb24gKHByb3BlcnRpZXMpIHsKCSAgICAgICAgICAgICAgICBmb3IgKHZhciBwcm9wZXJ0eU5hbWUgaW4gcHJvcGVydGllcykgewoJICAgICAgICAgICAgICAgICAgICBpZiAocHJvcGVydGllcy5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eU5hbWUpKSB7CgkgICAgICAgICAgICAgICAgICAgICAgICB0aGlzW3Byb3BlcnR5TmFtZV0gPSBwcm9wZXJ0aWVzW3Byb3BlcnR5TmFtZV07CgkgICAgICAgICAgICAgICAgICAgIH0KCSAgICAgICAgICAgICAgICB9CgoJICAgICAgICAgICAgICAgIC8vIElFIHdvbid0IGNvcHkgdG9TdHJpbmcgdXNpbmcgdGhlIGxvb3AgYWJvdmUKCSAgICAgICAgICAgICAgICBpZiAocHJvcGVydGllcy5oYXNPd25Qcm9wZXJ0eSgndG9TdHJpbmcnKSkgewoJICAgICAgICAgICAgICAgICAgICB0aGlzLnRvU3RyaW5nID0gcHJvcGVydGllcy50b1N0cmluZzsKCSAgICAgICAgICAgICAgICB9CgkgICAgICAgICAgICB9LAoKCSAgICAgICAgICAgIC8qKgoJICAgICAgICAgICAgICogQ3JlYXRlcyBhIGNvcHkgb2YgdGhpcyBvYmplY3QuCgkgICAgICAgICAgICAgKgoJICAgICAgICAgICAgICogQHJldHVybiB7T2JqZWN0fSBUaGUgY2xvbmUuCgkgICAgICAgICAgICAgKgoJICAgICAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICAgICAqCgkgICAgICAgICAgICAgKiAgICAgdmFyIGNsb25lID0gaW5zdGFuY2UuY2xvbmUoKTsKCSAgICAgICAgICAgICAqLwoJICAgICAgICAgICAgY2xvbmU6IGZ1bmN0aW9uICgpIHsKCSAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5pbml0LnByb3RvdHlwZS5leHRlbmQodGhpcyk7CgkgICAgICAgICAgICB9CgkgICAgICAgIH07CgkgICAgfSgpKTsKCgkgICAgLyoqCgkgICAgICogQW4gYXJyYXkgb2YgMzItYml0IHdvcmRzLgoJICAgICAqCgkgICAgICogQHByb3BlcnR5IHtBcnJheX0gd29yZHMgVGhlIGFycmF5IG9mIDMyLWJpdCB3b3Jkcy4KCSAgICAgKiBAcHJvcGVydHkge251bWJlcn0gc2lnQnl0ZXMgVGhlIG51bWJlciBvZiBzaWduaWZpY2FudCBieXRlcyBpbiB0aGlzIHdvcmQgYXJyYXkuCgkgICAgICovCgkgICAgdmFyIFdvcmRBcnJheSA9IENfbGliLldvcmRBcnJheSA9IEJhc2UuZXh0ZW5kKHsKCSAgICAgICAgLyoqCgkgICAgICAgICAqIEluaXRpYWxpemVzIGEgbmV3bHkgY3JlYXRlZCB3b3JkIGFycmF5LgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcGFyYW0ge0FycmF5fSB3b3JkcyAoT3B0aW9uYWwpIEFuIGFycmF5IG9mIDMyLWJpdCB3b3Jkcy4KCSAgICAgICAgICogQHBhcmFtIHtudW1iZXJ9IHNpZ0J5dGVzIChPcHRpb25hbCkgVGhlIG51bWJlciBvZiBzaWduaWZpY2FudCBieXRlcyBpbiB0aGUgd29yZHMuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAqCgkgICAgICAgICAqICAgICB2YXIgd29yZEFycmF5ID0gQ3J5cHRvSlMubGliLldvcmRBcnJheS5jcmVhdGUoKTsKCSAgICAgICAgICogICAgIHZhciB3b3JkQXJyYXkgPSBDcnlwdG9KUy5saWIuV29yZEFycmF5LmNyZWF0ZShbMHgwMDAxMDIwMywgMHgwNDA1MDYwN10pOwoJICAgICAgICAgKiAgICAgdmFyIHdvcmRBcnJheSA9IENyeXB0b0pTLmxpYi5Xb3JkQXJyYXkuY3JlYXRlKFsweDAwMDEwMjAzLCAweDA0MDUwNjA3XSwgNik7CgkgICAgICAgICAqLwoJICAgICAgICBpbml0OiBmdW5jdGlvbiAod29yZHMsIHNpZ0J5dGVzKSB7CgkgICAgICAgICAgICB3b3JkcyA9IHRoaXMud29yZHMgPSB3b3JkcyB8fCBbXTsKCgkgICAgICAgICAgICBpZiAoc2lnQnl0ZXMgIT0gdW5kZWZpbmVkKSB7CgkgICAgICAgICAgICAgICAgdGhpcy5zaWdCeXRlcyA9IHNpZ0J5dGVzOwoJICAgICAgICAgICAgfSBlbHNlIHsKCSAgICAgICAgICAgICAgICB0aGlzLnNpZ0J5dGVzID0gd29yZHMubGVuZ3RoICogNDsKCSAgICAgICAgICAgIH0KCSAgICAgICAgfSwKCgkgICAgICAgIC8qKgoJICAgICAgICAgKiBDb252ZXJ0cyB0aGlzIHdvcmQgYXJyYXkgdG8gYSBzdHJpbmcuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBwYXJhbSB7RW5jb2Rlcn0gZW5jb2RlciAoT3B0aW9uYWwpIFRoZSBlbmNvZGluZyBzdHJhdGVneSB0byB1c2UuIERlZmF1bHQ6IENyeXB0b0pTLmVuYy5IZXgKCSAgICAgICAgICoKCSAgICAgICAgICogQHJldHVybiB7c3RyaW5nfSBUaGUgc3RyaW5naWZpZWQgd29yZCBhcnJheS4KCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciBzdHJpbmcgPSB3b3JkQXJyYXkgKyAnJzsKCSAgICAgICAgICogICAgIHZhciBzdHJpbmcgPSB3b3JkQXJyYXkudG9TdHJpbmcoKTsKCSAgICAgICAgICogICAgIHZhciBzdHJpbmcgPSB3b3JkQXJyYXkudG9TdHJpbmcoQ3J5cHRvSlMuZW5jLlV0ZjgpOwoJICAgICAgICAgKi8KCSAgICAgICAgdG9TdHJpbmc6IGZ1bmN0aW9uIChlbmNvZGVyKSB7CgkgICAgICAgICAgICByZXR1cm4gKGVuY29kZXIgfHwgSGV4KS5zdHJpbmdpZnkodGhpcyk7CgkgICAgICAgIH0sCgoJICAgICAgICAvKioKCSAgICAgICAgICogQ29uY2F0ZW5hdGVzIGEgd29yZCBhcnJheSB0byB0aGlzIHdvcmQgYXJyYXkuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBwYXJhbSB7V29yZEFycmF5fSB3b3JkQXJyYXkgVGhlIHdvcmQgYXJyYXkgdG8gYXBwZW5kLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcmV0dXJuIHtXb3JkQXJyYXl9IFRoaXMgd29yZCBhcnJheS4KCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHdvcmRBcnJheTEuY29uY2F0KHdvcmRBcnJheTIpOwoJICAgICAgICAgKi8KCSAgICAgICAgY29uY2F0OiBmdW5jdGlvbiAod29yZEFycmF5KSB7CgkgICAgICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgICAgIHZhciB0aGlzV29yZHMgPSB0aGlzLndvcmRzOwoJICAgICAgICAgICAgdmFyIHRoYXRXb3JkcyA9IHdvcmRBcnJheS53b3JkczsKCSAgICAgICAgICAgIHZhciB0aGlzU2lnQnl0ZXMgPSB0aGlzLnNpZ0J5dGVzOwoJICAgICAgICAgICAgdmFyIHRoYXRTaWdCeXRlcyA9IHdvcmRBcnJheS5zaWdCeXRlczsKCgkgICAgICAgICAgICAvLyBDbGFtcCBleGNlc3MgYml0cwoJICAgICAgICAgICAgdGhpcy5jbGFtcCgpOwoKCSAgICAgICAgICAgIC8vIENvbmNhdAoJICAgICAgICAgICAgaWYgKHRoaXNTaWdCeXRlcyAlIDQpIHsKCSAgICAgICAgICAgICAgICAvLyBDb3B5IG9uZSBieXRlIGF0IGEgdGltZQoJICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhhdFNpZ0J5dGVzOyBpKyspIHsKCSAgICAgICAgICAgICAgICAgICAgdmFyIHRoYXRCeXRlID0gKHRoYXRXb3Jkc1tpID4+PiAyXSA+Pj4gKDI0IC0gKGkgJSA0KSAqIDgpKSAmIDB4ZmY7CgkgICAgICAgICAgICAgICAgICAgIHRoaXNXb3Jkc1sodGhpc1NpZ0J5dGVzICsgaSkgPj4+IDJdIHw9IHRoYXRCeXRlIDw8ICgyNCAtICgodGhpc1NpZ0J5dGVzICsgaSkgJSA0KSAqIDgpOwoJICAgICAgICAgICAgICAgIH0KCSAgICAgICAgICAgIH0gZWxzZSB7CgkgICAgICAgICAgICAgICAgLy8gQ29weSBvbmUgd29yZCBhdCBhIHRpbWUKCSAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoYXRTaWdCeXRlczsgaSArPSA0KSB7CgkgICAgICAgICAgICAgICAgICAgIHRoaXNXb3Jkc1sodGhpc1NpZ0J5dGVzICsgaSkgPj4+IDJdID0gdGhhdFdvcmRzW2kgPj4+IDJdOwoJICAgICAgICAgICAgICAgIH0KCSAgICAgICAgICAgIH0KCSAgICAgICAgICAgIHRoaXMuc2lnQnl0ZXMgKz0gdGhhdFNpZ0J5dGVzOwoKCSAgICAgICAgICAgIC8vIENoYWluYWJsZQoJICAgICAgICAgICAgcmV0dXJuIHRoaXM7CgkgICAgICAgIH0sCgoJICAgICAgICAvKioKCSAgICAgICAgICogUmVtb3ZlcyBpbnNpZ25pZmljYW50IGJpdHMuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAqCgkgICAgICAgICAqICAgICB3b3JkQXJyYXkuY2xhbXAoKTsKCSAgICAgICAgICovCgkgICAgICAgIGNsYW1wOiBmdW5jdGlvbiAoKSB7CgkgICAgICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgICAgIHZhciB3b3JkcyA9IHRoaXMud29yZHM7CgkgICAgICAgICAgICB2YXIgc2lnQnl0ZXMgPSB0aGlzLnNpZ0J5dGVzOwoKCSAgICAgICAgICAgIC8vIENsYW1wCgkgICAgICAgICAgICB3b3Jkc1tzaWdCeXRlcyA+Pj4gMl0gJj0gMHhmZmZmZmZmZiA8PCAoMzIgLSAoc2lnQnl0ZXMgJSA0KSAqIDgpOwoJICAgICAgICAgICAgd29yZHMubGVuZ3RoID0gTWF0aC5jZWlsKHNpZ0J5dGVzIC8gNCk7CgkgICAgICAgIH0sCgoJICAgICAgICAvKioKCSAgICAgICAgICogQ3JlYXRlcyBhIGNvcHkgb2YgdGhpcyB3b3JkIGFycmF5LgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcmV0dXJuIHtXb3JkQXJyYXl9IFRoZSBjbG9uZS4KCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciBjbG9uZSA9IHdvcmRBcnJheS5jbG9uZSgpOwoJICAgICAgICAgKi8KCSAgICAgICAgY2xvbmU6IGZ1bmN0aW9uICgpIHsKCSAgICAgICAgICAgIHZhciBjbG9uZSA9IEJhc2UuY2xvbmUuY2FsbCh0aGlzKTsKCSAgICAgICAgICAgIGNsb25lLndvcmRzID0gdGhpcy53b3Jkcy5zbGljZSgwKTsKCgkgICAgICAgICAgICByZXR1cm4gY2xvbmU7CgkgICAgICAgIH0sCgoJICAgICAgICAvKioKCSAgICAgICAgICogQ3JlYXRlcyBhIHdvcmQgYXJyYXkgZmlsbGVkIHdpdGggcmFuZG9tIGJ5dGVzLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcGFyYW0ge251bWJlcn0gbkJ5dGVzIFRoZSBudW1iZXIgb2YgcmFuZG9tIGJ5dGVzIHRvIGdlbmVyYXRlLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcmV0dXJuIHtXb3JkQXJyYXl9IFRoZSByYW5kb20gd29yZCBhcnJheS4KCSAgICAgICAgICoKCSAgICAgICAgICogQHN0YXRpYwoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIHdvcmRBcnJheSA9IENyeXB0b0pTLmxpYi5Xb3JkQXJyYXkucmFuZG9tKDE2KTsKCSAgICAgICAgICovCgkgICAgICAgIHJhbmRvbTogZnVuY3Rpb24gKG5CeXRlcykgewoJICAgICAgICAgICAgdmFyIHdvcmRzID0gW107CgoJICAgICAgICAgICAgdmFyIHIgPSAoZnVuY3Rpb24gKG1fdykgewoJICAgICAgICAgICAgICAgIHZhciBtX3cgPSBtX3c7CgkgICAgICAgICAgICAgICAgdmFyIG1feiA9IDB4M2FkZTY4YjE7CgkgICAgICAgICAgICAgICAgdmFyIG1hc2sgPSAweGZmZmZmZmZmOwoKCSAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkgewoJICAgICAgICAgICAgICAgICAgICBtX3ogPSAoMHg5MDY5ICogKG1feiAmIDB4RkZGRikgKyAobV96ID4+IDB4MTApKSAmIG1hc2s7CgkgICAgICAgICAgICAgICAgICAgIG1fdyA9ICgweDQ2NTAgKiAobV93ICYgMHhGRkZGKSArIChtX3cgPj4gMHgxMCkpICYgbWFzazsKCSAgICAgICAgICAgICAgICAgICAgdmFyIHJlc3VsdCA9ICgobV96IDw8IDB4MTApICsgbV93KSAmIG1hc2s7CgkgICAgICAgICAgICAgICAgICAgIHJlc3VsdCAvPSAweDEwMDAwMDAwMDsKCSAgICAgICAgICAgICAgICAgICAgcmVzdWx0ICs9IDAuNTsKCSAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCAqIChNYXRoLnJhbmRvbSgpID4gLjUgPyAxIDogLTEpOwoJICAgICAgICAgICAgICAgIH0KCSAgICAgICAgICAgIH0pOwoKCSAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCByY2FjaGU7IGkgPCBuQnl0ZXM7IGkgKz0gNCkgewoJICAgICAgICAgICAgICAgIHZhciBfciA9IHIoKHJjYWNoZSB8fCBNYXRoLnJhbmRvbSgpKSAqIDB4MTAwMDAwMDAwKTsKCgkgICAgICAgICAgICAgICAgcmNhY2hlID0gX3IoKSAqIDB4M2FkZTY3Yjc7CgkgICAgICAgICAgICAgICAgd29yZHMucHVzaCgoX3IoKSAqIDB4MTAwMDAwMDAwKSB8IDApOwoJICAgICAgICAgICAgfQoKCSAgICAgICAgICAgIHJldHVybiBuZXcgV29yZEFycmF5LmluaXQod29yZHMsIG5CeXRlcyk7CgkgICAgICAgIH0KCSAgICB9KTsKCgkgICAgLyoqCgkgICAgICogRW5jb2RlciBuYW1lc3BhY2UuCgkgICAgICovCgkgICAgdmFyIENfZW5jID0gQy5lbmMgPSB7fTsKCgkgICAgLyoqCgkgICAgICogSGV4IGVuY29kaW5nIHN0cmF0ZWd5LgoJICAgICAqLwoJICAgIHZhciBIZXggPSBDX2VuYy5IZXggPSB7CgkgICAgICAgIC8qKgoJICAgICAgICAgKiBDb252ZXJ0cyBhIHdvcmQgYXJyYXkgdG8gYSBoZXggc3RyaW5nLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcGFyYW0ge1dvcmRBcnJheX0gd29yZEFycmF5IFRoZSB3b3JkIGFycmF5LgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcmV0dXJuIHtzdHJpbmd9IFRoZSBoZXggc3RyaW5nLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAc3RhdGljCgkgICAgICAgICAqCgkgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAqCgkgICAgICAgICAqICAgICB2YXIgaGV4U3RyaW5nID0gQ3J5cHRvSlMuZW5jLkhleC5zdHJpbmdpZnkod29yZEFycmF5KTsKCSAgICAgICAgICovCgkgICAgICAgIHN0cmluZ2lmeTogZnVuY3Rpb24gKHdvcmRBcnJheSkgewoJICAgICAgICAgICAgLy8gU2hvcnRjdXRzCgkgICAgICAgICAgICB2YXIgd29yZHMgPSB3b3JkQXJyYXkud29yZHM7CgkgICAgICAgICAgICB2YXIgc2lnQnl0ZXMgPSB3b3JkQXJyYXkuc2lnQnl0ZXM7CgoJICAgICAgICAgICAgLy8gQ29udmVydAoJICAgICAgICAgICAgdmFyIGhleENoYXJzID0gW107CgkgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNpZ0J5dGVzOyBpKyspIHsKCSAgICAgICAgICAgICAgICB2YXIgYml0ZSA9ICh3b3Jkc1tpID4+PiAyXSA+Pj4gKDI0IC0gKGkgJSA0KSAqIDgpKSAmIDB4ZmY7CgkgICAgICAgICAgICAgICAgaGV4Q2hhcnMucHVzaCgoYml0ZSA+Pj4gNCkudG9TdHJpbmcoMTYpKTsKCSAgICAgICAgICAgICAgICBoZXhDaGFycy5wdXNoKChiaXRlICYgMHgwZikudG9TdHJpbmcoMTYpKTsKCSAgICAgICAgICAgIH0KCgkgICAgICAgICAgICByZXR1cm4gaGV4Q2hhcnMuam9pbignJyk7CgkgICAgICAgIH0sCgoJICAgICAgICAvKioKCSAgICAgICAgICogQ29udmVydHMgYSBoZXggc3RyaW5nIHRvIGEgd29yZCBhcnJheS4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGhleFN0ciBUaGUgaGV4IHN0cmluZy4KCSAgICAgICAgICoKCSAgICAgICAgICogQHJldHVybiB7V29yZEFycmF5fSBUaGUgd29yZCBhcnJheS4KCSAgICAgICAgICoKCSAgICAgICAgICogQHN0YXRpYwoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIHdvcmRBcnJheSA9IENyeXB0b0pTLmVuYy5IZXgucGFyc2UoaGV4U3RyaW5nKTsKCSAgICAgICAgICovCgkgICAgICAgIHBhcnNlOiBmdW5jdGlvbiAoaGV4U3RyKSB7CgkgICAgICAgICAgICAvLyBTaG9ydGN1dAoJICAgICAgICAgICAgdmFyIGhleFN0ckxlbmd0aCA9IGhleFN0ci5sZW5ndGg7CgoJICAgICAgICAgICAgLy8gQ29udmVydAoJICAgICAgICAgICAgdmFyIHdvcmRzID0gW107CgkgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGhleFN0ckxlbmd0aDsgaSArPSAyKSB7CgkgICAgICAgICAgICAgICAgd29yZHNbaSA+Pj4gM10gfD0gcGFyc2VJbnQoaGV4U3RyLnN1YnN0cihpLCAyKSwgMTYpIDw8ICgyNCAtIChpICUgOCkgKiA0KTsKCSAgICAgICAgICAgIH0KCgkgICAgICAgICAgICByZXR1cm4gbmV3IFdvcmRBcnJheS5pbml0KHdvcmRzLCBoZXhTdHJMZW5ndGggLyAyKTsKCSAgICAgICAgfQoJICAgIH07CgoJICAgIC8qKgoJICAgICAqIExhdGluMSBlbmNvZGluZyBzdHJhdGVneS4KCSAgICAgKi8KCSAgICB2YXIgTGF0aW4xID0gQ19lbmMuTGF0aW4xID0gewoJICAgICAgICAvKioKCSAgICAgICAgICogQ29udmVydHMgYSB3b3JkIGFycmF5IHRvIGEgTGF0aW4xIHN0cmluZy4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtXb3JkQXJyYXl9IHdvcmRBcnJheSBUaGUgd29yZCBhcnJheS4KCSAgICAgICAgICoKCSAgICAgICAgICogQHJldHVybiB7c3RyaW5nfSBUaGUgTGF0aW4xIHN0cmluZy4KCSAgICAgICAgICoKCSAgICAgICAgICogQHN0YXRpYwoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIGxhdGluMVN0cmluZyA9IENyeXB0b0pTLmVuYy5MYXRpbjEuc3RyaW5naWZ5KHdvcmRBcnJheSk7CgkgICAgICAgICAqLwoJICAgICAgICBzdHJpbmdpZnk6IGZ1bmN0aW9uICh3b3JkQXJyYXkpIHsKCSAgICAgICAgICAgIC8vIFNob3J0Y3V0cwoJICAgICAgICAgICAgdmFyIHdvcmRzID0gd29yZEFycmF5LndvcmRzOwoJICAgICAgICAgICAgdmFyIHNpZ0J5dGVzID0gd29yZEFycmF5LnNpZ0J5dGVzOwoKCSAgICAgICAgICAgIC8vIENvbnZlcnQKCSAgICAgICAgICAgIHZhciBsYXRpbjFDaGFycyA9IFtdOwoJICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzaWdCeXRlczsgaSsrKSB7CgkgICAgICAgICAgICAgICAgdmFyIGJpdGUgPSAod29yZHNbaSA+Pj4gMl0gPj4+ICgyNCAtIChpICUgNCkgKiA4KSkgJiAweGZmOwoJICAgICAgICAgICAgICAgIGxhdGluMUNoYXJzLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShiaXRlKSk7CgkgICAgICAgICAgICB9CgoJICAgICAgICAgICAgcmV0dXJuIGxhdGluMUNoYXJzLmpvaW4oJycpOwoJICAgICAgICB9LAoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIENvbnZlcnRzIGEgTGF0aW4xIHN0cmluZyB0byBhIHdvcmQgYXJyYXkuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBsYXRpbjFTdHIgVGhlIExhdGluMSBzdHJpbmcuCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge1dvcmRBcnJheX0gVGhlIHdvcmQgYXJyYXkuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBzdGF0aWMKCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciB3b3JkQXJyYXkgPSBDcnlwdG9KUy5lbmMuTGF0aW4xLnBhcnNlKGxhdGluMVN0cmluZyk7CgkgICAgICAgICAqLwoJICAgICAgICBwYXJzZTogZnVuY3Rpb24gKGxhdGluMVN0cikgewoJICAgICAgICAgICAgLy8gU2hvcnRjdXQKCSAgICAgICAgICAgIHZhciBsYXRpbjFTdHJMZW5ndGggPSBsYXRpbjFTdHIubGVuZ3RoOwoKCSAgICAgICAgICAgIC8vIENvbnZlcnQKCSAgICAgICAgICAgIHZhciB3b3JkcyA9IFtdOwoJICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXRpbjFTdHJMZW5ndGg7IGkrKykgewoJICAgICAgICAgICAgICAgIHdvcmRzW2kgPj4+IDJdIHw9IChsYXRpbjFTdHIuY2hhckNvZGVBdChpKSAmIDB4ZmYpIDw8ICgyNCAtIChpICUgNCkgKiA4KTsKCSAgICAgICAgICAgIH0KCgkgICAgICAgICAgICByZXR1cm4gbmV3IFdvcmRBcnJheS5pbml0KHdvcmRzLCBsYXRpbjFTdHJMZW5ndGgpOwoJICAgICAgICB9CgkgICAgfTsKCgkgICAgLyoqCgkgICAgICogVVRGLTggZW5jb2Rpbmcgc3RyYXRlZ3kuCgkgICAgICovCgkgICAgdmFyIFV0ZjggPSBDX2VuYy5VdGY4ID0gewoJICAgICAgICAvKioKCSAgICAgICAgICogQ29udmVydHMgYSB3b3JkIGFycmF5IHRvIGEgVVRGLTggc3RyaW5nLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcGFyYW0ge1dvcmRBcnJheX0gd29yZEFycmF5IFRoZSB3b3JkIGFycmF5LgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcmV0dXJuIHtzdHJpbmd9IFRoZSBVVEYtOCBzdHJpbmcuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBzdGF0aWMKCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciB1dGY4U3RyaW5nID0gQ3J5cHRvSlMuZW5jLlV0Zjguc3RyaW5naWZ5KHdvcmRBcnJheSk7CgkgICAgICAgICAqLwoJICAgICAgICBzdHJpbmdpZnk6IGZ1bmN0aW9uICh3b3JkQXJyYXkpIHsKCSAgICAgICAgICAgIHRyeSB7CgkgICAgICAgICAgICAgICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChlc2NhcGUoTGF0aW4xLnN0cmluZ2lmeSh3b3JkQXJyYXkpKSk7CgkgICAgICAgICAgICB9IGNhdGNoIChlKSB7CgkgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdNYWxmb3JtZWQgVVRGLTggZGF0YScpOwoJICAgICAgICAgICAgfQoJICAgICAgICB9LAoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIENvbnZlcnRzIGEgVVRGLTggc3RyaW5nIHRvIGEgd29yZCBhcnJheS4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHV0ZjhTdHIgVGhlIFVURi04IHN0cmluZy4KCSAgICAgICAgICoKCSAgICAgICAgICogQHJldHVybiB7V29yZEFycmF5fSBUaGUgd29yZCBhcnJheS4KCSAgICAgICAgICoKCSAgICAgICAgICogQHN0YXRpYwoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIHdvcmRBcnJheSA9IENyeXB0b0pTLmVuYy5VdGY4LnBhcnNlKHV0ZjhTdHJpbmcpOwoJICAgICAgICAgKi8KCSAgICAgICAgcGFyc2U6IGZ1bmN0aW9uICh1dGY4U3RyKSB7CgkgICAgICAgICAgICByZXR1cm4gTGF0aW4xLnBhcnNlKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudCh1dGY4U3RyKSkpOwoJICAgICAgICB9CgkgICAgfTsKCgkgICAgLyoqCgkgICAgICogQWJzdHJhY3QgYnVmZmVyZWQgYmxvY2sgYWxnb3JpdGhtIHRlbXBsYXRlLgoJICAgICAqCgkgICAgICogVGhlIHByb3BlcnR5IGJsb2NrU2l6ZSBtdXN0IGJlIGltcGxlbWVudGVkIGluIGEgY29uY3JldGUgc3VidHlwZS4KCSAgICAgKgoJICAgICAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBfbWluQnVmZmVyU2l6ZSBUaGUgbnVtYmVyIG9mIGJsb2NrcyB0aGF0IHNob3VsZCBiZSBrZXB0IHVucHJvY2Vzc2VkIGluIHRoZSBidWZmZXIuIERlZmF1bHQ6IDAKCSAgICAgKi8KCSAgICB2YXIgQnVmZmVyZWRCbG9ja0FsZ29yaXRobSA9IENfbGliLkJ1ZmZlcmVkQmxvY2tBbGdvcml0aG0gPSBCYXNlLmV4dGVuZCh7CgkgICAgICAgIC8qKgoJICAgICAgICAgKiBSZXNldHMgdGhpcyBibG9jayBhbGdvcml0aG0ncyBkYXRhIGJ1ZmZlciB0byBpdHMgaW5pdGlhbCBzdGF0ZS4KCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIGJ1ZmZlcmVkQmxvY2tBbGdvcml0aG0ucmVzZXQoKTsKCSAgICAgICAgICovCgkgICAgICAgIHJlc2V0OiBmdW5jdGlvbiAoKSB7CgkgICAgICAgICAgICAvLyBJbml0aWFsIHZhbHVlcwoJICAgICAgICAgICAgdGhpcy5fZGF0YSA9IG5ldyBXb3JkQXJyYXkuaW5pdCgpOwoJICAgICAgICAgICAgdGhpcy5fbkRhdGFCeXRlcyA9IDA7CgkgICAgICAgIH0sCgoJICAgICAgICAvKioKCSAgICAgICAgICogQWRkcyBuZXcgZGF0YSB0byB0aGlzIGJsb2NrIGFsZ29yaXRobSdzIGJ1ZmZlci4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtXb3JkQXJyYXl8c3RyaW5nfSBkYXRhIFRoZSBkYXRhIHRvIGFwcGVuZC4gU3RyaW5ncyBhcmUgY29udmVydGVkIHRvIGEgV29yZEFycmF5IHVzaW5nIFVURi04LgoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgYnVmZmVyZWRCbG9ja0FsZ29yaXRobS5fYXBwZW5kKCdkYXRhJyk7CgkgICAgICAgICAqICAgICBidWZmZXJlZEJsb2NrQWxnb3JpdGhtLl9hcHBlbmQod29yZEFycmF5KTsKCSAgICAgICAgICovCgkgICAgICAgIF9hcHBlbmQ6IGZ1bmN0aW9uIChkYXRhKSB7CgkgICAgICAgICAgICAvLyBDb252ZXJ0IHN0cmluZyB0byBXb3JkQXJyYXksIGVsc2UgYXNzdW1lIFdvcmRBcnJheSBhbHJlYWR5CgkgICAgICAgICAgICBpZiAodHlwZW9mIGRhdGEgPT0gJ3N0cmluZycpIHsKCSAgICAgICAgICAgICAgICBkYXRhID0gVXRmOC5wYXJzZShkYXRhKTsKCSAgICAgICAgICAgIH0KCgkgICAgICAgICAgICAvLyBBcHBlbmQKCSAgICAgICAgICAgIHRoaXMuX2RhdGEuY29uY2F0KGRhdGEpOwoJICAgICAgICAgICAgdGhpcy5fbkRhdGFCeXRlcyArPSBkYXRhLnNpZ0J5dGVzOwoJICAgICAgICB9LAoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIFByb2Nlc3NlcyBhdmFpbGFibGUgZGF0YSBibG9ja3MuCgkgICAgICAgICAqCgkgICAgICAgICAqIFRoaXMgbWV0aG9kIGludm9rZXMgX2RvUHJvY2Vzc0Jsb2NrKG9mZnNldCksIHdoaWNoIG11c3QgYmUgaW1wbGVtZW50ZWQgYnkgYSBjb25jcmV0ZSBzdWJ0eXBlLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGRvRmx1c2ggV2hldGhlciBhbGwgYmxvY2tzIGFuZCBwYXJ0aWFsIGJsb2NrcyBzaG91bGQgYmUgcHJvY2Vzc2VkLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcmV0dXJuIHtXb3JkQXJyYXl9IFRoZSBwcm9jZXNzZWQgZGF0YS4KCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciBwcm9jZXNzZWREYXRhID0gYnVmZmVyZWRCbG9ja0FsZ29yaXRobS5fcHJvY2VzcygpOwoJICAgICAgICAgKiAgICAgdmFyIHByb2Nlc3NlZERhdGEgPSBidWZmZXJlZEJsb2NrQWxnb3JpdGhtLl9wcm9jZXNzKCEhJ2ZsdXNoJyk7CgkgICAgICAgICAqLwoJICAgICAgICBfcHJvY2VzczogZnVuY3Rpb24gKGRvRmx1c2gpIHsKCSAgICAgICAgICAgIC8vIFNob3J0Y3V0cwoJICAgICAgICAgICAgdmFyIGRhdGEgPSB0aGlzLl9kYXRhOwoJICAgICAgICAgICAgdmFyIGRhdGFXb3JkcyA9IGRhdGEud29yZHM7CgkgICAgICAgICAgICB2YXIgZGF0YVNpZ0J5dGVzID0gZGF0YS5zaWdCeXRlczsKCSAgICAgICAgICAgIHZhciBibG9ja1NpemUgPSB0aGlzLmJsb2NrU2l6ZTsKCSAgICAgICAgICAgIHZhciBibG9ja1NpemVCeXRlcyA9IGJsb2NrU2l6ZSAqIDQ7CgoJICAgICAgICAgICAgLy8gQ291bnQgYmxvY2tzIHJlYWR5CgkgICAgICAgICAgICB2YXIgbkJsb2Nrc1JlYWR5ID0gZGF0YVNpZ0J5dGVzIC8gYmxvY2tTaXplQnl0ZXM7CgkgICAgICAgICAgICBpZiAoZG9GbHVzaCkgewoJICAgICAgICAgICAgICAgIC8vIFJvdW5kIHVwIHRvIGluY2x1ZGUgcGFydGlhbCBibG9ja3MKCSAgICAgICAgICAgICAgICBuQmxvY2tzUmVhZHkgPSBNYXRoLmNlaWwobkJsb2Nrc1JlYWR5KTsKCSAgICAgICAgICAgIH0gZWxzZSB7CgkgICAgICAgICAgICAgICAgLy8gUm91bmQgZG93biB0byBpbmNsdWRlIG9ubHkgZnVsbCBibG9ja3MsCgkgICAgICAgICAgICAgICAgLy8gbGVzcyB0aGUgbnVtYmVyIG9mIGJsb2NrcyB0aGF0IG11c3QgcmVtYWluIGluIHRoZSBidWZmZXIKCSAgICAgICAgICAgICAgICBuQmxvY2tzUmVhZHkgPSBNYXRoLm1heCgobkJsb2Nrc1JlYWR5IHwgMCkgLSB0aGlzLl9taW5CdWZmZXJTaXplLCAwKTsKCSAgICAgICAgICAgIH0KCgkgICAgICAgICAgICAvLyBDb3VudCB3b3JkcyByZWFkeQoJICAgICAgICAgICAgdmFyIG5Xb3Jkc1JlYWR5ID0gbkJsb2Nrc1JlYWR5ICogYmxvY2tTaXplOwoKCSAgICAgICAgICAgIC8vIENvdW50IGJ5dGVzIHJlYWR5CgkgICAgICAgICAgICB2YXIgbkJ5dGVzUmVhZHkgPSBNYXRoLm1pbihuV29yZHNSZWFkeSAqIDQsIGRhdGFTaWdCeXRlcyk7CgoJICAgICAgICAgICAgLy8gUHJvY2VzcyBibG9ja3MKCSAgICAgICAgICAgIGlmIChuV29yZHNSZWFkeSkgewoJICAgICAgICAgICAgICAgIGZvciAodmFyIG9mZnNldCA9IDA7IG9mZnNldCA8IG5Xb3Jkc1JlYWR5OyBvZmZzZXQgKz0gYmxvY2tTaXplKSB7CgkgICAgICAgICAgICAgICAgICAgIC8vIFBlcmZvcm0gY29uY3JldGUtYWxnb3JpdGhtIGxvZ2ljCgkgICAgICAgICAgICAgICAgICAgIHRoaXMuX2RvUHJvY2Vzc0Jsb2NrKGRhdGFXb3Jkcywgb2Zmc2V0KTsKCSAgICAgICAgICAgICAgICB9CgoJICAgICAgICAgICAgICAgIC8vIFJlbW92ZSBwcm9jZXNzZWQgd29yZHMKCSAgICAgICAgICAgICAgICB2YXIgcHJvY2Vzc2VkV29yZHMgPSBkYXRhV29yZHMuc3BsaWNlKDAsIG5Xb3Jkc1JlYWR5KTsKCSAgICAgICAgICAgICAgICBkYXRhLnNpZ0J5dGVzIC09IG5CeXRlc1JlYWR5OwoJICAgICAgICAgICAgfQoKCSAgICAgICAgICAgIC8vIFJldHVybiBwcm9jZXNzZWQgd29yZHMKCSAgICAgICAgICAgIHJldHVybiBuZXcgV29yZEFycmF5LmluaXQocHJvY2Vzc2VkV29yZHMsIG5CeXRlc1JlYWR5KTsKCSAgICAgICAgfSwKCgkgICAgICAgIC8qKgoJICAgICAgICAgKiBDcmVhdGVzIGEgY29weSBvZiB0aGlzIG9iamVjdC4KCSAgICAgICAgICoKCSAgICAgICAgICogQHJldHVybiB7T2JqZWN0fSBUaGUgY2xvbmUuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAqCgkgICAgICAgICAqICAgICB2YXIgY2xvbmUgPSBidWZmZXJlZEJsb2NrQWxnb3JpdGhtLmNsb25lKCk7CgkgICAgICAgICAqLwoJICAgICAgICBjbG9uZTogZnVuY3Rpb24gKCkgewoJICAgICAgICAgICAgdmFyIGNsb25lID0gQmFzZS5jbG9uZS5jYWxsKHRoaXMpOwoJICAgICAgICAgICAgY2xvbmUuX2RhdGEgPSB0aGlzLl9kYXRhLmNsb25lKCk7CgoJICAgICAgICAgICAgcmV0dXJuIGNsb25lOwoJICAgICAgICB9LAoKCSAgICAgICAgX21pbkJ1ZmZlclNpemU6IDAKCSAgICB9KTsKCgkgICAgLyoqCgkgICAgICogQWJzdHJhY3QgaGFzaGVyIHRlbXBsYXRlLgoJICAgICAqCgkgICAgICogQHByb3BlcnR5IHtudW1iZXJ9IGJsb2NrU2l6ZSBUaGUgbnVtYmVyIG9mIDMyLWJpdCB3b3JkcyB0aGlzIGhhc2hlciBvcGVyYXRlcyBvbi4gRGVmYXVsdDogMTYgKDUxMiBiaXRzKQoJICAgICAqLwoJICAgIHZhciBIYXNoZXIgPSBDX2xpYi5IYXNoZXIgPSBCdWZmZXJlZEJsb2NrQWxnb3JpdGhtLmV4dGVuZCh7CgkgICAgICAgIC8qKgoJICAgICAgICAgKiBDb25maWd1cmF0aW9uIG9wdGlvbnMuCgkgICAgICAgICAqLwoJICAgICAgICBjZmc6IEJhc2UuZXh0ZW5kKCksCgoJICAgICAgICAvKioKCSAgICAgICAgICogSW5pdGlhbGl6ZXMgYSBuZXdseSBjcmVhdGVkIGhhc2hlci4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGNmZyAoT3B0aW9uYWwpIFRoZSBjb25maWd1cmF0aW9uIG9wdGlvbnMgdG8gdXNlIGZvciB0aGlzIGhhc2ggY29tcHV0YXRpb24uCgkgICAgICAgICAqCgkgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAqCgkgICAgICAgICAqICAgICB2YXIgaGFzaGVyID0gQ3J5cHRvSlMuYWxnby5TSEEyNTYuY3JlYXRlKCk7CgkgICAgICAgICAqLwoJICAgICAgICBpbml0OiBmdW5jdGlvbiAoY2ZnKSB7CgkgICAgICAgICAgICAvLyBBcHBseSBjb25maWcgZGVmYXVsdHMKCSAgICAgICAgICAgIHRoaXMuY2ZnID0gdGhpcy5jZmcuZXh0ZW5kKGNmZyk7CgoJICAgICAgICAgICAgLy8gU2V0IGluaXRpYWwgdmFsdWVzCgkgICAgICAgICAgICB0aGlzLnJlc2V0KCk7CgkgICAgICAgIH0sCgoJICAgICAgICAvKioKCSAgICAgICAgICogUmVzZXRzIHRoaXMgaGFzaGVyIHRvIGl0cyBpbml0aWFsIHN0YXRlLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgaGFzaGVyLnJlc2V0KCk7CgkgICAgICAgICAqLwoJICAgICAgICByZXNldDogZnVuY3Rpb24gKCkgewoJICAgICAgICAgICAgLy8gUmVzZXQgZGF0YSBidWZmZXIKCSAgICAgICAgICAgIEJ1ZmZlcmVkQmxvY2tBbGdvcml0aG0ucmVzZXQuY2FsbCh0aGlzKTsKCgkgICAgICAgICAgICAvLyBQZXJmb3JtIGNvbmNyZXRlLWhhc2hlciBsb2dpYwoJICAgICAgICAgICAgdGhpcy5fZG9SZXNldCgpOwoJICAgICAgICB9LAoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIFVwZGF0ZXMgdGhpcyBoYXNoZXIgd2l0aCBhIG1lc3NhZ2UuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30gbWVzc2FnZVVwZGF0ZSBUaGUgbWVzc2FnZSB0byBhcHBlbmQuCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge0hhc2hlcn0gVGhpcyBoYXNoZXIuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAqCgkgICAgICAgICAqICAgICBoYXNoZXIudXBkYXRlKCdtZXNzYWdlJyk7CgkgICAgICAgICAqICAgICBoYXNoZXIudXBkYXRlKHdvcmRBcnJheSk7CgkgICAgICAgICAqLwoJICAgICAgICB1cGRhdGU6IGZ1bmN0aW9uIChtZXNzYWdlVXBkYXRlKSB7CgkgICAgICAgICAgICAvLyBBcHBlbmQKCSAgICAgICAgICAgIHRoaXMuX2FwcGVuZChtZXNzYWdlVXBkYXRlKTsKCgkgICAgICAgICAgICAvLyBVcGRhdGUgdGhlIGhhc2gKCSAgICAgICAgICAgIHRoaXMuX3Byb2Nlc3MoKTsKCgkgICAgICAgICAgICAvLyBDaGFpbmFibGUKCSAgICAgICAgICAgIHJldHVybiB0aGlzOwoJICAgICAgICB9LAoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIEZpbmFsaXplcyB0aGUgaGFzaCBjb21wdXRhdGlvbi4KCSAgICAgICAgICogTm90ZSB0aGF0IHRoZSBmaW5hbGl6ZSBvcGVyYXRpb24gaXMgZWZmZWN0aXZlbHkgYSBkZXN0cnVjdGl2ZSwgcmVhZC1vbmNlIG9wZXJhdGlvbi4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtXb3JkQXJyYXl8c3RyaW5nfSBtZXNzYWdlVXBkYXRlIChPcHRpb25hbCkgQSBmaW5hbCBtZXNzYWdlIHVwZGF0ZS4KCSAgICAgICAgICoKCSAgICAgICAgICogQHJldHVybiB7V29yZEFycmF5fSBUaGUgaGFzaC4KCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciBoYXNoID0gaGFzaGVyLmZpbmFsaXplKCk7CgkgICAgICAgICAqICAgICB2YXIgaGFzaCA9IGhhc2hlci5maW5hbGl6ZSgnbWVzc2FnZScpOwoJICAgICAgICAgKiAgICAgdmFyIGhhc2ggPSBoYXNoZXIuZmluYWxpemUod29yZEFycmF5KTsKCSAgICAgICAgICovCgkgICAgICAgIGZpbmFsaXplOiBmdW5jdGlvbiAobWVzc2FnZVVwZGF0ZSkgewoJICAgICAgICAgICAgLy8gRmluYWwgbWVzc2FnZSB1cGRhdGUKCSAgICAgICAgICAgIGlmIChtZXNzYWdlVXBkYXRlKSB7CgkgICAgICAgICAgICAgICAgdGhpcy5fYXBwZW5kKG1lc3NhZ2VVcGRhdGUpOwoJICAgICAgICAgICAgfQoKCSAgICAgICAgICAgIC8vIFBlcmZvcm0gY29uY3JldGUtaGFzaGVyIGxvZ2ljCgkgICAgICAgICAgICB2YXIgaGFzaCA9IHRoaXMuX2RvRmluYWxpemUoKTsKCgkgICAgICAgICAgICByZXR1cm4gaGFzaDsKCSAgICAgICAgfSwKCgkgICAgICAgIGJsb2NrU2l6ZTogNTEyLzMyLAoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIENyZWF0ZXMgYSBzaG9ydGN1dCBmdW5jdGlvbiB0byBhIGhhc2hlcidzIG9iamVjdCBpbnRlcmZhY2UuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBwYXJhbSB7SGFzaGVyfSBoYXNoZXIgVGhlIGhhc2hlciB0byBjcmVhdGUgYSBoZWxwZXIgZm9yLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcmV0dXJuIHtGdW5jdGlvbn0gVGhlIHNob3J0Y3V0IGZ1bmN0aW9uLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAc3RhdGljCgkgICAgICAgICAqCgkgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAqCgkgICAgICAgICAqICAgICB2YXIgU0hBMjU2ID0gQ3J5cHRvSlMubGliLkhhc2hlci5fY3JlYXRlSGVscGVyKENyeXB0b0pTLmFsZ28uU0hBMjU2KTsKCSAgICAgICAgICovCgkgICAgICAgIF9jcmVhdGVIZWxwZXI6IGZ1bmN0aW9uIChoYXNoZXIpIHsKCSAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAobWVzc2FnZSwgY2ZnKSB7CgkgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBoYXNoZXIuaW5pdChjZmcpLmZpbmFsaXplKG1lc3NhZ2UpOwoJICAgICAgICAgICAgfTsKCSAgICAgICAgfSwKCgkgICAgICAgIC8qKgoJICAgICAgICAgKiBDcmVhdGVzIGEgc2hvcnRjdXQgZnVuY3Rpb24gdG8gdGhlIEhNQUMncyBvYmplY3QgaW50ZXJmYWNlLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcGFyYW0ge0hhc2hlcn0gaGFzaGVyIFRoZSBoYXNoZXIgdG8gdXNlIGluIHRoaXMgSE1BQyBoZWxwZXIuCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge0Z1bmN0aW9ufSBUaGUgc2hvcnRjdXQgZnVuY3Rpb24uCgkgICAgICAgICAqCgkgICAgICAgICAqIEBzdGF0aWMKCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciBIbWFjU0hBMjU2ID0gQ3J5cHRvSlMubGliLkhhc2hlci5fY3JlYXRlSG1hY0hlbHBlcihDcnlwdG9KUy5hbGdvLlNIQTI1Nik7CgkgICAgICAgICAqLwoJICAgICAgICBfY3JlYXRlSG1hY0hlbHBlcjogZnVuY3Rpb24gKGhhc2hlcikgewoJICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChtZXNzYWdlLCBrZXkpIHsKCSAgICAgICAgICAgICAgICByZXR1cm4gbmV3IENfYWxnby5ITUFDLmluaXQoaGFzaGVyLCBrZXkpLmZpbmFsaXplKG1lc3NhZ2UpOwoJICAgICAgICAgICAgfTsKCSAgICAgICAgfQoJICAgIH0pOwoKCSAgICAvKioKCSAgICAgKiBBbGdvcml0aG0gbmFtZXNwYWNlLgoJICAgICAqLwoJICAgIHZhciBDX2FsZ28gPSBDLmFsZ28gPSB7fTsKCgkgICAgcmV0dXJuIEM7Cgl9KE1hdGgpKTsKCgoJKGZ1bmN0aW9uICgpIHsKCSAgICAvLyBTaG9ydGN1dHMKCSAgICB2YXIgQyA9IENyeXB0b0pTOwoJICAgIHZhciBDX2xpYiA9IEMubGliOwoJICAgIHZhciBXb3JkQXJyYXkgPSBDX2xpYi5Xb3JkQXJyYXk7CgkgICAgdmFyIENfZW5jID0gQy5lbmM7CgoJICAgIC8qKgoJICAgICAqIEJhc2U2NCBlbmNvZGluZyBzdHJhdGVneS4KCSAgICAgKi8KCSAgICB2YXIgQmFzZTY0ID0gQ19lbmMuQmFzZTY0ID0gewoJICAgICAgICAvKioKCSAgICAgICAgICogQ29udmVydHMgYSB3b3JkIGFycmF5IHRvIGEgQmFzZTY0IHN0cmluZy4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtXb3JkQXJyYXl9IHdvcmRBcnJheSBUaGUgd29yZCBhcnJheS4KCSAgICAgICAgICoKCSAgICAgICAgICogQHJldHVybiB7c3RyaW5nfSBUaGUgQmFzZTY0IHN0cmluZy4KCSAgICAgICAgICoKCSAgICAgICAgICogQHN0YXRpYwoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIGJhc2U2NFN0cmluZyA9IENyeXB0b0pTLmVuYy5CYXNlNjQuc3RyaW5naWZ5KHdvcmRBcnJheSk7CgkgICAgICAgICAqLwoJICAgICAgICBzdHJpbmdpZnk6IGZ1bmN0aW9uICh3b3JkQXJyYXkpIHsKCSAgICAgICAgICAgIC8vIFNob3J0Y3V0cwoJICAgICAgICAgICAgdmFyIHdvcmRzID0gd29yZEFycmF5LndvcmRzOwoJICAgICAgICAgICAgdmFyIHNpZ0J5dGVzID0gd29yZEFycmF5LnNpZ0J5dGVzOwoJICAgICAgICAgICAgdmFyIG1hcCA9IHRoaXMuX21hcDsKCgkgICAgICAgICAgICAvLyBDbGFtcCBleGNlc3MgYml0cwoJICAgICAgICAgICAgd29yZEFycmF5LmNsYW1wKCk7CgoJICAgICAgICAgICAgLy8gQ29udmVydAoJICAgICAgICAgICAgdmFyIGJhc2U2NENoYXJzID0gW107CgkgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNpZ0J5dGVzOyBpICs9IDMpIHsKCSAgICAgICAgICAgICAgICB2YXIgYnl0ZTEgPSAod29yZHNbaSA+Pj4gMl0gICAgICAgPj4+ICgyNCAtIChpICUgNCkgKiA4KSkgICAgICAgJiAweGZmOwoJICAgICAgICAgICAgICAgIHZhciBieXRlMiA9ICh3b3Jkc1soaSArIDEpID4+PiAyXSA+Pj4gKDI0IC0gKChpICsgMSkgJSA0KSAqIDgpKSAmIDB4ZmY7CgkgICAgICAgICAgICAgICAgdmFyIGJ5dGUzID0gKHdvcmRzWyhpICsgMikgPj4+IDJdID4+PiAoMjQgLSAoKGkgKyAyKSAlIDQpICogOCkpICYgMHhmZjsKCgkgICAgICAgICAgICAgICAgdmFyIHRyaXBsZXQgPSAoYnl0ZTEgPDwgMTYpIHwgKGJ5dGUyIDw8IDgpIHwgYnl0ZTM7CgoJICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyAoaiA8IDQpICYmIChpICsgaiAqIDAuNzUgPCBzaWdCeXRlcyk7IGorKykgewoJICAgICAgICAgICAgICAgICAgICBiYXNlNjRDaGFycy5wdXNoKG1hcC5jaGFyQXQoKHRyaXBsZXQgPj4+ICg2ICogKDMgLSBqKSkpICYgMHgzZikpOwoJICAgICAgICAgICAgICAgIH0KCSAgICAgICAgICAgIH0KCgkgICAgICAgICAgICAvLyBBZGQgcGFkZGluZwoJICAgICAgICAgICAgdmFyIHBhZGRpbmdDaGFyID0gbWFwLmNoYXJBdCg2NCk7CgkgICAgICAgICAgICBpZiAocGFkZGluZ0NoYXIpIHsKCSAgICAgICAgICAgICAgICB3aGlsZSAoYmFzZTY0Q2hhcnMubGVuZ3RoICUgNCkgewoJICAgICAgICAgICAgICAgICAgICBiYXNlNjRDaGFycy5wdXNoKHBhZGRpbmdDaGFyKTsKCSAgICAgICAgICAgICAgICB9CgkgICAgICAgICAgICB9CgoJICAgICAgICAgICAgcmV0dXJuIGJhc2U2NENoYXJzLmpvaW4oJycpOwoJICAgICAgICB9LAoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIENvbnZlcnRzIGEgQmFzZTY0IHN0cmluZyB0byBhIHdvcmQgYXJyYXkuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlNjRTdHIgVGhlIEJhc2U2NCBzdHJpbmcuCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge1dvcmRBcnJheX0gVGhlIHdvcmQgYXJyYXkuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBzdGF0aWMKCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciB3b3JkQXJyYXkgPSBDcnlwdG9KUy5lbmMuQmFzZTY0LnBhcnNlKGJhc2U2NFN0cmluZyk7CgkgICAgICAgICAqLwoJICAgICAgICBwYXJzZTogZnVuY3Rpb24gKGJhc2U2NFN0cikgewoJICAgICAgICAgICAgLy8gU2hvcnRjdXRzCgkgICAgICAgICAgICB2YXIgYmFzZTY0U3RyTGVuZ3RoID0gYmFzZTY0U3RyLmxlbmd0aDsKCSAgICAgICAgICAgIHZhciBtYXAgPSB0aGlzLl9tYXA7CgkgICAgICAgICAgICB2YXIgcmV2ZXJzZU1hcCA9IHRoaXMuX3JldmVyc2VNYXA7CgoJICAgICAgICAgICAgaWYgKCFyZXZlcnNlTWFwKSB7CgkgICAgICAgICAgICAgICAgICAgIHJldmVyc2VNYXAgPSB0aGlzLl9yZXZlcnNlTWFwID0gW107CgkgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgbWFwLmxlbmd0aDsgaisrKSB7CgkgICAgICAgICAgICAgICAgICAgICAgICByZXZlcnNlTWFwW21hcC5jaGFyQ29kZUF0KGopXSA9IGo7CgkgICAgICAgICAgICAgICAgICAgIH0KCSAgICAgICAgICAgIH0KCgkgICAgICAgICAgICAvLyBJZ25vcmUgcGFkZGluZwoJICAgICAgICAgICAgdmFyIHBhZGRpbmdDaGFyID0gbWFwLmNoYXJBdCg2NCk7CgkgICAgICAgICAgICBpZiAocGFkZGluZ0NoYXIpIHsKCSAgICAgICAgICAgICAgICB2YXIgcGFkZGluZ0luZGV4ID0gYmFzZTY0U3RyLmluZGV4T2YocGFkZGluZ0NoYXIpOwoJICAgICAgICAgICAgICAgIGlmIChwYWRkaW5nSW5kZXggIT09IC0xKSB7CgkgICAgICAgICAgICAgICAgICAgIGJhc2U2NFN0ckxlbmd0aCA9IHBhZGRpbmdJbmRleDsKCSAgICAgICAgICAgICAgICB9CgkgICAgICAgICAgICB9CgoJICAgICAgICAgICAgLy8gQ29udmVydAoJICAgICAgICAgICAgcmV0dXJuIHBhcnNlTG9vcChiYXNlNjRTdHIsIGJhc2U2NFN0ckxlbmd0aCwgcmV2ZXJzZU1hcCk7CgoJICAgICAgICB9LAoKCSAgICAgICAgX21hcDogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky89JwoJICAgIH07CgoJICAgIGZ1bmN0aW9uIHBhcnNlTG9vcChiYXNlNjRTdHIsIGJhc2U2NFN0ckxlbmd0aCwgcmV2ZXJzZU1hcCkgewoJICAgICAgdmFyIHdvcmRzID0gW107CgkgICAgICB2YXIgbkJ5dGVzID0gMDsKCSAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYmFzZTY0U3RyTGVuZ3RoOyBpKyspIHsKCSAgICAgICAgICBpZiAoaSAlIDQpIHsKCSAgICAgICAgICAgICAgdmFyIGJpdHMxID0gcmV2ZXJzZU1hcFtiYXNlNjRTdHIuY2hhckNvZGVBdChpIC0gMSldIDw8ICgoaSAlIDQpICogMik7CgkgICAgICAgICAgICAgIHZhciBiaXRzMiA9IHJldmVyc2VNYXBbYmFzZTY0U3RyLmNoYXJDb2RlQXQoaSldID4+PiAoNiAtIChpICUgNCkgKiAyKTsKCSAgICAgICAgICAgICAgd29yZHNbbkJ5dGVzID4+PiAyXSB8PSAoYml0czEgfCBiaXRzMikgPDwgKDI0IC0gKG5CeXRlcyAlIDQpICogOCk7CgkgICAgICAgICAgICAgIG5CeXRlcysrOwoJICAgICAgICAgIH0KCSAgICAgIH0KCSAgICAgIHJldHVybiBXb3JkQXJyYXkuY3JlYXRlKHdvcmRzLCBuQnl0ZXMpOwoJICAgIH0KCX0oKSk7CgoKCShmdW5jdGlvbiAoTWF0aCkgewoJICAgIC8vIFNob3J0Y3V0cwoJICAgIHZhciBDID0gQ3J5cHRvSlM7CgkgICAgdmFyIENfbGliID0gQy5saWI7CgkgICAgdmFyIFdvcmRBcnJheSA9IENfbGliLldvcmRBcnJheTsKCSAgICB2YXIgSGFzaGVyID0gQ19saWIuSGFzaGVyOwoJICAgIHZhciBDX2FsZ28gPSBDLmFsZ287CgoJICAgIC8vIENvbnN0YW50cyB0YWJsZQoJICAgIHZhciBUID0gW107CgoJICAgIC8vIENvbXB1dGUgY29uc3RhbnRzCgkgICAgKGZ1bmN0aW9uICgpIHsKCSAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA2NDsgaSsrKSB7CgkgICAgICAgICAgICBUW2ldID0gKE1hdGguYWJzKE1hdGguc2luKGkgKyAxKSkgKiAweDEwMDAwMDAwMCkgfCAwOwoJICAgICAgICB9CgkgICAgfSgpKTsKCgkgICAgLyoqCgkgICAgICogTUQ1IGhhc2ggYWxnb3JpdGhtLgoJICAgICAqLwoJICAgIHZhciBNRDUgPSBDX2FsZ28uTUQ1ID0gSGFzaGVyLmV4dGVuZCh7CgkgICAgICAgIF9kb1Jlc2V0OiBmdW5jdGlvbiAoKSB7CgkgICAgICAgICAgICB0aGlzLl9oYXNoID0gbmV3IFdvcmRBcnJheS5pbml0KFsKCSAgICAgICAgICAgICAgICAweDY3NDUyMzAxLCAweGVmY2RhYjg5LAoJICAgICAgICAgICAgICAgIDB4OThiYWRjZmUsIDB4MTAzMjU0NzYKCSAgICAgICAgICAgIF0pOwoJICAgICAgICB9LAoKCSAgICAgICAgX2RvUHJvY2Vzc0Jsb2NrOiBmdW5jdGlvbiAoTSwgb2Zmc2V0KSB7CgkgICAgICAgICAgICAvLyBTd2FwIGVuZGlhbgoJICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxNjsgaSsrKSB7CgkgICAgICAgICAgICAgICAgLy8gU2hvcnRjdXRzCgkgICAgICAgICAgICAgICAgdmFyIG9mZnNldF9pID0gb2Zmc2V0ICsgaTsKCSAgICAgICAgICAgICAgICB2YXIgTV9vZmZzZXRfaSA9IE1bb2Zmc2V0X2ldOwoKCSAgICAgICAgICAgICAgICBNW29mZnNldF9pXSA9ICgKCSAgICAgICAgICAgICAgICAgICAgKCgoTV9vZmZzZXRfaSA8PCA4KSAgfCAoTV9vZmZzZXRfaSA+Pj4gMjQpKSAmIDB4MDBmZjAwZmYpIHwKCSAgICAgICAgICAgICAgICAgICAgKCgoTV9vZmZzZXRfaSA8PCAyNCkgfCAoTV9vZmZzZXRfaSA+Pj4gOCkpICAmIDB4ZmYwMGZmMDApCgkgICAgICAgICAgICAgICAgKTsKCSAgICAgICAgICAgIH0KCgkgICAgICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgICAgIHZhciBIID0gdGhpcy5faGFzaC53b3JkczsKCgkgICAgICAgICAgICB2YXIgTV9vZmZzZXRfMCAgPSBNW29mZnNldCArIDBdOwoJICAgICAgICAgICAgdmFyIE1fb2Zmc2V0XzEgID0gTVtvZmZzZXQgKyAxXTsKCSAgICAgICAgICAgIHZhciBNX29mZnNldF8yICA9IE1bb2Zmc2V0ICsgMl07CgkgICAgICAgICAgICB2YXIgTV9vZmZzZXRfMyAgPSBNW29mZnNldCArIDNdOwoJICAgICAgICAgICAgdmFyIE1fb2Zmc2V0XzQgID0gTVtvZmZzZXQgKyA0XTsKCSAgICAgICAgICAgIHZhciBNX29mZnNldF81ICA9IE1bb2Zmc2V0ICsgNV07CgkgICAgICAgICAgICB2YXIgTV9vZmZzZXRfNiAgPSBNW29mZnNldCArIDZdOwoJICAgICAgICAgICAgdmFyIE1fb2Zmc2V0XzcgID0gTVtvZmZzZXQgKyA3XTsKCSAgICAgICAgICAgIHZhciBNX29mZnNldF84ICA9IE1bb2Zmc2V0ICsgOF07CgkgICAgICAgICAgICB2YXIgTV9vZmZzZXRfOSAgPSBNW29mZnNldCArIDldOwoJICAgICAgICAgICAgdmFyIE1fb2Zmc2V0XzEwID0gTVtvZmZzZXQgKyAxMF07CgkgICAgICAgICAgICB2YXIgTV9vZmZzZXRfMTEgPSBNW29mZnNldCArIDExXTsKCSAgICAgICAgICAgIHZhciBNX29mZnNldF8xMiA9IE1bb2Zmc2V0ICsgMTJdOwoJICAgICAgICAgICAgdmFyIE1fb2Zmc2V0XzEzID0gTVtvZmZzZXQgKyAxM107CgkgICAgICAgICAgICB2YXIgTV9vZmZzZXRfMTQgPSBNW29mZnNldCArIDE0XTsKCSAgICAgICAgICAgIHZhciBNX29mZnNldF8xNSA9IE1bb2Zmc2V0ICsgMTVdOwoKCSAgICAgICAgICAgIC8vIFdvcmtpbmcgdmFyaWFsYmVzCgkgICAgICAgICAgICB2YXIgYSA9IEhbMF07CgkgICAgICAgICAgICB2YXIgYiA9IEhbMV07CgkgICAgICAgICAgICB2YXIgYyA9IEhbMl07CgkgICAgICAgICAgICB2YXIgZCA9IEhbM107CgoJICAgICAgICAgICAgLy8gQ29tcHV0YXRpb24KCSAgICAgICAgICAgIGEgPSBGRihhLCBiLCBjLCBkLCBNX29mZnNldF8wLCAgNywgIFRbMF0pOwoJICAgICAgICAgICAgZCA9IEZGKGQsIGEsIGIsIGMsIE1fb2Zmc2V0XzEsICAxMiwgVFsxXSk7CgkgICAgICAgICAgICBjID0gRkYoYywgZCwgYSwgYiwgTV9vZmZzZXRfMiwgIDE3LCBUWzJdKTsKCSAgICAgICAgICAgIGIgPSBGRihiLCBjLCBkLCBhLCBNX29mZnNldF8zLCAgMjIsIFRbM10pOwoJICAgICAgICAgICAgYSA9IEZGKGEsIGIsIGMsIGQsIE1fb2Zmc2V0XzQsICA3LCAgVFs0XSk7CgkgICAgICAgICAgICBkID0gRkYoZCwgYSwgYiwgYywgTV9vZmZzZXRfNSwgIDEyLCBUWzVdKTsKCSAgICAgICAgICAgIGMgPSBGRihjLCBkLCBhLCBiLCBNX29mZnNldF82LCAgMTcsIFRbNl0pOwoJICAgICAgICAgICAgYiA9IEZGKGIsIGMsIGQsIGEsIE1fb2Zmc2V0XzcsICAyMiwgVFs3XSk7CgkgICAgICAgICAgICBhID0gRkYoYSwgYiwgYywgZCwgTV9vZmZzZXRfOCwgIDcsICBUWzhdKTsKCSAgICAgICAgICAgIGQgPSBGRihkLCBhLCBiLCBjLCBNX29mZnNldF85LCAgMTIsIFRbOV0pOwoJICAgICAgICAgICAgYyA9IEZGKGMsIGQsIGEsIGIsIE1fb2Zmc2V0XzEwLCAxNywgVFsxMF0pOwoJICAgICAgICAgICAgYiA9IEZGKGIsIGMsIGQsIGEsIE1fb2Zmc2V0XzExLCAyMiwgVFsxMV0pOwoJICAgICAgICAgICAgYSA9IEZGKGEsIGIsIGMsIGQsIE1fb2Zmc2V0XzEyLCA3LCAgVFsxMl0pOwoJICAgICAgICAgICAgZCA9IEZGKGQsIGEsIGIsIGMsIE1fb2Zmc2V0XzEzLCAxMiwgVFsxM10pOwoJICAgICAgICAgICAgYyA9IEZGKGMsIGQsIGEsIGIsIE1fb2Zmc2V0XzE0LCAxNywgVFsxNF0pOwoJICAgICAgICAgICAgYiA9IEZGKGIsIGMsIGQsIGEsIE1fb2Zmc2V0XzE1LCAyMiwgVFsxNV0pOwoKCSAgICAgICAgICAgIGEgPSBHRyhhLCBiLCBjLCBkLCBNX29mZnNldF8xLCAgNSwgIFRbMTZdKTsKCSAgICAgICAgICAgIGQgPSBHRyhkLCBhLCBiLCBjLCBNX29mZnNldF82LCAgOSwgIFRbMTddKTsKCSAgICAgICAgICAgIGMgPSBHRyhjLCBkLCBhLCBiLCBNX29mZnNldF8xMSwgMTQsIFRbMThdKTsKCSAgICAgICAgICAgIGIgPSBHRyhiLCBjLCBkLCBhLCBNX29mZnNldF8wLCAgMjAsIFRbMTldKTsKCSAgICAgICAgICAgIGEgPSBHRyhhLCBiLCBjLCBkLCBNX29mZnNldF81LCAgNSwgIFRbMjBdKTsKCSAgICAgICAgICAgIGQgPSBHRyhkLCBhLCBiLCBjLCBNX29mZnNldF8xMCwgOSwgIFRbMjFdKTsKCSAgICAgICAgICAgIGMgPSBHRyhjLCBkLCBhLCBiLCBNX29mZnNldF8xNSwgMTQsIFRbMjJdKTsKCSAgICAgICAgICAgIGIgPSBHRyhiLCBjLCBkLCBhLCBNX29mZnNldF80LCAgMjAsIFRbMjNdKTsKCSAgICAgICAgICAgIGEgPSBHRyhhLCBiLCBjLCBkLCBNX29mZnNldF85LCAgNSwgIFRbMjRdKTsKCSAgICAgICAgICAgIGQgPSBHRyhkLCBhLCBiLCBjLCBNX29mZnNldF8xNCwgOSwgIFRbMjVdKTsKCSAgICAgICAgICAgIGMgPSBHRyhjLCBkLCBhLCBiLCBNX29mZnNldF8zLCAgMTQsIFRbMjZdKTsKCSAgICAgICAgICAgIGIgPSBHRyhiLCBjLCBkLCBhLCBNX29mZnNldF84LCAgMjAsIFRbMjddKTsKCSAgICAgICAgICAgIGEgPSBHRyhhLCBiLCBjLCBkLCBNX29mZnNldF8xMywgNSwgIFRbMjhdKTsKCSAgICAgICAgICAgIGQgPSBHRyhkLCBhLCBiLCBjLCBNX29mZnNldF8yLCAgOSwgIFRbMjldKTsKCSAgICAgICAgICAgIGMgPSBHRyhjLCBkLCBhLCBiLCBNX29mZnNldF83LCAgMTQsIFRbMzBdKTsKCSAgICAgICAgICAgIGIgPSBHRyhiLCBjLCBkLCBhLCBNX29mZnNldF8xMiwgMjAsIFRbMzFdKTsKCgkgICAgICAgICAgICBhID0gSEgoYSwgYiwgYywgZCwgTV9vZmZzZXRfNSwgIDQsICBUWzMyXSk7CgkgICAgICAgICAgICBkID0gSEgoZCwgYSwgYiwgYywgTV9vZmZzZXRfOCwgIDExLCBUWzMzXSk7CgkgICAgICAgICAgICBjID0gSEgoYywgZCwgYSwgYiwgTV9vZmZzZXRfMTEsIDE2LCBUWzM0XSk7CgkgICAgICAgICAgICBiID0gSEgoYiwgYywgZCwgYSwgTV9vZmZzZXRfMTQsIDIzLCBUWzM1XSk7CgkgICAgICAgICAgICBhID0gSEgoYSwgYiwgYywgZCwgTV9vZmZzZXRfMSwgIDQsICBUWzM2XSk7CgkgICAgICAgICAgICBkID0gSEgoZCwgYSwgYiwgYywgTV9vZmZzZXRfNCwgIDExLCBUWzM3XSk7CgkgICAgICAgICAgICBjID0gSEgoYywgZCwgYSwgYiwgTV9vZmZzZXRfNywgIDE2LCBUWzM4XSk7CgkgICAgICAgICAgICBiID0gSEgoYiwgYywgZCwgYSwgTV9vZmZzZXRfMTAsIDIzLCBUWzM5XSk7CgkgICAgICAgICAgICBhID0gSEgoYSwgYiwgYywgZCwgTV9vZmZzZXRfMTMsIDQsICBUWzQwXSk7CgkgICAgICAgICAgICBkID0gSEgoZCwgYSwgYiwgYywgTV9vZmZzZXRfMCwgIDExLCBUWzQxXSk7CgkgICAgICAgICAgICBjID0gSEgoYywgZCwgYSwgYiwgTV9vZmZzZXRfMywgIDE2LCBUWzQyXSk7CgkgICAgICAgICAgICBiID0gSEgoYiwgYywgZCwgYSwgTV9vZmZzZXRfNiwgIDIzLCBUWzQzXSk7CgkgICAgICAgICAgICBhID0gSEgoYSwgYiwgYywgZCwgTV9vZmZzZXRfOSwgIDQsICBUWzQ0XSk7CgkgICAgICAgICAgICBkID0gSEgoZCwgYSwgYiwgYywgTV9vZmZzZXRfMTIsIDExLCBUWzQ1XSk7CgkgICAgICAgICAgICBjID0gSEgoYywgZCwgYSwgYiwgTV9vZmZzZXRfMTUsIDE2LCBUWzQ2XSk7CgkgICAgICAgICAgICBiID0gSEgoYiwgYywgZCwgYSwgTV9vZmZzZXRfMiwgIDIzLCBUWzQ3XSk7CgoJICAgICAgICAgICAgYSA9IElJKGEsIGIsIGMsIGQsIE1fb2Zmc2V0XzAsICA2LCAgVFs0OF0pOwoJICAgICAgICAgICAgZCA9IElJKGQsIGEsIGIsIGMsIE1fb2Zmc2V0XzcsICAxMCwgVFs0OV0pOwoJICAgICAgICAgICAgYyA9IElJKGMsIGQsIGEsIGIsIE1fb2Zmc2V0XzE0LCAxNSwgVFs1MF0pOwoJICAgICAgICAgICAgYiA9IElJKGIsIGMsIGQsIGEsIE1fb2Zmc2V0XzUsICAyMSwgVFs1MV0pOwoJICAgICAgICAgICAgYSA9IElJKGEsIGIsIGMsIGQsIE1fb2Zmc2V0XzEyLCA2LCAgVFs1Ml0pOwoJICAgICAgICAgICAgZCA9IElJKGQsIGEsIGIsIGMsIE1fb2Zmc2V0XzMsICAxMCwgVFs1M10pOwoJICAgICAgICAgICAgYyA9IElJKGMsIGQsIGEsIGIsIE1fb2Zmc2V0XzEwLCAxNSwgVFs1NF0pOwoJICAgICAgICAgICAgYiA9IElJKGIsIGMsIGQsIGEsIE1fb2Zmc2V0XzEsICAyMSwgVFs1NV0pOwoJICAgICAgICAgICAgYSA9IElJKGEsIGIsIGMsIGQsIE1fb2Zmc2V0XzgsICA2LCAgVFs1Nl0pOwoJICAgICAgICAgICAgZCA9IElJKGQsIGEsIGIsIGMsIE1fb2Zmc2V0XzE1LCAxMCwgVFs1N10pOwoJICAgICAgICAgICAgYyA9IElJKGMsIGQsIGEsIGIsIE1fb2Zmc2V0XzYsICAxNSwgVFs1OF0pOwoJICAgICAgICAgICAgYiA9IElJKGIsIGMsIGQsIGEsIE1fb2Zmc2V0XzEzLCAyMSwgVFs1OV0pOwoJICAgICAgICAgICAgYSA9IElJKGEsIGIsIGMsIGQsIE1fb2Zmc2V0XzQsICA2LCAgVFs2MF0pOwoJICAgICAgICAgICAgZCA9IElJKGQsIGEsIGIsIGMsIE1fb2Zmc2V0XzExLCAxMCwgVFs2MV0pOwoJICAgICAgICAgICAgYyA9IElJKGMsIGQsIGEsIGIsIE1fb2Zmc2V0XzIsICAxNSwgVFs2Ml0pOwoJICAgICAgICAgICAgYiA9IElJKGIsIGMsIGQsIGEsIE1fb2Zmc2V0XzksICAyMSwgVFs2M10pOwoKCSAgICAgICAgICAgIC8vIEludGVybWVkaWF0ZSBoYXNoIHZhbHVlCgkgICAgICAgICAgICBIWzBdID0gKEhbMF0gKyBhKSB8IDA7CgkgICAgICAgICAgICBIWzFdID0gKEhbMV0gKyBiKSB8IDA7CgkgICAgICAgICAgICBIWzJdID0gKEhbMl0gKyBjKSB8IDA7CgkgICAgICAgICAgICBIWzNdID0gKEhbM10gKyBkKSB8IDA7CgkgICAgICAgIH0sCgoJICAgICAgICBfZG9GaW5hbGl6ZTogZnVuY3Rpb24gKCkgewoJICAgICAgICAgICAgLy8gU2hvcnRjdXRzCgkgICAgICAgICAgICB2YXIgZGF0YSA9IHRoaXMuX2RhdGE7CgkgICAgICAgICAgICB2YXIgZGF0YVdvcmRzID0gZGF0YS53b3JkczsKCgkgICAgICAgICAgICB2YXIgbkJpdHNUb3RhbCA9IHRoaXMuX25EYXRhQnl0ZXMgKiA4OwoJICAgICAgICAgICAgdmFyIG5CaXRzTGVmdCA9IGRhdGEuc2lnQnl0ZXMgKiA4OwoKCSAgICAgICAgICAgIC8vIEFkZCBwYWRkaW5nCgkgICAgICAgICAgICBkYXRhV29yZHNbbkJpdHNMZWZ0ID4+PiA1XSB8PSAweDgwIDw8ICgyNCAtIG5CaXRzTGVmdCAlIDMyKTsKCgkgICAgICAgICAgICB2YXIgbkJpdHNUb3RhbEggPSBNYXRoLmZsb29yKG5CaXRzVG90YWwgLyAweDEwMDAwMDAwMCk7CgkgICAgICAgICAgICB2YXIgbkJpdHNUb3RhbEwgPSBuQml0c1RvdGFsOwoJICAgICAgICAgICAgZGF0YVdvcmRzWygoKG5CaXRzTGVmdCArIDY0KSA+Pj4gOSkgPDwgNCkgKyAxNV0gPSAoCgkgICAgICAgICAgICAgICAgKCgobkJpdHNUb3RhbEggPDwgOCkgIHwgKG5CaXRzVG90YWxIID4+PiAyNCkpICYgMHgwMGZmMDBmZikgfAoJICAgICAgICAgICAgICAgICgoKG5CaXRzVG90YWxIIDw8IDI0KSB8IChuQml0c1RvdGFsSCA+Pj4gOCkpICAmIDB4ZmYwMGZmMDApCgkgICAgICAgICAgICApOwoJICAgICAgICAgICAgZGF0YVdvcmRzWygoKG5CaXRzTGVmdCArIDY0KSA+Pj4gOSkgPDwgNCkgKyAxNF0gPSAoCgkgICAgICAgICAgICAgICAgKCgobkJpdHNUb3RhbEwgPDwgOCkgIHwgKG5CaXRzVG90YWxMID4+PiAyNCkpICYgMHgwMGZmMDBmZikgfAoJICAgICAgICAgICAgICAgICgoKG5CaXRzVG90YWxMIDw8IDI0KSB8IChuQml0c1RvdGFsTCA+Pj4gOCkpICAmIDB4ZmYwMGZmMDApCgkgICAgICAgICAgICApOwoKCSAgICAgICAgICAgIGRhdGEuc2lnQnl0ZXMgPSAoZGF0YVdvcmRzLmxlbmd0aCArIDEpICogNDsKCgkgICAgICAgICAgICAvLyBIYXNoIGZpbmFsIGJsb2NrcwoJICAgICAgICAgICAgdGhpcy5fcHJvY2VzcygpOwoKCSAgICAgICAgICAgIC8vIFNob3J0Y3V0cwoJICAgICAgICAgICAgdmFyIGhhc2ggPSB0aGlzLl9oYXNoOwoJICAgICAgICAgICAgdmFyIEggPSBoYXNoLndvcmRzOwoKCSAgICAgICAgICAgIC8vIFN3YXAgZW5kaWFuCgkgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDQ7IGkrKykgewoJICAgICAgICAgICAgICAgIC8vIFNob3J0Y3V0CgkgICAgICAgICAgICAgICAgdmFyIEhfaSA9IEhbaV07CgoJICAgICAgICAgICAgICAgIEhbaV0gPSAoKChIX2kgPDwgOCkgIHwgKEhfaSA+Pj4gMjQpKSAmIDB4MDBmZjAwZmYpIHwKCSAgICAgICAgICAgICAgICAgICAgICAgKCgoSF9pIDw8IDI0KSB8IChIX2kgPj4+IDgpKSAgJiAweGZmMDBmZjAwKTsKCSAgICAgICAgICAgIH0KCgkgICAgICAgICAgICAvLyBSZXR1cm4gZmluYWwgY29tcHV0ZWQgaGFzaAoJICAgICAgICAgICAgcmV0dXJuIGhhc2g7CgkgICAgICAgIH0sCgoJICAgICAgICBjbG9uZTogZnVuY3Rpb24gKCkgewoJICAgICAgICAgICAgdmFyIGNsb25lID0gSGFzaGVyLmNsb25lLmNhbGwodGhpcyk7CgkgICAgICAgICAgICBjbG9uZS5faGFzaCA9IHRoaXMuX2hhc2guY2xvbmUoKTsKCgkgICAgICAgICAgICByZXR1cm4gY2xvbmU7CgkgICAgICAgIH0KCSAgICB9KTsKCgkgICAgZnVuY3Rpb24gRkYoYSwgYiwgYywgZCwgeCwgcywgdCkgewoJICAgICAgICB2YXIgbiA9IGEgKyAoKGIgJiBjKSB8ICh+YiAmIGQpKSArIHggKyB0OwoJICAgICAgICByZXR1cm4gKChuIDw8IHMpIHwgKG4gPj4+ICgzMiAtIHMpKSkgKyBiOwoJICAgIH0KCgkgICAgZnVuY3Rpb24gR0coYSwgYiwgYywgZCwgeCwgcywgdCkgewoJICAgICAgICB2YXIgbiA9IGEgKyAoKGIgJiBkKSB8IChjICYgfmQpKSArIHggKyB0OwoJICAgICAgICByZXR1cm4gKChuIDw8IHMpIHwgKG4gPj4+ICgzMiAtIHMpKSkgKyBiOwoJICAgIH0KCgkgICAgZnVuY3Rpb24gSEgoYSwgYiwgYywgZCwgeCwgcywgdCkgewoJICAgICAgICB2YXIgbiA9IGEgKyAoYiBeIGMgXiBkKSArIHggKyB0OwoJICAgICAgICByZXR1cm4gKChuIDw8IHMpIHwgKG4gPj4+ICgzMiAtIHMpKSkgKyBiOwoJICAgIH0KCgkgICAgZnVuY3Rpb24gSUkoYSwgYiwgYywgZCwgeCwgcywgdCkgewoJICAgICAgICB2YXIgbiA9IGEgKyAoYyBeIChiIHwgfmQpKSArIHggKyB0OwoJICAgICAgICByZXR1cm4gKChuIDw8IHMpIHwgKG4gPj4+ICgzMiAtIHMpKSkgKyBiOwoJICAgIH0KCgkgICAgLyoqCgkgICAgICogU2hvcnRjdXQgZnVuY3Rpb24gdG8gdGhlIGhhc2hlcidzIG9iamVjdCBpbnRlcmZhY2UuCgkgICAgICoKCSAgICAgKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IG1lc3NhZ2UgVGhlIG1lc3NhZ2UgdG8gaGFzaC4KCSAgICAgKgoJICAgICAqIEByZXR1cm4ge1dvcmRBcnJheX0gVGhlIGhhc2guCgkgICAgICoKCSAgICAgKiBAc3RhdGljCgkgICAgICoKCSAgICAgKiBAZXhhbXBsZQoJICAgICAqCgkgICAgICogICAgIHZhciBoYXNoID0gQ3J5cHRvSlMuTUQ1KCdtZXNzYWdlJyk7CgkgICAgICogICAgIHZhciBoYXNoID0gQ3J5cHRvSlMuTUQ1KHdvcmRBcnJheSk7CgkgICAgICovCgkgICAgQy5NRDUgPSBIYXNoZXIuX2NyZWF0ZUhlbHBlcihNRDUpOwoKCSAgICAvKioKCSAgICAgKiBTaG9ydGN1dCBmdW5jdGlvbiB0byB0aGUgSE1BQydzIG9iamVjdCBpbnRlcmZhY2UuCgkgICAgICoKCSAgICAgKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IG1lc3NhZ2UgVGhlIG1lc3NhZ2UgdG8gaGFzaC4KCSAgICAgKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IGtleSBUaGUgc2VjcmV0IGtleS4KCSAgICAgKgoJICAgICAqIEByZXR1cm4ge1dvcmRBcnJheX0gVGhlIEhNQUMuCgkgICAgICoKCSAgICAgKiBAc3RhdGljCgkgICAgICoKCSAgICAgKiBAZXhhbXBsZQoJICAgICAqCgkgICAgICogICAgIHZhciBobWFjID0gQ3J5cHRvSlMuSG1hY01ENShtZXNzYWdlLCBrZXkpOwoJICAgICAqLwoJICAgIEMuSG1hY01ENSA9IEhhc2hlci5fY3JlYXRlSG1hY0hlbHBlcihNRDUpOwoJfShNYXRoKSk7CgoKCShmdW5jdGlvbiAoKSB7CgkgICAgLy8gU2hvcnRjdXRzCgkgICAgdmFyIEMgPSBDcnlwdG9KUzsKCSAgICB2YXIgQ19saWIgPSBDLmxpYjsKCSAgICB2YXIgV29yZEFycmF5ID0gQ19saWIuV29yZEFycmF5OwoJICAgIHZhciBIYXNoZXIgPSBDX2xpYi5IYXNoZXI7CgkgICAgdmFyIENfYWxnbyA9IEMuYWxnbzsKCgkgICAgLy8gUmV1c2FibGUgb2JqZWN0CgkgICAgdmFyIFcgPSBbXTsKCgkgICAgLyoqCgkgICAgICogU0hBLTEgaGFzaCBhbGdvcml0aG0uCgkgICAgICovCgkgICAgdmFyIFNIQTEgPSBDX2FsZ28uU0hBMSA9IEhhc2hlci5leHRlbmQoewoJICAgICAgICBfZG9SZXNldDogZnVuY3Rpb24gKCkgewoJICAgICAgICAgICAgdGhpcy5faGFzaCA9IG5ldyBXb3JkQXJyYXkuaW5pdChbCgkgICAgICAgICAgICAgICAgMHg2NzQ1MjMwMSwgMHhlZmNkYWI4OSwKCSAgICAgICAgICAgICAgICAweDk4YmFkY2ZlLCAweDEwMzI1NDc2LAoJICAgICAgICAgICAgICAgIDB4YzNkMmUxZjAKCSAgICAgICAgICAgIF0pOwoJICAgICAgICB9LAoKCSAgICAgICAgX2RvUHJvY2Vzc0Jsb2NrOiBmdW5jdGlvbiAoTSwgb2Zmc2V0KSB7CgkgICAgICAgICAgICAvLyBTaG9ydGN1dAoJICAgICAgICAgICAgdmFyIEggPSB0aGlzLl9oYXNoLndvcmRzOwoKCSAgICAgICAgICAgIC8vIFdvcmtpbmcgdmFyaWFibGVzCgkgICAgICAgICAgICB2YXIgYSA9IEhbMF07CgkgICAgICAgICAgICB2YXIgYiA9IEhbMV07CgkgICAgICAgICAgICB2YXIgYyA9IEhbMl07CgkgICAgICAgICAgICB2YXIgZCA9IEhbM107CgkgICAgICAgICAgICB2YXIgZSA9IEhbNF07CgoJICAgICAgICAgICAgLy8gQ29tcHV0YXRpb24KCSAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgODA7IGkrKykgewoJICAgICAgICAgICAgICAgIGlmIChpIDwgMTYpIHsKCSAgICAgICAgICAgICAgICAgICAgV1tpXSA9IE1bb2Zmc2V0ICsgaV0gfCAwOwoJICAgICAgICAgICAgICAgIH0gZWxzZSB7CgkgICAgICAgICAgICAgICAgICAgIHZhciBuID0gV1tpIC0gM10gXiBXW2kgLSA4XSBeIFdbaSAtIDE0XSBeIFdbaSAtIDE2XTsKCSAgICAgICAgICAgICAgICAgICAgV1tpXSA9IChuIDw8IDEpIHwgKG4gPj4+IDMxKTsKCSAgICAgICAgICAgICAgICB9CgoJICAgICAgICAgICAgICAgIHZhciB0ID0gKChhIDw8IDUpIHwgKGEgPj4+IDI3KSkgKyBlICsgV1tpXTsKCSAgICAgICAgICAgICAgICBpZiAoaSA8IDIwKSB7CgkgICAgICAgICAgICAgICAgICAgIHQgKz0gKChiICYgYykgfCAofmIgJiBkKSkgKyAweDVhODI3OTk5OwoJICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaSA8IDQwKSB7CgkgICAgICAgICAgICAgICAgICAgIHQgKz0gKGIgXiBjIF4gZCkgKyAweDZlZDllYmExOwoJICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaSA8IDYwKSB7CgkgICAgICAgICAgICAgICAgICAgIHQgKz0gKChiICYgYykgfCAoYiAmIGQpIHwgKGMgJiBkKSkgLSAweDcwZTQ0MzI0OwoJICAgICAgICAgICAgICAgIH0gZWxzZSAvKiBpZiAoaSA8IDgwKSAqLyB7CgkgICAgICAgICAgICAgICAgICAgIHQgKz0gKGIgXiBjIF4gZCkgLSAweDM1OWQzZTJhOwoJICAgICAgICAgICAgICAgIH0KCgkgICAgICAgICAgICAgICAgZSA9IGQ7CgkgICAgICAgICAgICAgICAgZCA9IGM7CgkgICAgICAgICAgICAgICAgYyA9IChiIDw8IDMwKSB8IChiID4+PiAyKTsKCSAgICAgICAgICAgICAgICBiID0gYTsKCSAgICAgICAgICAgICAgICBhID0gdDsKCSAgICAgICAgICAgIH0KCgkgICAgICAgICAgICAvLyBJbnRlcm1lZGlhdGUgaGFzaCB2YWx1ZQoJICAgICAgICAgICAgSFswXSA9IChIWzBdICsgYSkgfCAwOwoJICAgICAgICAgICAgSFsxXSA9IChIWzFdICsgYikgfCAwOwoJICAgICAgICAgICAgSFsyXSA9IChIWzJdICsgYykgfCAwOwoJICAgICAgICAgICAgSFszXSA9IChIWzNdICsgZCkgfCAwOwoJICAgICAgICAgICAgSFs0XSA9IChIWzRdICsgZSkgfCAwOwoJICAgICAgICB9LAoKCSAgICAgICAgX2RvRmluYWxpemU6IGZ1bmN0aW9uICgpIHsKCSAgICAgICAgICAgIC8vIFNob3J0Y3V0cwoJICAgICAgICAgICAgdmFyIGRhdGEgPSB0aGlzLl9kYXRhOwoJICAgICAgICAgICAgdmFyIGRhdGFXb3JkcyA9IGRhdGEud29yZHM7CgoJICAgICAgICAgICAgdmFyIG5CaXRzVG90YWwgPSB0aGlzLl9uRGF0YUJ5dGVzICogODsKCSAgICAgICAgICAgIHZhciBuQml0c0xlZnQgPSBkYXRhLnNpZ0J5dGVzICogODsKCgkgICAgICAgICAgICAvLyBBZGQgcGFkZGluZwoJICAgICAgICAgICAgZGF0YVdvcmRzW25CaXRzTGVmdCA+Pj4gNV0gfD0gMHg4MCA8PCAoMjQgLSBuQml0c0xlZnQgJSAzMik7CgkgICAgICAgICAgICBkYXRhV29yZHNbKCgobkJpdHNMZWZ0ICsgNjQpID4+PiA5KSA8PCA0KSArIDE0XSA9IE1hdGguZmxvb3IobkJpdHNUb3RhbCAvIDB4MTAwMDAwMDAwKTsKCSAgICAgICAgICAgIGRhdGFXb3Jkc1soKChuQml0c0xlZnQgKyA2NCkgPj4+IDkpIDw8IDQpICsgMTVdID0gbkJpdHNUb3RhbDsKCSAgICAgICAgICAgIGRhdGEuc2lnQnl0ZXMgPSBkYXRhV29yZHMubGVuZ3RoICogNDsKCgkgICAgICAgICAgICAvLyBIYXNoIGZpbmFsIGJsb2NrcwoJICAgICAgICAgICAgdGhpcy5fcHJvY2VzcygpOwoKCSAgICAgICAgICAgIC8vIFJldHVybiBmaW5hbCBjb21wdXRlZCBoYXNoCgkgICAgICAgICAgICByZXR1cm4gdGhpcy5faGFzaDsKCSAgICAgICAgfSwKCgkgICAgICAgIGNsb25lOiBmdW5jdGlvbiAoKSB7CgkgICAgICAgICAgICB2YXIgY2xvbmUgPSBIYXNoZXIuY2xvbmUuY2FsbCh0aGlzKTsKCSAgICAgICAgICAgIGNsb25lLl9oYXNoID0gdGhpcy5faGFzaC5jbG9uZSgpOwoKCSAgICAgICAgICAgIHJldHVybiBjbG9uZTsKCSAgICAgICAgfQoJICAgIH0pOwoKCSAgICAvKioKCSAgICAgKiBTaG9ydGN1dCBmdW5jdGlvbiB0byB0aGUgaGFzaGVyJ3Mgb2JqZWN0IGludGVyZmFjZS4KCSAgICAgKgoJICAgICAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBoYXNoLgoJICAgICAqCgkgICAgICogQHJldHVybiB7V29yZEFycmF5fSBUaGUgaGFzaC4KCSAgICAgKgoJICAgICAqIEBzdGF0aWMKCSAgICAgKgoJICAgICAqIEBleGFtcGxlCgkgICAgICoKCSAgICAgKiAgICAgdmFyIGhhc2ggPSBDcnlwdG9KUy5TSEExKCdtZXNzYWdlJyk7CgkgICAgICogICAgIHZhciBoYXNoID0gQ3J5cHRvSlMuU0hBMSh3b3JkQXJyYXkpOwoJICAgICAqLwoJICAgIEMuU0hBMSA9IEhhc2hlci5fY3JlYXRlSGVscGVyKFNIQTEpOwoKCSAgICAvKioKCSAgICAgKiBTaG9ydGN1dCBmdW5jdGlvbiB0byB0aGUgSE1BQydzIG9iamVjdCBpbnRlcmZhY2UuCgkgICAgICoKCSAgICAgKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IG1lc3NhZ2UgVGhlIG1lc3NhZ2UgdG8gaGFzaC4KCSAgICAgKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IGtleSBUaGUgc2VjcmV0IGtleS4KCSAgICAgKgoJICAgICAqIEByZXR1cm4ge1dvcmRBcnJheX0gVGhlIEhNQUMuCgkgICAgICoKCSAgICAgKiBAc3RhdGljCgkgICAgICoKCSAgICAgKiBAZXhhbXBsZQoJICAgICAqCgkgICAgICogICAgIHZhciBobWFjID0gQ3J5cHRvSlMuSG1hY1NIQTEobWVzc2FnZSwga2V5KTsKCSAgICAgKi8KCSAgICBDLkhtYWNTSEExID0gSGFzaGVyLl9jcmVhdGVIbWFjSGVscGVyKFNIQTEpOwoJfSgpKTsKCgoJKGZ1bmN0aW9uIChNYXRoKSB7CgkgICAgLy8gU2hvcnRjdXRzCgkgICAgdmFyIEMgPSBDcnlwdG9KUzsKCSAgICB2YXIgQ19saWIgPSBDLmxpYjsKCSAgICB2YXIgV29yZEFycmF5ID0gQ19saWIuV29yZEFycmF5OwoJICAgIHZhciBIYXNoZXIgPSBDX2xpYi5IYXNoZXI7CgkgICAgdmFyIENfYWxnbyA9IEMuYWxnbzsKCgkgICAgLy8gSW5pdGlhbGl6YXRpb24gYW5kIHJvdW5kIGNvbnN0YW50cyB0YWJsZXMKCSAgICB2YXIgSCA9IFtdOwoJICAgIHZhciBLID0gW107CgoJICAgIC8vIENvbXB1dGUgY29uc3RhbnRzCgkgICAgKGZ1bmN0aW9uICgpIHsKCSAgICAgICAgZnVuY3Rpb24gaXNQcmltZShuKSB7CgkgICAgICAgICAgICB2YXIgc3FydE4gPSBNYXRoLnNxcnQobik7CgkgICAgICAgICAgICBmb3IgKHZhciBmYWN0b3IgPSAyOyBmYWN0b3IgPD0gc3FydE47IGZhY3RvcisrKSB7CgkgICAgICAgICAgICAgICAgaWYgKCEobiAlIGZhY3RvcikpIHsKCSAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwoJICAgICAgICAgICAgICAgIH0KCSAgICAgICAgICAgIH0KCgkgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKCSAgICAgICAgfQoKCSAgICAgICAgZnVuY3Rpb24gZ2V0RnJhY3Rpb25hbEJpdHMobikgewoJICAgICAgICAgICAgcmV0dXJuICgobiAtIChuIHwgMCkpICogMHgxMDAwMDAwMDApIHwgMDsKCSAgICAgICAgfQoKCSAgICAgICAgdmFyIG4gPSAyOwoJICAgICAgICB2YXIgblByaW1lID0gMDsKCSAgICAgICAgd2hpbGUgKG5QcmltZSA8IDY0KSB7CgkgICAgICAgICAgICBpZiAoaXNQcmltZShuKSkgewoJICAgICAgICAgICAgICAgIGlmIChuUHJpbWUgPCA4KSB7CgkgICAgICAgICAgICAgICAgICAgIEhbblByaW1lXSA9IGdldEZyYWN0aW9uYWxCaXRzKE1hdGgucG93KG4sIDEgLyAyKSk7CgkgICAgICAgICAgICAgICAgfQoJICAgICAgICAgICAgICAgIEtbblByaW1lXSA9IGdldEZyYWN0aW9uYWxCaXRzKE1hdGgucG93KG4sIDEgLyAzKSk7CgoJICAgICAgICAgICAgICAgIG5QcmltZSsrOwoJICAgICAgICAgICAgfQoKCSAgICAgICAgICAgIG4rKzsKCSAgICAgICAgfQoJICAgIH0oKSk7CgoJICAgIC8vIFJldXNhYmxlIG9iamVjdAoJICAgIHZhciBXID0gW107CgoJICAgIC8qKgoJICAgICAqIFNIQS0yNTYgaGFzaCBhbGdvcml0aG0uCgkgICAgICovCgkgICAgdmFyIFNIQTI1NiA9IENfYWxnby5TSEEyNTYgPSBIYXNoZXIuZXh0ZW5kKHsKCSAgICAgICAgX2RvUmVzZXQ6IGZ1bmN0aW9uICgpIHsKCSAgICAgICAgICAgIHRoaXMuX2hhc2ggPSBuZXcgV29yZEFycmF5LmluaXQoSC5zbGljZSgwKSk7CgkgICAgICAgIH0sCgoJICAgICAgICBfZG9Qcm9jZXNzQmxvY2s6IGZ1bmN0aW9uIChNLCBvZmZzZXQpIHsKCSAgICAgICAgICAgIC8vIFNob3J0Y3V0CgkgICAgICAgICAgICB2YXIgSCA9IHRoaXMuX2hhc2gud29yZHM7CgoJICAgICAgICAgICAgLy8gV29ya2luZyB2YXJpYWJsZXMKCSAgICAgICAgICAgIHZhciBhID0gSFswXTsKCSAgICAgICAgICAgIHZhciBiID0gSFsxXTsKCSAgICAgICAgICAgIHZhciBjID0gSFsyXTsKCSAgICAgICAgICAgIHZhciBkID0gSFszXTsKCSAgICAgICAgICAgIHZhciBlID0gSFs0XTsKCSAgICAgICAgICAgIHZhciBmID0gSFs1XTsKCSAgICAgICAgICAgIHZhciBnID0gSFs2XTsKCSAgICAgICAgICAgIHZhciBoID0gSFs3XTsKCgkgICAgICAgICAgICAvLyBDb21wdXRhdGlvbgoJICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA2NDsgaSsrKSB7CgkgICAgICAgICAgICAgICAgaWYgKGkgPCAxNikgewoJICAgICAgICAgICAgICAgICAgICBXW2ldID0gTVtvZmZzZXQgKyBpXSB8IDA7CgkgICAgICAgICAgICAgICAgfSBlbHNlIHsKCSAgICAgICAgICAgICAgICAgICAgdmFyIGdhbW1hMHggPSBXW2kgLSAxNV07CgkgICAgICAgICAgICAgICAgICAgIHZhciBnYW1tYTAgID0gKChnYW1tYTB4IDw8IDI1KSB8IChnYW1tYTB4ID4+PiA3KSkgIF4KCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoKGdhbW1hMHggPDwgMTQpIHwgKGdhbW1hMHggPj4+IDE4KSkgXgoJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoZ2FtbWEweCA+Pj4gMyk7CgoJICAgICAgICAgICAgICAgICAgICB2YXIgZ2FtbWExeCA9IFdbaSAtIDJdOwoJICAgICAgICAgICAgICAgICAgICB2YXIgZ2FtbWExICA9ICgoZ2FtbWExeCA8PCAxNSkgfCAoZ2FtbWExeCA+Pj4gMTcpKSBeCgkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKChnYW1tYTF4IDw8IDEzKSB8IChnYW1tYTF4ID4+PiAxOSkpIF4KCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGdhbW1hMXggPj4+IDEwKTsKCgkgICAgICAgICAgICAgICAgICAgIFdbaV0gPSBnYW1tYTAgKyBXW2kgLSA3XSArIGdhbW1hMSArIFdbaSAtIDE2XTsKCSAgICAgICAgICAgICAgICB9CgoJICAgICAgICAgICAgICAgIHZhciBjaCAgPSAoZSAmIGYpIF4gKH5lICYgZyk7CgkgICAgICAgICAgICAgICAgdmFyIG1haiA9IChhICYgYikgXiAoYSAmIGMpIF4gKGIgJiBjKTsKCgkgICAgICAgICAgICAgICAgdmFyIHNpZ21hMCA9ICgoYSA8PCAzMCkgfCAoYSA+Pj4gMikpIF4gKChhIDw8IDE5KSB8IChhID4+PiAxMykpIF4gKChhIDw8IDEwKSB8IChhID4+PiAyMikpOwoJICAgICAgICAgICAgICAgIHZhciBzaWdtYTEgPSAoKGUgPDwgMjYpIHwgKGUgPj4+IDYpKSBeICgoZSA8PCAyMSkgfCAoZSA+Pj4gMTEpKSBeICgoZSA8PCA3KSAgfCAoZSA+Pj4gMjUpKTsKCgkgICAgICAgICAgICAgICAgdmFyIHQxID0gaCArIHNpZ21hMSArIGNoICsgS1tpXSArIFdbaV07CgkgICAgICAgICAgICAgICAgdmFyIHQyID0gc2lnbWEwICsgbWFqOwoKCSAgICAgICAgICAgICAgICBoID0gZzsKCSAgICAgICAgICAgICAgICBnID0gZjsKCSAgICAgICAgICAgICAgICBmID0gZTsKCSAgICAgICAgICAgICAgICBlID0gKGQgKyB0MSkgfCAwOwoJICAgICAgICAgICAgICAgIGQgPSBjOwoJICAgICAgICAgICAgICAgIGMgPSBiOwoJICAgICAgICAgICAgICAgIGIgPSBhOwoJICAgICAgICAgICAgICAgIGEgPSAodDEgKyB0MikgfCAwOwoJICAgICAgICAgICAgfQoKCSAgICAgICAgICAgIC8vIEludGVybWVkaWF0ZSBoYXNoIHZhbHVlCgkgICAgICAgICAgICBIWzBdID0gKEhbMF0gKyBhKSB8IDA7CgkgICAgICAgICAgICBIWzFdID0gKEhbMV0gKyBiKSB8IDA7CgkgICAgICAgICAgICBIWzJdID0gKEhbMl0gKyBjKSB8IDA7CgkgICAgICAgICAgICBIWzNdID0gKEhbM10gKyBkKSB8IDA7CgkgICAgICAgICAgICBIWzRdID0gKEhbNF0gKyBlKSB8IDA7CgkgICAgICAgICAgICBIWzVdID0gKEhbNV0gKyBmKSB8IDA7CgkgICAgICAgICAgICBIWzZdID0gKEhbNl0gKyBnKSB8IDA7CgkgICAgICAgICAgICBIWzddID0gKEhbN10gKyBoKSB8IDA7CgkgICAgICAgIH0sCgoJICAgICAgICBfZG9GaW5hbGl6ZTogZnVuY3Rpb24gKCkgewoJICAgICAgICAgICAgLy8gU2hvcnRjdXRzCgkgICAgICAgICAgICB2YXIgZGF0YSA9IHRoaXMuX2RhdGE7CgkgICAgICAgICAgICB2YXIgZGF0YVdvcmRzID0gZGF0YS53b3JkczsKCgkgICAgICAgICAgICB2YXIgbkJpdHNUb3RhbCA9IHRoaXMuX25EYXRhQnl0ZXMgKiA4OwoJICAgICAgICAgICAgdmFyIG5CaXRzTGVmdCA9IGRhdGEuc2lnQnl0ZXMgKiA4OwoKCSAgICAgICAgICAgIC8vIEFkZCBwYWRkaW5nCgkgICAgICAgICAgICBkYXRhV29yZHNbbkJpdHNMZWZ0ID4+PiA1XSB8PSAweDgwIDw8ICgyNCAtIG5CaXRzTGVmdCAlIDMyKTsKCSAgICAgICAgICAgIGRhdGFXb3Jkc1soKChuQml0c0xlZnQgKyA2NCkgPj4+IDkpIDw8IDQpICsgMTRdID0gTWF0aC5mbG9vcihuQml0c1RvdGFsIC8gMHgxMDAwMDAwMDApOwoJICAgICAgICAgICAgZGF0YVdvcmRzWygoKG5CaXRzTGVmdCArIDY0KSA+Pj4gOSkgPDwgNCkgKyAxNV0gPSBuQml0c1RvdGFsOwoJICAgICAgICAgICAgZGF0YS5zaWdCeXRlcyA9IGRhdGFXb3Jkcy5sZW5ndGggKiA0OwoKCSAgICAgICAgICAgIC8vIEhhc2ggZmluYWwgYmxvY2tzCgkgICAgICAgICAgICB0aGlzLl9wcm9jZXNzKCk7CgoJICAgICAgICAgICAgLy8gUmV0dXJuIGZpbmFsIGNvbXB1dGVkIGhhc2gKCSAgICAgICAgICAgIHJldHVybiB0aGlzLl9oYXNoOwoJICAgICAgICB9LAoKCSAgICAgICAgY2xvbmU6IGZ1bmN0aW9uICgpIHsKCSAgICAgICAgICAgIHZhciBjbG9uZSA9IEhhc2hlci5jbG9uZS5jYWxsKHRoaXMpOwoJICAgICAgICAgICAgY2xvbmUuX2hhc2ggPSB0aGlzLl9oYXNoLmNsb25lKCk7CgoJICAgICAgICAgICAgcmV0dXJuIGNsb25lOwoJICAgICAgICB9CgkgICAgfSk7CgoJICAgIC8qKgoJICAgICAqIFNob3J0Y3V0IGZ1bmN0aW9uIHRvIHRoZSBoYXNoZXIncyBvYmplY3QgaW50ZXJmYWNlLgoJICAgICAqCgkgICAgICogQHBhcmFtIHtXb3JkQXJyYXl8c3RyaW5nfSBtZXNzYWdlIFRoZSBtZXNzYWdlIHRvIGhhc2guCgkgICAgICoKCSAgICAgKiBAcmV0dXJuIHtXb3JkQXJyYXl9IFRoZSBoYXNoLgoJICAgICAqCgkgICAgICogQHN0YXRpYwoJICAgICAqCgkgICAgICogQGV4YW1wbGUKCSAgICAgKgoJICAgICAqICAgICB2YXIgaGFzaCA9IENyeXB0b0pTLlNIQTI1NignbWVzc2FnZScpOwoJICAgICAqICAgICB2YXIgaGFzaCA9IENyeXB0b0pTLlNIQTI1Nih3b3JkQXJyYXkpOwoJICAgICAqLwoJICAgIEMuU0hBMjU2ID0gSGFzaGVyLl9jcmVhdGVIZWxwZXIoU0hBMjU2KTsKCgkgICAgLyoqCgkgICAgICogU2hvcnRjdXQgZnVuY3Rpb24gdG8gdGhlIEhNQUMncyBvYmplY3QgaW50ZXJmYWNlLgoJICAgICAqCgkgICAgICogQHBhcmFtIHtXb3JkQXJyYXl8c3RyaW5nfSBtZXNzYWdlIFRoZSBtZXNzYWdlIHRvIGhhc2guCgkgICAgICogQHBhcmFtIHtXb3JkQXJyYXl8c3RyaW5nfSBrZXkgVGhlIHNlY3JldCBrZXkuCgkgICAgICoKCSAgICAgKiBAcmV0dXJuIHtXb3JkQXJyYXl9IFRoZSBITUFDLgoJICAgICAqCgkgICAgICogQHN0YXRpYwoJICAgICAqCgkgICAgICogQGV4YW1wbGUKCSAgICAgKgoJICAgICAqICAgICB2YXIgaG1hYyA9IENyeXB0b0pTLkhtYWNTSEEyNTYobWVzc2FnZSwga2V5KTsKCSAgICAgKi8KCSAgICBDLkhtYWNTSEEyNTYgPSBIYXNoZXIuX2NyZWF0ZUhtYWNIZWxwZXIoU0hBMjU2KTsKCX0oTWF0aCkpOwoKCgkoZnVuY3Rpb24gKCkgewoJICAgIC8vIFNob3J0Y3V0cwoJICAgIHZhciBDID0gQ3J5cHRvSlM7CgkgICAgdmFyIENfbGliID0gQy5saWI7CgkgICAgdmFyIFdvcmRBcnJheSA9IENfbGliLldvcmRBcnJheTsKCSAgICB2YXIgQ19lbmMgPSBDLmVuYzsKCgkgICAgLyoqCgkgICAgICogVVRGLTE2IEJFIGVuY29kaW5nIHN0cmF0ZWd5LgoJICAgICAqLwoJICAgIHZhciBVdGYxNkJFID0gQ19lbmMuVXRmMTYgPSBDX2VuYy5VdGYxNkJFID0gewoJICAgICAgICAvKioKCSAgICAgICAgICogQ29udmVydHMgYSB3b3JkIGFycmF5IHRvIGEgVVRGLTE2IEJFIHN0cmluZy4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtXb3JkQXJyYXl9IHdvcmRBcnJheSBUaGUgd29yZCBhcnJheS4KCSAgICAgICAgICoKCSAgICAgICAgICogQHJldHVybiB7c3RyaW5nfSBUaGUgVVRGLTE2IEJFIHN0cmluZy4KCSAgICAgICAgICoKCSAgICAgICAgICogQHN0YXRpYwoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIHV0ZjE2U3RyaW5nID0gQ3J5cHRvSlMuZW5jLlV0ZjE2LnN0cmluZ2lmeSh3b3JkQXJyYXkpOwoJICAgICAgICAgKi8KCSAgICAgICAgc3RyaW5naWZ5OiBmdW5jdGlvbiAod29yZEFycmF5KSB7CgkgICAgICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgICAgIHZhciB3b3JkcyA9IHdvcmRBcnJheS53b3JkczsKCSAgICAgICAgICAgIHZhciBzaWdCeXRlcyA9IHdvcmRBcnJheS5zaWdCeXRlczsKCgkgICAgICAgICAgICAvLyBDb252ZXJ0CgkgICAgICAgICAgICB2YXIgdXRmMTZDaGFycyA9IFtdOwoJICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzaWdCeXRlczsgaSArPSAyKSB7CgkgICAgICAgICAgICAgICAgdmFyIGNvZGVQb2ludCA9ICh3b3Jkc1tpID4+PiAyXSA+Pj4gKDE2IC0gKGkgJSA0KSAqIDgpKSAmIDB4ZmZmZjsKCSAgICAgICAgICAgICAgICB1dGYxNkNoYXJzLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShjb2RlUG9pbnQpKTsKCSAgICAgICAgICAgIH0KCgkgICAgICAgICAgICByZXR1cm4gdXRmMTZDaGFycy5qb2luKCcnKTsKCSAgICAgICAgfSwKCgkgICAgICAgIC8qKgoJICAgICAgICAgKiBDb252ZXJ0cyBhIFVURi0xNiBCRSBzdHJpbmcgdG8gYSB3b3JkIGFycmF5LgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXRmMTZTdHIgVGhlIFVURi0xNiBCRSBzdHJpbmcuCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge1dvcmRBcnJheX0gVGhlIHdvcmQgYXJyYXkuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBzdGF0aWMKCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciB3b3JkQXJyYXkgPSBDcnlwdG9KUy5lbmMuVXRmMTYucGFyc2UodXRmMTZTdHJpbmcpOwoJICAgICAgICAgKi8KCSAgICAgICAgcGFyc2U6IGZ1bmN0aW9uICh1dGYxNlN0cikgewoJICAgICAgICAgICAgLy8gU2hvcnRjdXQKCSAgICAgICAgICAgIHZhciB1dGYxNlN0ckxlbmd0aCA9IHV0ZjE2U3RyLmxlbmd0aDsKCgkgICAgICAgICAgICAvLyBDb252ZXJ0CgkgICAgICAgICAgICB2YXIgd29yZHMgPSBbXTsKCSAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdXRmMTZTdHJMZW5ndGg7IGkrKykgewoJICAgICAgICAgICAgICAgIHdvcmRzW2kgPj4+IDFdIHw9IHV0ZjE2U3RyLmNoYXJDb2RlQXQoaSkgPDwgKDE2IC0gKGkgJSAyKSAqIDE2KTsKCSAgICAgICAgICAgIH0KCgkgICAgICAgICAgICByZXR1cm4gV29yZEFycmF5LmNyZWF0ZSh3b3JkcywgdXRmMTZTdHJMZW5ndGggKiAyKTsKCSAgICAgICAgfQoJICAgIH07CgoJICAgIC8qKgoJICAgICAqIFVURi0xNiBMRSBlbmNvZGluZyBzdHJhdGVneS4KCSAgICAgKi8KCSAgICBDX2VuYy5VdGYxNkxFID0gewoJICAgICAgICAvKioKCSAgICAgICAgICogQ29udmVydHMgYSB3b3JkIGFycmF5IHRvIGEgVVRGLTE2IExFIHN0cmluZy4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtXb3JkQXJyYXl9IHdvcmRBcnJheSBUaGUgd29yZCBhcnJheS4KCSAgICAgICAgICoKCSAgICAgICAgICogQHJldHVybiB7c3RyaW5nfSBUaGUgVVRGLTE2IExFIHN0cmluZy4KCSAgICAgICAgICoKCSAgICAgICAgICogQHN0YXRpYwoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIHV0ZjE2U3RyID0gQ3J5cHRvSlMuZW5jLlV0ZjE2TEUuc3RyaW5naWZ5KHdvcmRBcnJheSk7CgkgICAgICAgICAqLwoJICAgICAgICBzdHJpbmdpZnk6IGZ1bmN0aW9uICh3b3JkQXJyYXkpIHsKCSAgICAgICAgICAgIC8vIFNob3J0Y3V0cwoJICAgICAgICAgICAgdmFyIHdvcmRzID0gd29yZEFycmF5LndvcmRzOwoJICAgICAgICAgICAgdmFyIHNpZ0J5dGVzID0gd29yZEFycmF5LnNpZ0J5dGVzOwoKCSAgICAgICAgICAgIC8vIENvbnZlcnQKCSAgICAgICAgICAgIHZhciB1dGYxNkNoYXJzID0gW107CgkgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNpZ0J5dGVzOyBpICs9IDIpIHsKCSAgICAgICAgICAgICAgICB2YXIgY29kZVBvaW50ID0gc3dhcEVuZGlhbigod29yZHNbaSA+Pj4gMl0gPj4+ICgxNiAtIChpICUgNCkgKiA4KSkgJiAweGZmZmYpOwoJICAgICAgICAgICAgICAgIHV0ZjE2Q2hhcnMucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKGNvZGVQb2ludCkpOwoJICAgICAgICAgICAgfQoKCSAgICAgICAgICAgIHJldHVybiB1dGYxNkNoYXJzLmpvaW4oJycpOwoJICAgICAgICB9LAoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIENvbnZlcnRzIGEgVVRGLTE2IExFIHN0cmluZyB0byBhIHdvcmQgYXJyYXkuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1dGYxNlN0ciBUaGUgVVRGLTE2IExFIHN0cmluZy4KCSAgICAgICAgICoKCSAgICAgICAgICogQHJldHVybiB7V29yZEFycmF5fSBUaGUgd29yZCBhcnJheS4KCSAgICAgICAgICoKCSAgICAgICAgICogQHN0YXRpYwoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIHdvcmRBcnJheSA9IENyeXB0b0pTLmVuYy5VdGYxNkxFLnBhcnNlKHV0ZjE2U3RyKTsKCSAgICAgICAgICovCgkgICAgICAgIHBhcnNlOiBmdW5jdGlvbiAodXRmMTZTdHIpIHsKCSAgICAgICAgICAgIC8vIFNob3J0Y3V0CgkgICAgICAgICAgICB2YXIgdXRmMTZTdHJMZW5ndGggPSB1dGYxNlN0ci5sZW5ndGg7CgoJICAgICAgICAgICAgLy8gQ29udmVydAoJICAgICAgICAgICAgdmFyIHdvcmRzID0gW107CgkgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHV0ZjE2U3RyTGVuZ3RoOyBpKyspIHsKCSAgICAgICAgICAgICAgICB3b3Jkc1tpID4+PiAxXSB8PSBzd2FwRW5kaWFuKHV0ZjE2U3RyLmNoYXJDb2RlQXQoaSkgPDwgKDE2IC0gKGkgJSAyKSAqIDE2KSk7CgkgICAgICAgICAgICB9CgoJICAgICAgICAgICAgcmV0dXJuIFdvcmRBcnJheS5jcmVhdGUod29yZHMsIHV0ZjE2U3RyTGVuZ3RoICogMik7CgkgICAgICAgIH0KCSAgICB9OwoKCSAgICBmdW5jdGlvbiBzd2FwRW5kaWFuKHdvcmQpIHsKCSAgICAgICAgcmV0dXJuICgod29yZCA8PCA4KSAmIDB4ZmYwMGZmMDApIHwgKCh3b3JkID4+PiA4KSAmIDB4MDBmZjAwZmYpOwoJICAgIH0KCX0oKSk7CgoKCShmdW5jdGlvbiAoKSB7CgkgICAgLy8gQ2hlY2sgaWYgdHlwZWQgYXJyYXlzIGFyZSBzdXBwb3J0ZWQKCSAgICBpZiAodHlwZW9mIEFycmF5QnVmZmVyICE9ICdmdW5jdGlvbicpIHsKCSAgICAgICAgcmV0dXJuOwoJICAgIH0KCgkgICAgLy8gU2hvcnRjdXRzCgkgICAgdmFyIEMgPSBDcnlwdG9KUzsKCSAgICB2YXIgQ19saWIgPSBDLmxpYjsKCSAgICB2YXIgV29yZEFycmF5ID0gQ19saWIuV29yZEFycmF5OwoKCSAgICAvLyBSZWZlcmVuY2Ugb3JpZ2luYWwgaW5pdAoJICAgIHZhciBzdXBlckluaXQgPSBXb3JkQXJyYXkuaW5pdDsKCgkgICAgLy8gQXVnbWVudCBXb3JkQXJyYXkuaW5pdCB0byBoYW5kbGUgdHlwZWQgYXJyYXlzCgkgICAgdmFyIHN1YkluaXQgPSBXb3JkQXJyYXkuaW5pdCA9IGZ1bmN0aW9uICh0eXBlZEFycmF5KSB7CgkgICAgICAgIC8vIENvbnZlcnQgYnVmZmVycyB0byB1aW50OAoJICAgICAgICBpZiAodHlwZWRBcnJheSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB7CgkgICAgICAgICAgICB0eXBlZEFycmF5ID0gbmV3IFVpbnQ4QXJyYXkodHlwZWRBcnJheSk7CgkgICAgICAgIH0KCgkgICAgICAgIC8vIENvbnZlcnQgb3RoZXIgYXJyYXkgdmlld3MgdG8gdWludDgKCSAgICAgICAgaWYgKAoJICAgICAgICAgICAgdHlwZWRBcnJheSBpbnN0YW5jZW9mIEludDhBcnJheSB8fAoJICAgICAgICAgICAgKHR5cGVvZiBVaW50OENsYW1wZWRBcnJheSAhPT0gInVuZGVmaW5lZCIgJiYgdHlwZWRBcnJheSBpbnN0YW5jZW9mIFVpbnQ4Q2xhbXBlZEFycmF5KSB8fAoJICAgICAgICAgICAgdHlwZWRBcnJheSBpbnN0YW5jZW9mIEludDE2QXJyYXkgfHwKCSAgICAgICAgICAgIHR5cGVkQXJyYXkgaW5zdGFuY2VvZiBVaW50MTZBcnJheSB8fAoJICAgICAgICAgICAgdHlwZWRBcnJheSBpbnN0YW5jZW9mIEludDMyQXJyYXkgfHwKCSAgICAgICAgICAgIHR5cGVkQXJyYXkgaW5zdGFuY2VvZiBVaW50MzJBcnJheSB8fAoJICAgICAgICAgICAgdHlwZWRBcnJheSBpbnN0YW5jZW9mIEZsb2F0MzJBcnJheSB8fAoJICAgICAgICAgICAgdHlwZWRBcnJheSBpbnN0YW5jZW9mIEZsb2F0NjRBcnJheQoJICAgICAgICApIHsKCSAgICAgICAgICAgIHR5cGVkQXJyYXkgPSBuZXcgVWludDhBcnJheSh0eXBlZEFycmF5LmJ1ZmZlciwgdHlwZWRBcnJheS5ieXRlT2Zmc2V0LCB0eXBlZEFycmF5LmJ5dGVMZW5ndGgpOwoJICAgICAgICB9CgoJICAgICAgICAvLyBIYW5kbGUgVWludDhBcnJheQoJICAgICAgICBpZiAodHlwZWRBcnJheSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHsKCSAgICAgICAgICAgIC8vIFNob3J0Y3V0CgkgICAgICAgICAgICB2YXIgdHlwZWRBcnJheUJ5dGVMZW5ndGggPSB0eXBlZEFycmF5LmJ5dGVMZW5ndGg7CgoJICAgICAgICAgICAgLy8gRXh0cmFjdCBieXRlcwoJICAgICAgICAgICAgdmFyIHdvcmRzID0gW107CgkgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHR5cGVkQXJyYXlCeXRlTGVuZ3RoOyBpKyspIHsKCSAgICAgICAgICAgICAgICB3b3Jkc1tpID4+PiAyXSB8PSB0eXBlZEFycmF5W2ldIDw8ICgyNCAtIChpICUgNCkgKiA4KTsKCSAgICAgICAgICAgIH0KCgkgICAgICAgICAgICAvLyBJbml0aWFsaXplIHRoaXMgd29yZCBhcnJheQoJICAgICAgICAgICAgc3VwZXJJbml0LmNhbGwodGhpcywgd29yZHMsIHR5cGVkQXJyYXlCeXRlTGVuZ3RoKTsKCSAgICAgICAgfSBlbHNlIHsKCSAgICAgICAgICAgIC8vIEVsc2UgY2FsbCBub3JtYWwgaW5pdAoJICAgICAgICAgICAgc3VwZXJJbml0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CgkgICAgICAgIH0KCSAgICB9OwoKCSAgICBzdWJJbml0LnByb3RvdHlwZSA9IFdvcmRBcnJheTsKCX0oKSk7CgoKCS8qKiBAcHJlc2VydmUKCShjKSAyMDEyIGJ5IEPDqWRyaWMgTWVzbmlsLiBBbGwgcmlnaHRzIHJlc2VydmVkLgoKCVJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291cmNlIGFuZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dCBtb2RpZmljYXRpb24sIGFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXJlIG1ldDoKCgkgICAgLSBSZWRpc3RyaWJ1dGlvbnMgb2Ygc291cmNlIGNvZGUgbXVzdCByZXRhaW4gdGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UsIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuCgkgICAgLSBSZWRpc3RyaWJ1dGlvbnMgaW4gYmluYXJ5IGZvcm0gbXVzdCByZXByb2R1Y2UgdGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UsIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIgaW4gdGhlIGRvY3VtZW50YXRpb24gYW5kL29yIG90aGVyIG1hdGVyaWFscyBwcm92aWRlZCB3aXRoIHRoZSBkaXN0cmlidXRpb24uCgoJVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyAiQVMgSVMiIEFORCBBTlkgRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSBBTkQgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQVJFIERJU0NMQUlNRUQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBDT1BZUklHSFQgSE9MREVSIE9SIENPTlRSSUJVVE9SUyBCRSBMSUFCTEUgRk9SIEFOWSBESVJFQ1QsIElORElSRUNULCBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFBST0NVUkVNRU5UIE9GIFNVQlNUSVRVVEUgR09PRFMgT1IgU0VSVklDRVM7IExPU1MgT0YgVVNFLCBEQVRBLCBPUiBQUk9GSVRTOyBPUiBCVVNJTkVTUyBJTlRFUlJVUFRJT04pIEhPV0VWRVIgQ0FVU0VEIEFORCBPTiBBTlkgVEhFT1JZIE9GIExJQUJJTElUWSwgV0hFVEhFUiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOIEFOWSBXQVkgT1VUIE9GIFRIRSBVU0UgT0YgVEhJUyBTT0ZUV0FSRSwgRVZFTiBJRiBBRFZJU0VEIE9GIFRIRSBQT1NTSUJJTElUWSBPRiBTVUNIIERBTUFHRS4KCSovCgoJKGZ1bmN0aW9uIChNYXRoKSB7CgkgICAgLy8gU2hvcnRjdXRzCgkgICAgdmFyIEMgPSBDcnlwdG9KUzsKCSAgICB2YXIgQ19saWIgPSBDLmxpYjsKCSAgICB2YXIgV29yZEFycmF5ID0gQ19saWIuV29yZEFycmF5OwoJICAgIHZhciBIYXNoZXIgPSBDX2xpYi5IYXNoZXI7CgkgICAgdmFyIENfYWxnbyA9IEMuYWxnbzsKCgkgICAgLy8gQ29uc3RhbnRzIHRhYmxlCgkgICAgdmFyIF96bCA9IFdvcmRBcnJheS5jcmVhdGUoWwoJICAgICAgICAwLCAgMSwgIDIsICAzLCAgNCwgIDUsICA2LCAgNywgIDgsICA5LCAxMCwgMTEsIDEyLCAxMywgMTQsIDE1LAoJICAgICAgICA3LCAgNCwgMTMsICAxLCAxMCwgIDYsIDE1LCAgMywgMTIsICAwLCAgOSwgIDUsICAyLCAxNCwgMTEsICA4LAoJICAgICAgICAzLCAxMCwgMTQsICA0LCAgOSwgMTUsICA4LCAgMSwgIDIsICA3LCAgMCwgIDYsIDEzLCAxMSwgIDUsIDEyLAoJICAgICAgICAxLCAgOSwgMTEsIDEwLCAgMCwgIDgsIDEyLCAgNCwgMTMsICAzLCAgNywgMTUsIDE0LCAgNSwgIDYsICAyLAoJICAgICAgICA0LCAgMCwgIDUsICA5LCAgNywgMTIsICAyLCAxMCwgMTQsICAxLCAgMywgIDgsIDExLCAgNiwgMTUsIDEzXSk7CgkgICAgdmFyIF96ciA9IFdvcmRBcnJheS5jcmVhdGUoWwoJICAgICAgICA1LCAxNCwgIDcsICAwLCAgOSwgIDIsIDExLCAgNCwgMTMsICA2LCAxNSwgIDgsICAxLCAxMCwgIDMsIDEyLAoJICAgICAgICA2LCAxMSwgIDMsICA3LCAgMCwgMTMsICA1LCAxMCwgMTQsIDE1LCAgOCwgMTIsICA0LCAgOSwgIDEsICAyLAoJICAgICAgICAxNSwgIDUsICAxLCAgMywgIDcsIDE0LCAgNiwgIDksIDExLCAgOCwgMTIsICAyLCAxMCwgIDAsICA0LCAxMywKCSAgICAgICAgOCwgIDYsICA0LCAgMSwgIDMsIDExLCAxNSwgIDAsICA1LCAxMiwgIDIsIDEzLCAgOSwgIDcsIDEwLCAxNCwKCSAgICAgICAgMTIsIDE1LCAxMCwgIDQsICAxLCAgNSwgIDgsICA3LCAgNiwgIDIsIDEzLCAxNCwgIDAsICAzLCAgOSwgMTFdKTsKCSAgICB2YXIgX3NsID0gV29yZEFycmF5LmNyZWF0ZShbCgkgICAgICAgICAxMSwgMTQsIDE1LCAxMiwgIDUsICA4LCAgNywgIDksIDExLCAxMywgMTQsIDE1LCAgNiwgIDcsICA5LCAgOCwKCSAgICAgICAgNywgNiwgICA4LCAxMywgMTEsICA5LCAgNywgMTUsICA3LCAxMiwgMTUsICA5LCAxMSwgIDcsIDEzLCAxMiwKCSAgICAgICAgMTEsIDEzLCAgNiwgIDcsIDE0LCAgOSwgMTMsIDE1LCAxNCwgIDgsIDEzLCAgNiwgIDUsIDEyLCAgNywgIDUsCgkgICAgICAgICAgMTEsIDEyLCAxNCwgMTUsIDE0LCAxNSwgIDksICA4LCAgOSwgMTQsICA1LCAgNiwgIDgsICA2LCAgNSwgMTIsCgkgICAgICAgIDksIDE1LCAgNSwgMTEsICA2LCAgOCwgMTMsIDEyLCAgNSwgMTIsIDEzLCAxNCwgMTEsICA4LCAgNSwgIDYgXSk7CgkgICAgdmFyIF9zciA9IFdvcmRBcnJheS5jcmVhdGUoWwoJICAgICAgICA4LCAgOSwgIDksIDExLCAxMywgMTUsIDE1LCAgNSwgIDcsICA3LCAgOCwgMTEsIDE0LCAxNCwgMTIsICA2LAoJICAgICAgICA5LCAxMywgMTUsICA3LCAxMiwgIDgsICA5LCAxMSwgIDcsICA3LCAxMiwgIDcsICA2LCAxNSwgMTMsIDExLAoJICAgICAgICA5LCAgNywgMTUsIDExLCAgOCwgIDYsICA2LCAxNCwgMTIsIDEzLCAgNSwgMTQsIDEzLCAxMywgIDcsICA1LAoJICAgICAgICAxNSwgIDUsICA4LCAxMSwgMTQsIDE0LCAgNiwgMTQsICA2LCAgOSwgMTIsICA5LCAxMiwgIDUsIDE1LCAgOCwKCSAgICAgICAgOCwgIDUsIDEyLCAgOSwgMTIsICA1LCAxNCwgIDYsICA4LCAxMywgIDYsICA1LCAxNSwgMTMsIDExLCAxMSBdKTsKCgkgICAgdmFyIF9obCA9ICBXb3JkQXJyYXkuY3JlYXRlKFsgMHgwMDAwMDAwMCwgMHg1QTgyNzk5OSwgMHg2RUQ5RUJBMSwgMHg4RjFCQkNEQywgMHhBOTUzRkQ0RV0pOwoJICAgIHZhciBfaHIgPSAgV29yZEFycmF5LmNyZWF0ZShbIDB4NTBBMjhCRTYsIDB4NUM0REQxMjQsIDB4NkQ3MDNFRjMsIDB4N0E2RDc2RTksIDB4MDAwMDAwMDBdKTsKCgkgICAgLyoqCgkgICAgICogUklQRU1EMTYwIGhhc2ggYWxnb3JpdGhtLgoJICAgICAqLwoJICAgIHZhciBSSVBFTUQxNjAgPSBDX2FsZ28uUklQRU1EMTYwID0gSGFzaGVyLmV4dGVuZCh7CgkgICAgICAgIF9kb1Jlc2V0OiBmdW5jdGlvbiAoKSB7CgkgICAgICAgICAgICB0aGlzLl9oYXNoICA9IFdvcmRBcnJheS5jcmVhdGUoWzB4Njc0NTIzMDEsIDB4RUZDREFCODksIDB4OThCQURDRkUsIDB4MTAzMjU0NzYsIDB4QzNEMkUxRjBdKTsKCSAgICAgICAgfSwKCgkgICAgICAgIF9kb1Byb2Nlc3NCbG9jazogZnVuY3Rpb24gKE0sIG9mZnNldCkgewoKCSAgICAgICAgICAgIC8vIFN3YXAgZW5kaWFuCgkgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDE2OyBpKyspIHsKCSAgICAgICAgICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgICAgICAgICB2YXIgb2Zmc2V0X2kgPSBvZmZzZXQgKyBpOwoJICAgICAgICAgICAgICAgIHZhciBNX29mZnNldF9pID0gTVtvZmZzZXRfaV07CgoJICAgICAgICAgICAgICAgIC8vIFN3YXAKCSAgICAgICAgICAgICAgICBNW29mZnNldF9pXSA9ICgKCSAgICAgICAgICAgICAgICAgICAgKCgoTV9vZmZzZXRfaSA8PCA4KSAgfCAoTV9vZmZzZXRfaSA+Pj4gMjQpKSAmIDB4MDBmZjAwZmYpIHwKCSAgICAgICAgICAgICAgICAgICAgKCgoTV9vZmZzZXRfaSA8PCAyNCkgfCAoTV9vZmZzZXRfaSA+Pj4gOCkpICAmIDB4ZmYwMGZmMDApCgkgICAgICAgICAgICAgICAgKTsKCSAgICAgICAgICAgIH0KCSAgICAgICAgICAgIC8vIFNob3J0Y3V0CgkgICAgICAgICAgICB2YXIgSCAgPSB0aGlzLl9oYXNoLndvcmRzOwoJICAgICAgICAgICAgdmFyIGhsID0gX2hsLndvcmRzOwoJICAgICAgICAgICAgdmFyIGhyID0gX2hyLndvcmRzOwoJICAgICAgICAgICAgdmFyIHpsID0gX3psLndvcmRzOwoJICAgICAgICAgICAgdmFyIHpyID0gX3pyLndvcmRzOwoJICAgICAgICAgICAgdmFyIHNsID0gX3NsLndvcmRzOwoJICAgICAgICAgICAgdmFyIHNyID0gX3NyLndvcmRzOwoKCSAgICAgICAgICAgIC8vIFdvcmtpbmcgdmFyaWFibGVzCgkgICAgICAgICAgICB2YXIgYWwsIGJsLCBjbCwgZGwsIGVsOwoJICAgICAgICAgICAgdmFyIGFyLCBiciwgY3IsIGRyLCBlcjsKCgkgICAgICAgICAgICBhciA9IGFsID0gSFswXTsKCSAgICAgICAgICAgIGJyID0gYmwgPSBIWzFdOwoJICAgICAgICAgICAgY3IgPSBjbCA9IEhbMl07CgkgICAgICAgICAgICBkciA9IGRsID0gSFszXTsKCSAgICAgICAgICAgIGVyID0gZWwgPSBIWzRdOwoJICAgICAgICAgICAgLy8gQ29tcHV0YXRpb24KCSAgICAgICAgICAgIHZhciB0OwoJICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA4MDsgaSArPSAxKSB7CgkgICAgICAgICAgICAgICAgdCA9IChhbCArICBNW29mZnNldCt6bFtpXV0pfDA7CgkgICAgICAgICAgICAgICAgaWYgKGk8MTYpewoJCSAgICAgICAgICAgIHQgKz0gIGYxKGJsLGNsLGRsKSArIGhsWzBdOwoJICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaTwzMikgewoJCSAgICAgICAgICAgIHQgKz0gIGYyKGJsLGNsLGRsKSArIGhsWzFdOwoJICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaTw0OCkgewoJCSAgICAgICAgICAgIHQgKz0gIGYzKGJsLGNsLGRsKSArIGhsWzJdOwoJICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaTw2NCkgewoJCSAgICAgICAgICAgIHQgKz0gIGY0KGJsLGNsLGRsKSArIGhsWzNdOwoJICAgICAgICAgICAgICAgIH0gZWxzZSB7Ly8gaWYgKGk8ODApIHsKCQkgICAgICAgICAgICB0ICs9ICBmNShibCxjbCxkbCkgKyBobFs0XTsKCSAgICAgICAgICAgICAgICB9CgkgICAgICAgICAgICAgICAgdCA9IHR8MDsKCSAgICAgICAgICAgICAgICB0ID0gIHJvdGwodCxzbFtpXSk7CgkgICAgICAgICAgICAgICAgdCA9ICh0K2VsKXwwOwoJICAgICAgICAgICAgICAgIGFsID0gZWw7CgkgICAgICAgICAgICAgICAgZWwgPSBkbDsKCSAgICAgICAgICAgICAgICBkbCA9IHJvdGwoY2wsIDEwKTsKCSAgICAgICAgICAgICAgICBjbCA9IGJsOwoJICAgICAgICAgICAgICAgIGJsID0gdDsKCgkgICAgICAgICAgICAgICAgdCA9IChhciArIE1bb2Zmc2V0K3pyW2ldXSl8MDsKCSAgICAgICAgICAgICAgICBpZiAoaTwxNil7CgkJICAgICAgICAgICAgdCArPSAgZjUoYnIsY3IsZHIpICsgaHJbMF07CgkgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpPDMyKSB7CgkJICAgICAgICAgICAgdCArPSAgZjQoYnIsY3IsZHIpICsgaHJbMV07CgkgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpPDQ4KSB7CgkJICAgICAgICAgICAgdCArPSAgZjMoYnIsY3IsZHIpICsgaHJbMl07CgkgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpPDY0KSB7CgkJICAgICAgICAgICAgdCArPSAgZjIoYnIsY3IsZHIpICsgaHJbM107CgkgICAgICAgICAgICAgICAgfSBlbHNlIHsvLyBpZiAoaTw4MCkgewoJCSAgICAgICAgICAgIHQgKz0gIGYxKGJyLGNyLGRyKSArIGhyWzRdOwoJICAgICAgICAgICAgICAgIH0KCSAgICAgICAgICAgICAgICB0ID0gdHwwOwoJICAgICAgICAgICAgICAgIHQgPSAgcm90bCh0LHNyW2ldKSA7CgkgICAgICAgICAgICAgICAgdCA9ICh0K2VyKXwwOwoJICAgICAgICAgICAgICAgIGFyID0gZXI7CgkgICAgICAgICAgICAgICAgZXIgPSBkcjsKCSAgICAgICAgICAgICAgICBkciA9IHJvdGwoY3IsIDEwKTsKCSAgICAgICAgICAgICAgICBjciA9IGJyOwoJICAgICAgICAgICAgICAgIGJyID0gdDsKCSAgICAgICAgICAgIH0KCSAgICAgICAgICAgIC8vIEludGVybWVkaWF0ZSBoYXNoIHZhbHVlCgkgICAgICAgICAgICB0ICAgID0gKEhbMV0gKyBjbCArIGRyKXwwOwoJICAgICAgICAgICAgSFsxXSA9IChIWzJdICsgZGwgKyBlcil8MDsKCSAgICAgICAgICAgIEhbMl0gPSAoSFszXSArIGVsICsgYXIpfDA7CgkgICAgICAgICAgICBIWzNdID0gKEhbNF0gKyBhbCArIGJyKXwwOwoJICAgICAgICAgICAgSFs0XSA9IChIWzBdICsgYmwgKyBjcil8MDsKCSAgICAgICAgICAgIEhbMF0gPSAgdDsKCSAgICAgICAgfSwKCgkgICAgICAgIF9kb0ZpbmFsaXplOiBmdW5jdGlvbiAoKSB7CgkgICAgICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgICAgIHZhciBkYXRhID0gdGhpcy5fZGF0YTsKCSAgICAgICAgICAgIHZhciBkYXRhV29yZHMgPSBkYXRhLndvcmRzOwoKCSAgICAgICAgICAgIHZhciBuQml0c1RvdGFsID0gdGhpcy5fbkRhdGFCeXRlcyAqIDg7CgkgICAgICAgICAgICB2YXIgbkJpdHNMZWZ0ID0gZGF0YS5zaWdCeXRlcyAqIDg7CgoJICAgICAgICAgICAgLy8gQWRkIHBhZGRpbmcKCSAgICAgICAgICAgIGRhdGFXb3Jkc1tuQml0c0xlZnQgPj4+IDVdIHw9IDB4ODAgPDwgKDI0IC0gbkJpdHNMZWZ0ICUgMzIpOwoJICAgICAgICAgICAgZGF0YVdvcmRzWygoKG5CaXRzTGVmdCArIDY0KSA+Pj4gOSkgPDwgNCkgKyAxNF0gPSAoCgkgICAgICAgICAgICAgICAgKCgobkJpdHNUb3RhbCA8PCA4KSAgfCAobkJpdHNUb3RhbCA+Pj4gMjQpKSAmIDB4MDBmZjAwZmYpIHwKCSAgICAgICAgICAgICAgICAoKChuQml0c1RvdGFsIDw8IDI0KSB8IChuQml0c1RvdGFsID4+PiA4KSkgICYgMHhmZjAwZmYwMCkKCSAgICAgICAgICAgICk7CgkgICAgICAgICAgICBkYXRhLnNpZ0J5dGVzID0gKGRhdGFXb3Jkcy5sZW5ndGggKyAxKSAqIDQ7CgoJICAgICAgICAgICAgLy8gSGFzaCBmaW5hbCBibG9ja3MKCSAgICAgICAgICAgIHRoaXMuX3Byb2Nlc3MoKTsKCgkgICAgICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgICAgIHZhciBoYXNoID0gdGhpcy5faGFzaDsKCSAgICAgICAgICAgIHZhciBIID0gaGFzaC53b3JkczsKCgkgICAgICAgICAgICAvLyBTd2FwIGVuZGlhbgoJICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA1OyBpKyspIHsKCSAgICAgICAgICAgICAgICAvLyBTaG9ydGN1dAoJICAgICAgICAgICAgICAgIHZhciBIX2kgPSBIW2ldOwoKCSAgICAgICAgICAgICAgICAvLyBTd2FwCgkgICAgICAgICAgICAgICAgSFtpXSA9ICgoKEhfaSA8PCA4KSAgfCAoSF9pID4+PiAyNCkpICYgMHgwMGZmMDBmZikgfAoJICAgICAgICAgICAgICAgICAgICAgICAoKChIX2kgPDwgMjQpIHwgKEhfaSA+Pj4gOCkpICAmIDB4ZmYwMGZmMDApOwoJICAgICAgICAgICAgfQoKCSAgICAgICAgICAgIC8vIFJldHVybiBmaW5hbCBjb21wdXRlZCBoYXNoCgkgICAgICAgICAgICByZXR1cm4gaGFzaDsKCSAgICAgICAgfSwKCgkgICAgICAgIGNsb25lOiBmdW5jdGlvbiAoKSB7CgkgICAgICAgICAgICB2YXIgY2xvbmUgPSBIYXNoZXIuY2xvbmUuY2FsbCh0aGlzKTsKCSAgICAgICAgICAgIGNsb25lLl9oYXNoID0gdGhpcy5faGFzaC5jbG9uZSgpOwoKCSAgICAgICAgICAgIHJldHVybiBjbG9uZTsKCSAgICAgICAgfQoJICAgIH0pOwoKCgkgICAgZnVuY3Rpb24gZjEoeCwgeSwgeikgewoJICAgICAgICByZXR1cm4gKCh4KSBeICh5KSBeICh6KSk7CgoJICAgIH0KCgkgICAgZnVuY3Rpb24gZjIoeCwgeSwgeikgewoJICAgICAgICByZXR1cm4gKCgoeCkmKHkpKSB8ICgofngpJih6KSkpOwoJICAgIH0KCgkgICAgZnVuY3Rpb24gZjMoeCwgeSwgeikgewoJICAgICAgICByZXR1cm4gKCgoeCkgfCAofih5KSkpIF4gKHopKTsKCSAgICB9CgoJICAgIGZ1bmN0aW9uIGY0KHgsIHksIHopIHsKCSAgICAgICAgcmV0dXJuICgoKHgpICYgKHopKSB8ICgoeSkmKH4oeikpKSk7CgkgICAgfQoKCSAgICBmdW5jdGlvbiBmNSh4LCB5LCB6KSB7CgkgICAgICAgIHJldHVybiAoKHgpIF4gKCh5KSB8KH4oeikpKSk7CgoJICAgIH0KCgkgICAgZnVuY3Rpb24gcm90bCh4LG4pIHsKCSAgICAgICAgcmV0dXJuICh4PDxuKSB8ICh4Pj4+KDMyLW4pKTsKCSAgICB9CgoKCSAgICAvKioKCSAgICAgKiBTaG9ydGN1dCBmdW5jdGlvbiB0byB0aGUgaGFzaGVyJ3Mgb2JqZWN0IGludGVyZmFjZS4KCSAgICAgKgoJICAgICAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBoYXNoLgoJICAgICAqCgkgICAgICogQHJldHVybiB7V29yZEFycmF5fSBUaGUgaGFzaC4KCSAgICAgKgoJICAgICAqIEBzdGF0aWMKCSAgICAgKgoJICAgICAqIEBleGFtcGxlCgkgICAgICoKCSAgICAgKiAgICAgdmFyIGhhc2ggPSBDcnlwdG9KUy5SSVBFTUQxNjAoJ21lc3NhZ2UnKTsKCSAgICAgKiAgICAgdmFyIGhhc2ggPSBDcnlwdG9KUy5SSVBFTUQxNjAod29yZEFycmF5KTsKCSAgICAgKi8KCSAgICBDLlJJUEVNRDE2MCA9IEhhc2hlci5fY3JlYXRlSGVscGVyKFJJUEVNRDE2MCk7CgoJICAgIC8qKgoJICAgICAqIFNob3J0Y3V0IGZ1bmN0aW9uIHRvIHRoZSBITUFDJ3Mgb2JqZWN0IGludGVyZmFjZS4KCSAgICAgKgoJICAgICAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBoYXNoLgoJICAgICAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30ga2V5IFRoZSBzZWNyZXQga2V5LgoJICAgICAqCgkgICAgICogQHJldHVybiB7V29yZEFycmF5fSBUaGUgSE1BQy4KCSAgICAgKgoJICAgICAqIEBzdGF0aWMKCSAgICAgKgoJICAgICAqIEBleGFtcGxlCgkgICAgICoKCSAgICAgKiAgICAgdmFyIGhtYWMgPSBDcnlwdG9KUy5IbWFjUklQRU1EMTYwKG1lc3NhZ2UsIGtleSk7CgkgICAgICovCgkgICAgQy5IbWFjUklQRU1EMTYwID0gSGFzaGVyLl9jcmVhdGVIbWFjSGVscGVyKFJJUEVNRDE2MCk7Cgl9KE1hdGgpKTsKCgoJKGZ1bmN0aW9uICgpIHsKCSAgICAvLyBTaG9ydGN1dHMKCSAgICB2YXIgQyA9IENyeXB0b0pTOwoJICAgIHZhciBDX2xpYiA9IEMubGliOwoJICAgIHZhciBCYXNlID0gQ19saWIuQmFzZTsKCSAgICB2YXIgQ19lbmMgPSBDLmVuYzsKCSAgICB2YXIgVXRmOCA9IENfZW5jLlV0Zjg7CgkgICAgdmFyIENfYWxnbyA9IEMuYWxnbzsKCgkgICAgLyoqCgkgICAgICogSE1BQyBhbGdvcml0aG0uCgkgICAgICovCgkgICAgdmFyIEhNQUMgPSBDX2FsZ28uSE1BQyA9IEJhc2UuZXh0ZW5kKHsKCSAgICAgICAgLyoqCgkgICAgICAgICAqIEluaXRpYWxpemVzIGEgbmV3bHkgY3JlYXRlZCBITUFDLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcGFyYW0ge0hhc2hlcn0gaGFzaGVyIFRoZSBoYXNoIGFsZ29yaXRobSB0byB1c2UuCgkgICAgICAgICAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30ga2V5IFRoZSBzZWNyZXQga2V5LgoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIGhtYWNIYXNoZXIgPSBDcnlwdG9KUy5hbGdvLkhNQUMuY3JlYXRlKENyeXB0b0pTLmFsZ28uU0hBMjU2LCBrZXkpOwoJICAgICAgICAgKi8KCSAgICAgICAgaW5pdDogZnVuY3Rpb24gKGhhc2hlciwga2V5KSB7CgkgICAgICAgICAgICAvLyBJbml0IGhhc2hlcgoJICAgICAgICAgICAgaGFzaGVyID0gdGhpcy5faGFzaGVyID0gbmV3IGhhc2hlci5pbml0KCk7CgoJICAgICAgICAgICAgLy8gQ29udmVydCBzdHJpbmcgdG8gV29yZEFycmF5LCBlbHNlIGFzc3VtZSBXb3JkQXJyYXkgYWxyZWFkeQoJICAgICAgICAgICAgaWYgKHR5cGVvZiBrZXkgPT0gJ3N0cmluZycpIHsKCSAgICAgICAgICAgICAgICBrZXkgPSBVdGY4LnBhcnNlKGtleSk7CgkgICAgICAgICAgICB9CgoJICAgICAgICAgICAgLy8gU2hvcnRjdXRzCgkgICAgICAgICAgICB2YXIgaGFzaGVyQmxvY2tTaXplID0gaGFzaGVyLmJsb2NrU2l6ZTsKCSAgICAgICAgICAgIHZhciBoYXNoZXJCbG9ja1NpemVCeXRlcyA9IGhhc2hlckJsb2NrU2l6ZSAqIDQ7CgoJICAgICAgICAgICAgLy8gQWxsb3cgYXJiaXRyYXJ5IGxlbmd0aCBrZXlzCgkgICAgICAgICAgICBpZiAoa2V5LnNpZ0J5dGVzID4gaGFzaGVyQmxvY2tTaXplQnl0ZXMpIHsKCSAgICAgICAgICAgICAgICBrZXkgPSBoYXNoZXIuZmluYWxpemUoa2V5KTsKCSAgICAgICAgICAgIH0KCgkgICAgICAgICAgICAvLyBDbGFtcCBleGNlc3MgYml0cwoJICAgICAgICAgICAga2V5LmNsYW1wKCk7CgoJICAgICAgICAgICAgLy8gQ2xvbmUga2V5IGZvciBpbm5lciBhbmQgb3V0ZXIgcGFkcwoJICAgICAgICAgICAgdmFyIG9LZXkgPSB0aGlzLl9vS2V5ID0ga2V5LmNsb25lKCk7CgkgICAgICAgICAgICB2YXIgaUtleSA9IHRoaXMuX2lLZXkgPSBrZXkuY2xvbmUoKTsKCgkgICAgICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgICAgIHZhciBvS2V5V29yZHMgPSBvS2V5LndvcmRzOwoJICAgICAgICAgICAgdmFyIGlLZXlXb3JkcyA9IGlLZXkud29yZHM7CgoJICAgICAgICAgICAgLy8gWE9SIGtleXMgd2l0aCBwYWQgY29uc3RhbnRzCgkgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGhhc2hlckJsb2NrU2l6ZTsgaSsrKSB7CgkgICAgICAgICAgICAgICAgb0tleVdvcmRzW2ldIF49IDB4NWM1YzVjNWM7CgkgICAgICAgICAgICAgICAgaUtleVdvcmRzW2ldIF49IDB4MzYzNjM2MzY7CgkgICAgICAgICAgICB9CgkgICAgICAgICAgICBvS2V5LnNpZ0J5dGVzID0gaUtleS5zaWdCeXRlcyA9IGhhc2hlckJsb2NrU2l6ZUJ5dGVzOwoKCSAgICAgICAgICAgIC8vIFNldCBpbml0aWFsIHZhbHVlcwoJICAgICAgICAgICAgdGhpcy5yZXNldCgpOwoJICAgICAgICB9LAoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIFJlc2V0cyB0aGlzIEhNQUMgdG8gaXRzIGluaXRpYWwgc3RhdGUuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAqCgkgICAgICAgICAqICAgICBobWFjSGFzaGVyLnJlc2V0KCk7CgkgICAgICAgICAqLwoJICAgICAgICByZXNldDogZnVuY3Rpb24gKCkgewoJICAgICAgICAgICAgLy8gU2hvcnRjdXQKCSAgICAgICAgICAgIHZhciBoYXNoZXIgPSB0aGlzLl9oYXNoZXI7CgoJICAgICAgICAgICAgLy8gUmVzZXQKCSAgICAgICAgICAgIGhhc2hlci5yZXNldCgpOwoJICAgICAgICAgICAgaGFzaGVyLnVwZGF0ZSh0aGlzLl9pS2V5KTsKCSAgICAgICAgfSwKCgkgICAgICAgIC8qKgoJICAgICAgICAgKiBVcGRhdGVzIHRoaXMgSE1BQyB3aXRoIGEgbWVzc2FnZS4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtXb3JkQXJyYXl8c3RyaW5nfSBtZXNzYWdlVXBkYXRlIFRoZSBtZXNzYWdlIHRvIGFwcGVuZC4KCSAgICAgICAgICoKCSAgICAgICAgICogQHJldHVybiB7SE1BQ30gVGhpcyBITUFDIGluc3RhbmNlLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgaG1hY0hhc2hlci51cGRhdGUoJ21lc3NhZ2UnKTsKCSAgICAgICAgICogICAgIGhtYWNIYXNoZXIudXBkYXRlKHdvcmRBcnJheSk7CgkgICAgICAgICAqLwoJICAgICAgICB1cGRhdGU6IGZ1bmN0aW9uIChtZXNzYWdlVXBkYXRlKSB7CgkgICAgICAgICAgICB0aGlzLl9oYXNoZXIudXBkYXRlKG1lc3NhZ2VVcGRhdGUpOwoKCSAgICAgICAgICAgIC8vIENoYWluYWJsZQoJICAgICAgICAgICAgcmV0dXJuIHRoaXM7CgkgICAgICAgIH0sCgoJICAgICAgICAvKioKCSAgICAgICAgICogRmluYWxpemVzIHRoZSBITUFDIGNvbXB1dGF0aW9uLgoJICAgICAgICAgKiBOb3RlIHRoYXQgdGhlIGZpbmFsaXplIG9wZXJhdGlvbiBpcyBlZmZlY3RpdmVseSBhIGRlc3RydWN0aXZlLCByZWFkLW9uY2Ugb3BlcmF0aW9uLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IG1lc3NhZ2VVcGRhdGUgKE9wdGlvbmFsKSBBIGZpbmFsIG1lc3NhZ2UgdXBkYXRlLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcmV0dXJuIHtXb3JkQXJyYXl9IFRoZSBITUFDLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIGhtYWMgPSBobWFjSGFzaGVyLmZpbmFsaXplKCk7CgkgICAgICAgICAqICAgICB2YXIgaG1hYyA9IGhtYWNIYXNoZXIuZmluYWxpemUoJ21lc3NhZ2UnKTsKCSAgICAgICAgICogICAgIHZhciBobWFjID0gaG1hY0hhc2hlci5maW5hbGl6ZSh3b3JkQXJyYXkpOwoJICAgICAgICAgKi8KCSAgICAgICAgZmluYWxpemU6IGZ1bmN0aW9uIChtZXNzYWdlVXBkYXRlKSB7CgkgICAgICAgICAgICAvLyBTaG9ydGN1dAoJICAgICAgICAgICAgdmFyIGhhc2hlciA9IHRoaXMuX2hhc2hlcjsKCgkgICAgICAgICAgICAvLyBDb21wdXRlIEhNQUMKCSAgICAgICAgICAgIHZhciBpbm5lckhhc2ggPSBoYXNoZXIuZmluYWxpemUobWVzc2FnZVVwZGF0ZSk7CgkgICAgICAgICAgICBoYXNoZXIucmVzZXQoKTsKCSAgICAgICAgICAgIHZhciBobWFjID0gaGFzaGVyLmZpbmFsaXplKHRoaXMuX29LZXkuY2xvbmUoKS5jb25jYXQoaW5uZXJIYXNoKSk7CgoJICAgICAgICAgICAgcmV0dXJuIGhtYWM7CgkgICAgICAgIH0KCSAgICB9KTsKCX0oKSk7CgoKCShmdW5jdGlvbiAoKSB7CgkgICAgLy8gU2hvcnRjdXRzCgkgICAgdmFyIEMgPSBDcnlwdG9KUzsKCSAgICB2YXIgQ19saWIgPSBDLmxpYjsKCSAgICB2YXIgQmFzZSA9IENfbGliLkJhc2U7CgkgICAgdmFyIFdvcmRBcnJheSA9IENfbGliLldvcmRBcnJheTsKCSAgICB2YXIgQ19hbGdvID0gQy5hbGdvOwoJICAgIHZhciBTSEExID0gQ19hbGdvLlNIQTE7CgkgICAgdmFyIEhNQUMgPSBDX2FsZ28uSE1BQzsKCgkgICAgLyoqCgkgICAgICogUGFzc3dvcmQtQmFzZWQgS2V5IERlcml2YXRpb24gRnVuY3Rpb24gMiBhbGdvcml0aG0uCgkgICAgICovCgkgICAgdmFyIFBCS0RGMiA9IENfYWxnby5QQktERjIgPSBCYXNlLmV4dGVuZCh7CgkgICAgICAgIC8qKgoJICAgICAgICAgKiBDb25maWd1cmF0aW9uIG9wdGlvbnMuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBrZXlTaXplIFRoZSBrZXkgc2l6ZSBpbiB3b3JkcyB0byBnZW5lcmF0ZS4gRGVmYXVsdDogNCAoMTI4IGJpdHMpCgkgICAgICAgICAqIEBwcm9wZXJ0eSB7SGFzaGVyfSBoYXNoZXIgVGhlIGhhc2hlciB0byB1c2UuIERlZmF1bHQ6IFNIQTEKCSAgICAgICAgICogQHByb3BlcnR5IHtudW1iZXJ9IGl0ZXJhdGlvbnMgVGhlIG51bWJlciBvZiBpdGVyYXRpb25zIHRvIHBlcmZvcm0uIERlZmF1bHQ6IDEKCSAgICAgICAgICovCgkgICAgICAgIGNmZzogQmFzZS5leHRlbmQoewoJICAgICAgICAgICAga2V5U2l6ZTogMTI4LzMyLAoJICAgICAgICAgICAgaGFzaGVyOiBTSEExLAoJICAgICAgICAgICAgaXRlcmF0aW9uczogMQoJICAgICAgICB9KSwKCgkgICAgICAgIC8qKgoJICAgICAgICAgKiBJbml0aWFsaXplcyBhIG5ld2x5IGNyZWF0ZWQga2V5IGRlcml2YXRpb24gZnVuY3Rpb24uCgkgICAgICAgICAqCgkgICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBjZmcgKE9wdGlvbmFsKSBUaGUgY29uZmlndXJhdGlvbiBvcHRpb25zIHRvIHVzZSBmb3IgdGhlIGRlcml2YXRpb24uCgkgICAgICAgICAqCgkgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAqCgkgICAgICAgICAqICAgICB2YXIga2RmID0gQ3J5cHRvSlMuYWxnby5QQktERjIuY3JlYXRlKCk7CgkgICAgICAgICAqICAgICB2YXIga2RmID0gQ3J5cHRvSlMuYWxnby5QQktERjIuY3JlYXRlKHsga2V5U2l6ZTogOCB9KTsKCSAgICAgICAgICogICAgIHZhciBrZGYgPSBDcnlwdG9KUy5hbGdvLlBCS0RGMi5jcmVhdGUoeyBrZXlTaXplOiA4LCBpdGVyYXRpb25zOiAxMDAwIH0pOwoJICAgICAgICAgKi8KCSAgICAgICAgaW5pdDogZnVuY3Rpb24gKGNmZykgewoJICAgICAgICAgICAgdGhpcy5jZmcgPSB0aGlzLmNmZy5leHRlbmQoY2ZnKTsKCSAgICAgICAgfSwKCgkgICAgICAgIC8qKgoJICAgICAgICAgKiBDb21wdXRlcyB0aGUgUGFzc3dvcmQtQmFzZWQgS2V5IERlcml2YXRpb24gRnVuY3Rpb24gMi4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtXb3JkQXJyYXl8c3RyaW5nfSBwYXNzd29yZCBUaGUgcGFzc3dvcmQuCgkgICAgICAgICAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30gc2FsdCBBIHNhbHQuCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge1dvcmRBcnJheX0gVGhlIGRlcml2ZWQga2V5LgoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIGtleSA9IGtkZi5jb21wdXRlKHBhc3N3b3JkLCBzYWx0KTsKCSAgICAgICAgICovCgkgICAgICAgIGNvbXB1dGU6IGZ1bmN0aW9uIChwYXNzd29yZCwgc2FsdCkgewoJICAgICAgICAgICAgLy8gU2hvcnRjdXQKCSAgICAgICAgICAgIHZhciBjZmcgPSB0aGlzLmNmZzsKCgkgICAgICAgICAgICAvLyBJbml0IEhNQUMKCSAgICAgICAgICAgIHZhciBobWFjID0gSE1BQy5jcmVhdGUoY2ZnLmhhc2hlciwgcGFzc3dvcmQpOwoKCSAgICAgICAgICAgIC8vIEluaXRpYWwgdmFsdWVzCgkgICAgICAgICAgICB2YXIgZGVyaXZlZEtleSA9IFdvcmRBcnJheS5jcmVhdGUoKTsKCSAgICAgICAgICAgIHZhciBibG9ja0luZGV4ID0gV29yZEFycmF5LmNyZWF0ZShbMHgwMDAwMDAwMV0pOwoKCSAgICAgICAgICAgIC8vIFNob3J0Y3V0cwoJICAgICAgICAgICAgdmFyIGRlcml2ZWRLZXlXb3JkcyA9IGRlcml2ZWRLZXkud29yZHM7CgkgICAgICAgICAgICB2YXIgYmxvY2tJbmRleFdvcmRzID0gYmxvY2tJbmRleC53b3JkczsKCSAgICAgICAgICAgIHZhciBrZXlTaXplID0gY2ZnLmtleVNpemU7CgkgICAgICAgICAgICB2YXIgaXRlcmF0aW9ucyA9IGNmZy5pdGVyYXRpb25zOwoKCSAgICAgICAgICAgIC8vIEdlbmVyYXRlIGtleQoJICAgICAgICAgICAgd2hpbGUgKGRlcml2ZWRLZXlXb3Jkcy5sZW5ndGggPCBrZXlTaXplKSB7CgkgICAgICAgICAgICAgICAgdmFyIGJsb2NrID0gaG1hYy51cGRhdGUoc2FsdCkuZmluYWxpemUoYmxvY2tJbmRleCk7CgkgICAgICAgICAgICAgICAgaG1hYy5yZXNldCgpOwoKCSAgICAgICAgICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgICAgICAgICB2YXIgYmxvY2tXb3JkcyA9IGJsb2NrLndvcmRzOwoJICAgICAgICAgICAgICAgIHZhciBibG9ja1dvcmRzTGVuZ3RoID0gYmxvY2tXb3Jkcy5sZW5ndGg7CgoJICAgICAgICAgICAgICAgIC8vIEl0ZXJhdGlvbnMKCSAgICAgICAgICAgICAgICB2YXIgaW50ZXJtZWRpYXRlID0gYmxvY2s7CgkgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBpdGVyYXRpb25zOyBpKyspIHsKCSAgICAgICAgICAgICAgICAgICAgaW50ZXJtZWRpYXRlID0gaG1hYy5maW5hbGl6ZShpbnRlcm1lZGlhdGUpOwoJICAgICAgICAgICAgICAgICAgICBobWFjLnJlc2V0KCk7CgoJICAgICAgICAgICAgICAgICAgICAvLyBTaG9ydGN1dAoJICAgICAgICAgICAgICAgICAgICB2YXIgaW50ZXJtZWRpYXRlV29yZHMgPSBpbnRlcm1lZGlhdGUud29yZHM7CgoJICAgICAgICAgICAgICAgICAgICAvLyBYT1IgaW50ZXJtZWRpYXRlIHdpdGggYmxvY2sKCSAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBibG9ja1dvcmRzTGVuZ3RoOyBqKyspIHsKCSAgICAgICAgICAgICAgICAgICAgICAgIGJsb2NrV29yZHNbal0gXj0gaW50ZXJtZWRpYXRlV29yZHNbal07CgkgICAgICAgICAgICAgICAgICAgIH0KCSAgICAgICAgICAgICAgICB9CgoJICAgICAgICAgICAgICAgIGRlcml2ZWRLZXkuY29uY2F0KGJsb2NrKTsKCSAgICAgICAgICAgICAgICBibG9ja0luZGV4V29yZHNbMF0rKzsKCSAgICAgICAgICAgIH0KCSAgICAgICAgICAgIGRlcml2ZWRLZXkuc2lnQnl0ZXMgPSBrZXlTaXplICogNDsKCgkgICAgICAgICAgICByZXR1cm4gZGVyaXZlZEtleTsKCSAgICAgICAgfQoJICAgIH0pOwoKCSAgICAvKioKCSAgICAgKiBDb21wdXRlcyB0aGUgUGFzc3dvcmQtQmFzZWQgS2V5IERlcml2YXRpb24gRnVuY3Rpb24gMi4KCSAgICAgKgoJICAgICAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30gcGFzc3dvcmQgVGhlIHBhc3N3b3JkLgoJICAgICAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30gc2FsdCBBIHNhbHQuCgkgICAgICogQHBhcmFtIHtPYmplY3R9IGNmZyAoT3B0aW9uYWwpIFRoZSBjb25maWd1cmF0aW9uIG9wdGlvbnMgdG8gdXNlIGZvciB0aGlzIGNvbXB1dGF0aW9uLgoJICAgICAqCgkgICAgICogQHJldHVybiB7V29yZEFycmF5fSBUaGUgZGVyaXZlZCBrZXkuCgkgICAgICoKCSAgICAgKiBAc3RhdGljCgkgICAgICoKCSAgICAgKiBAZXhhbXBsZQoJICAgICAqCgkgICAgICogICAgIHZhciBrZXkgPSBDcnlwdG9KUy5QQktERjIocGFzc3dvcmQsIHNhbHQpOwoJICAgICAqICAgICB2YXIga2V5ID0gQ3J5cHRvSlMuUEJLREYyKHBhc3N3b3JkLCBzYWx0LCB7IGtleVNpemU6IDggfSk7CgkgICAgICogICAgIHZhciBrZXkgPSBDcnlwdG9KUy5QQktERjIocGFzc3dvcmQsIHNhbHQsIHsga2V5U2l6ZTogOCwgaXRlcmF0aW9uczogMTAwMCB9KTsKCSAgICAgKi8KCSAgICBDLlBCS0RGMiA9IGZ1bmN0aW9uIChwYXNzd29yZCwgc2FsdCwgY2ZnKSB7CgkgICAgICAgIHJldHVybiBQQktERjIuY3JlYXRlKGNmZykuY29tcHV0ZShwYXNzd29yZCwgc2FsdCk7CgkgICAgfTsKCX0oKSk7CgoKCShmdW5jdGlvbiAoKSB7CgkgICAgLy8gU2hvcnRjdXRzCgkgICAgdmFyIEMgPSBDcnlwdG9KUzsKCSAgICB2YXIgQ19saWIgPSBDLmxpYjsKCSAgICB2YXIgQmFzZSA9IENfbGliLkJhc2U7CgkgICAgdmFyIFdvcmRBcnJheSA9IENfbGliLldvcmRBcnJheTsKCSAgICB2YXIgQ19hbGdvID0gQy5hbGdvOwoJICAgIHZhciBNRDUgPSBDX2FsZ28uTUQ1OwoKCSAgICAvKioKCSAgICAgKiBUaGlzIGtleSBkZXJpdmF0aW9uIGZ1bmN0aW9uIGlzIG1lYW50IHRvIGNvbmZvcm0gd2l0aCBFVlBfQnl0ZXNUb0tleS4KCSAgICAgKiB3d3cub3BlbnNzbC5vcmcvZG9jcy9jcnlwdG8vRVZQX0J5dGVzVG9LZXkuaHRtbAoJICAgICAqLwoJICAgIHZhciBFdnBLREYgPSBDX2FsZ28uRXZwS0RGID0gQmFzZS5leHRlbmQoewoJICAgICAgICAvKioKCSAgICAgICAgICogQ29uZmlndXJhdGlvbiBvcHRpb25zLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcHJvcGVydHkge251bWJlcn0ga2V5U2l6ZSBUaGUga2V5IHNpemUgaW4gd29yZHMgdG8gZ2VuZXJhdGUuIERlZmF1bHQ6IDQgKDEyOCBiaXRzKQoJICAgICAgICAgKiBAcHJvcGVydHkge0hhc2hlcn0gaGFzaGVyIFRoZSBoYXNoIGFsZ29yaXRobSB0byB1c2UuIERlZmF1bHQ6IE1ENQoJICAgICAgICAgKiBAcHJvcGVydHkge251bWJlcn0gaXRlcmF0aW9ucyBUaGUgbnVtYmVyIG9mIGl0ZXJhdGlvbnMgdG8gcGVyZm9ybS4gRGVmYXVsdDogMQoJICAgICAgICAgKi8KCSAgICAgICAgY2ZnOiBCYXNlLmV4dGVuZCh7CgkgICAgICAgICAgICBrZXlTaXplOiAxMjgvMzIsCgkgICAgICAgICAgICBoYXNoZXI6IE1ENSwKCSAgICAgICAgICAgIGl0ZXJhdGlvbnM6IDEKCSAgICAgICAgfSksCgoJICAgICAgICAvKioKCSAgICAgICAgICogSW5pdGlhbGl6ZXMgYSBuZXdseSBjcmVhdGVkIGtleSBkZXJpdmF0aW9uIGZ1bmN0aW9uLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gY2ZnIChPcHRpb25hbCkgVGhlIGNvbmZpZ3VyYXRpb24gb3B0aW9ucyB0byB1c2UgZm9yIHRoZSBkZXJpdmF0aW9uLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIGtkZiA9IENyeXB0b0pTLmFsZ28uRXZwS0RGLmNyZWF0ZSgpOwoJICAgICAgICAgKiAgICAgdmFyIGtkZiA9IENyeXB0b0pTLmFsZ28uRXZwS0RGLmNyZWF0ZSh7IGtleVNpemU6IDggfSk7CgkgICAgICAgICAqICAgICB2YXIga2RmID0gQ3J5cHRvSlMuYWxnby5FdnBLREYuY3JlYXRlKHsga2V5U2l6ZTogOCwgaXRlcmF0aW9uczogMTAwMCB9KTsKCSAgICAgICAgICovCgkgICAgICAgIGluaXQ6IGZ1bmN0aW9uIChjZmcpIHsKCSAgICAgICAgICAgIHRoaXMuY2ZnID0gdGhpcy5jZmcuZXh0ZW5kKGNmZyk7CgkgICAgICAgIH0sCgoJICAgICAgICAvKioKCSAgICAgICAgICogRGVyaXZlcyBhIGtleSBmcm9tIGEgcGFzc3dvcmQuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30gcGFzc3dvcmQgVGhlIHBhc3N3b3JkLgoJICAgICAgICAgKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IHNhbHQgQSBzYWx0LgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcmV0dXJuIHtXb3JkQXJyYXl9IFRoZSBkZXJpdmVkIGtleS4KCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciBrZXkgPSBrZGYuY29tcHV0ZShwYXNzd29yZCwgc2FsdCk7CgkgICAgICAgICAqLwoJICAgICAgICBjb21wdXRlOiBmdW5jdGlvbiAocGFzc3dvcmQsIHNhbHQpIHsKCSAgICAgICAgICAgIC8vIFNob3J0Y3V0CgkgICAgICAgICAgICB2YXIgY2ZnID0gdGhpcy5jZmc7CgoJICAgICAgICAgICAgLy8gSW5pdCBoYXNoZXIKCSAgICAgICAgICAgIHZhciBoYXNoZXIgPSBjZmcuaGFzaGVyLmNyZWF0ZSgpOwoKCSAgICAgICAgICAgIC8vIEluaXRpYWwgdmFsdWVzCgkgICAgICAgICAgICB2YXIgZGVyaXZlZEtleSA9IFdvcmRBcnJheS5jcmVhdGUoKTsKCgkgICAgICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgICAgIHZhciBkZXJpdmVkS2V5V29yZHMgPSBkZXJpdmVkS2V5LndvcmRzOwoJICAgICAgICAgICAgdmFyIGtleVNpemUgPSBjZmcua2V5U2l6ZTsKCSAgICAgICAgICAgIHZhciBpdGVyYXRpb25zID0gY2ZnLml0ZXJhdGlvbnM7CgoJICAgICAgICAgICAgLy8gR2VuZXJhdGUga2V5CgkgICAgICAgICAgICB3aGlsZSAoZGVyaXZlZEtleVdvcmRzLmxlbmd0aCA8IGtleVNpemUpIHsKCSAgICAgICAgICAgICAgICBpZiAoYmxvY2spIHsKCSAgICAgICAgICAgICAgICAgICAgaGFzaGVyLnVwZGF0ZShibG9jayk7CgkgICAgICAgICAgICAgICAgfQoJICAgICAgICAgICAgICAgIHZhciBibG9jayA9IGhhc2hlci51cGRhdGUocGFzc3dvcmQpLmZpbmFsaXplKHNhbHQpOwoJICAgICAgICAgICAgICAgIGhhc2hlci5yZXNldCgpOwoKCSAgICAgICAgICAgICAgICAvLyBJdGVyYXRpb25zCgkgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBpdGVyYXRpb25zOyBpKyspIHsKCSAgICAgICAgICAgICAgICAgICAgYmxvY2sgPSBoYXNoZXIuZmluYWxpemUoYmxvY2spOwoJICAgICAgICAgICAgICAgICAgICBoYXNoZXIucmVzZXQoKTsKCSAgICAgICAgICAgICAgICB9CgoJICAgICAgICAgICAgICAgIGRlcml2ZWRLZXkuY29uY2F0KGJsb2NrKTsKCSAgICAgICAgICAgIH0KCSAgICAgICAgICAgIGRlcml2ZWRLZXkuc2lnQnl0ZXMgPSBrZXlTaXplICogNDsKCgkgICAgICAgICAgICByZXR1cm4gZGVyaXZlZEtleTsKCSAgICAgICAgfQoJICAgIH0pOwoKCSAgICAvKioKCSAgICAgKiBEZXJpdmVzIGEga2V5IGZyb20gYSBwYXNzd29yZC4KCSAgICAgKgoJICAgICAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30gcGFzc3dvcmQgVGhlIHBhc3N3b3JkLgoJICAgICAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30gc2FsdCBBIHNhbHQuCgkgICAgICogQHBhcmFtIHtPYmplY3R9IGNmZyAoT3B0aW9uYWwpIFRoZSBjb25maWd1cmF0aW9uIG9wdGlvbnMgdG8gdXNlIGZvciB0aGlzIGNvbXB1dGF0aW9uLgoJICAgICAqCgkgICAgICogQHJldHVybiB7V29yZEFycmF5fSBUaGUgZGVyaXZlZCBrZXkuCgkgICAgICoKCSAgICAgKiBAc3RhdGljCgkgICAgICoKCSAgICAgKiBAZXhhbXBsZQoJICAgICAqCgkgICAgICogICAgIHZhciBrZXkgPSBDcnlwdG9KUy5FdnBLREYocGFzc3dvcmQsIHNhbHQpOwoJICAgICAqICAgICB2YXIga2V5ID0gQ3J5cHRvSlMuRXZwS0RGKHBhc3N3b3JkLCBzYWx0LCB7IGtleVNpemU6IDggfSk7CgkgICAgICogICAgIHZhciBrZXkgPSBDcnlwdG9KUy5FdnBLREYocGFzc3dvcmQsIHNhbHQsIHsga2V5U2l6ZTogOCwgaXRlcmF0aW9uczogMTAwMCB9KTsKCSAgICAgKi8KCSAgICBDLkV2cEtERiA9IGZ1bmN0aW9uIChwYXNzd29yZCwgc2FsdCwgY2ZnKSB7CgkgICAgICAgIHJldHVybiBFdnBLREYuY3JlYXRlKGNmZykuY29tcHV0ZShwYXNzd29yZCwgc2FsdCk7CgkgICAgfTsKCX0oKSk7CgoKCShmdW5jdGlvbiAoKSB7CgkgICAgLy8gU2hvcnRjdXRzCgkgICAgdmFyIEMgPSBDcnlwdG9KUzsKCSAgICB2YXIgQ19saWIgPSBDLmxpYjsKCSAgICB2YXIgV29yZEFycmF5ID0gQ19saWIuV29yZEFycmF5OwoJICAgIHZhciBDX2FsZ28gPSBDLmFsZ287CgkgICAgdmFyIFNIQTI1NiA9IENfYWxnby5TSEEyNTY7CgoJICAgIC8qKgoJICAgICAqIFNIQS0yMjQgaGFzaCBhbGdvcml0aG0uCgkgICAgICovCgkgICAgdmFyIFNIQTIyNCA9IENfYWxnby5TSEEyMjQgPSBTSEEyNTYuZXh0ZW5kKHsKCSAgICAgICAgX2RvUmVzZXQ6IGZ1bmN0aW9uICgpIHsKCSAgICAgICAgICAgIHRoaXMuX2hhc2ggPSBuZXcgV29yZEFycmF5LmluaXQoWwoJICAgICAgICAgICAgICAgIDB4YzEwNTllZDgsIDB4MzY3Y2Q1MDcsIDB4MzA3MGRkMTcsIDB4ZjcwZTU5MzksCgkgICAgICAgICAgICAgICAgMHhmZmMwMGIzMSwgMHg2ODU4MTUxMSwgMHg2NGY5OGZhNywgMHhiZWZhNGZhNAoJICAgICAgICAgICAgXSk7CgkgICAgICAgIH0sCgoJICAgICAgICBfZG9GaW5hbGl6ZTogZnVuY3Rpb24gKCkgewoJICAgICAgICAgICAgdmFyIGhhc2ggPSBTSEEyNTYuX2RvRmluYWxpemUuY2FsbCh0aGlzKTsKCgkgICAgICAgICAgICBoYXNoLnNpZ0J5dGVzIC09IDQ7CgoJICAgICAgICAgICAgcmV0dXJuIGhhc2g7CgkgICAgICAgIH0KCSAgICB9KTsKCgkgICAgLyoqCgkgICAgICogU2hvcnRjdXQgZnVuY3Rpb24gdG8gdGhlIGhhc2hlcidzIG9iamVjdCBpbnRlcmZhY2UuCgkgICAgICoKCSAgICAgKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IG1lc3NhZ2UgVGhlIG1lc3NhZ2UgdG8gaGFzaC4KCSAgICAgKgoJICAgICAqIEByZXR1cm4ge1dvcmRBcnJheX0gVGhlIGhhc2guCgkgICAgICoKCSAgICAgKiBAc3RhdGljCgkgICAgICoKCSAgICAgKiBAZXhhbXBsZQoJICAgICAqCgkgICAgICogICAgIHZhciBoYXNoID0gQ3J5cHRvSlMuU0hBMjI0KCdtZXNzYWdlJyk7CgkgICAgICogICAgIHZhciBoYXNoID0gQ3J5cHRvSlMuU0hBMjI0KHdvcmRBcnJheSk7CgkgICAgICovCgkgICAgQy5TSEEyMjQgPSBTSEEyNTYuX2NyZWF0ZUhlbHBlcihTSEEyMjQpOwoKCSAgICAvKioKCSAgICAgKiBTaG9ydGN1dCBmdW5jdGlvbiB0byB0aGUgSE1BQydzIG9iamVjdCBpbnRlcmZhY2UuCgkgICAgICoKCSAgICAgKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IG1lc3NhZ2UgVGhlIG1lc3NhZ2UgdG8gaGFzaC4KCSAgICAgKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IGtleSBUaGUgc2VjcmV0IGtleS4KCSAgICAgKgoJICAgICAqIEByZXR1cm4ge1dvcmRBcnJheX0gVGhlIEhNQUMuCgkgICAgICoKCSAgICAgKiBAc3RhdGljCgkgICAgICoKCSAgICAgKiBAZXhhbXBsZQoJICAgICAqCgkgICAgICogICAgIHZhciBobWFjID0gQ3J5cHRvSlMuSG1hY1NIQTIyNChtZXNzYWdlLCBrZXkpOwoJICAgICAqLwoJICAgIEMuSG1hY1NIQTIyNCA9IFNIQTI1Ni5fY3JlYXRlSG1hY0hlbHBlcihTSEEyMjQpOwoJfSgpKTsKCgoJKGZ1bmN0aW9uICh1bmRlZmluZWQpIHsKCSAgICAvLyBTaG9ydGN1dHMKCSAgICB2YXIgQyA9IENyeXB0b0pTOwoJICAgIHZhciBDX2xpYiA9IEMubGliOwoJICAgIHZhciBCYXNlID0gQ19saWIuQmFzZTsKCSAgICB2YXIgWDMyV29yZEFycmF5ID0gQ19saWIuV29yZEFycmF5OwoKCSAgICAvKioKCSAgICAgKiB4NjQgbmFtZXNwYWNlLgoJICAgICAqLwoJICAgIHZhciBDX3g2NCA9IEMueDY0ID0ge307CgoJICAgIC8qKgoJICAgICAqIEEgNjQtYml0IHdvcmQuCgkgICAgICovCgkgICAgdmFyIFg2NFdvcmQgPSBDX3g2NC5Xb3JkID0gQmFzZS5leHRlbmQoewoJICAgICAgICAvKioKCSAgICAgICAgICogSW5pdGlhbGl6ZXMgYSBuZXdseSBjcmVhdGVkIDY0LWJpdCB3b3JkLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcGFyYW0ge251bWJlcn0gaGlnaCBUaGUgaGlnaCAzMiBiaXRzLgoJICAgICAgICAgKiBAcGFyYW0ge251bWJlcn0gbG93IFRoZSBsb3cgMzIgYml0cy4KCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciB4NjRXb3JkID0gQ3J5cHRvSlMueDY0LldvcmQuY3JlYXRlKDB4MDAwMTAyMDMsIDB4MDQwNTA2MDcpOwoJICAgICAgICAgKi8KCSAgICAgICAgaW5pdDogZnVuY3Rpb24gKGhpZ2gsIGxvdykgewoJICAgICAgICAgICAgdGhpcy5oaWdoID0gaGlnaDsKCSAgICAgICAgICAgIHRoaXMubG93ID0gbG93OwoJICAgICAgICB9CgoJICAgICAgICAvKioKCSAgICAgICAgICogQml0d2lzZSBOT1RzIHRoaXMgd29yZC4KCSAgICAgICAgICoKCSAgICAgICAgICogQHJldHVybiB7WDY0V29yZH0gQSBuZXcgeDY0LVdvcmQgb2JqZWN0IGFmdGVyIG5lZ2F0aW5nLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIG5lZ2F0ZWQgPSB4NjRXb3JkLm5vdCgpOwoJICAgICAgICAgKi8KCSAgICAgICAgLy8gbm90OiBmdW5jdGlvbiAoKSB7CgkgICAgICAgICAgICAvLyB2YXIgaGlnaCA9IH50aGlzLmhpZ2g7CgkgICAgICAgICAgICAvLyB2YXIgbG93ID0gfnRoaXMubG93OwoKCSAgICAgICAgICAgIC8vIHJldHVybiBYNjRXb3JkLmNyZWF0ZShoaWdoLCBsb3cpOwoJICAgICAgICAvLyB9LAoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIEJpdHdpc2UgQU5EcyB0aGlzIHdvcmQgd2l0aCB0aGUgcGFzc2VkIHdvcmQuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBwYXJhbSB7WDY0V29yZH0gd29yZCBUaGUgeDY0LVdvcmQgdG8gQU5EIHdpdGggdGhpcyB3b3JkLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcmV0dXJuIHtYNjRXb3JkfSBBIG5ldyB4NjQtV29yZCBvYmplY3QgYWZ0ZXIgQU5EaW5nLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIGFuZGVkID0geDY0V29yZC5hbmQoYW5vdGhlclg2NFdvcmQpOwoJICAgICAgICAgKi8KCSAgICAgICAgLy8gYW5kOiBmdW5jdGlvbiAod29yZCkgewoJICAgICAgICAgICAgLy8gdmFyIGhpZ2ggPSB0aGlzLmhpZ2ggJiB3b3JkLmhpZ2g7CgkgICAgICAgICAgICAvLyB2YXIgbG93ID0gdGhpcy5sb3cgJiB3b3JkLmxvdzsKCgkgICAgICAgICAgICAvLyByZXR1cm4gWDY0V29yZC5jcmVhdGUoaGlnaCwgbG93KTsKCSAgICAgICAgLy8gfSwKCgkgICAgICAgIC8qKgoJICAgICAgICAgKiBCaXR3aXNlIE9ScyB0aGlzIHdvcmQgd2l0aCB0aGUgcGFzc2VkIHdvcmQuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBwYXJhbSB7WDY0V29yZH0gd29yZCBUaGUgeDY0LVdvcmQgdG8gT1Igd2l0aCB0aGlzIHdvcmQuCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge1g2NFdvcmR9IEEgbmV3IHg2NC1Xb3JkIG9iamVjdCBhZnRlciBPUmluZy4KCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciBvcmVkID0geDY0V29yZC5vcihhbm90aGVyWDY0V29yZCk7CgkgICAgICAgICAqLwoJICAgICAgICAvLyBvcjogZnVuY3Rpb24gKHdvcmQpIHsKCSAgICAgICAgICAgIC8vIHZhciBoaWdoID0gdGhpcy5oaWdoIHwgd29yZC5oaWdoOwoJICAgICAgICAgICAgLy8gdmFyIGxvdyA9IHRoaXMubG93IHwgd29yZC5sb3c7CgoJICAgICAgICAgICAgLy8gcmV0dXJuIFg2NFdvcmQuY3JlYXRlKGhpZ2gsIGxvdyk7CgkgICAgICAgIC8vIH0sCgoJICAgICAgICAvKioKCSAgICAgICAgICogQml0d2lzZSBYT1JzIHRoaXMgd29yZCB3aXRoIHRoZSBwYXNzZWQgd29yZC4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtYNjRXb3JkfSB3b3JkIFRoZSB4NjQtV29yZCB0byBYT1Igd2l0aCB0aGlzIHdvcmQuCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge1g2NFdvcmR9IEEgbmV3IHg2NC1Xb3JkIG9iamVjdCBhZnRlciBYT1JpbmcuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAqCgkgICAgICAgICAqICAgICB2YXIgeG9yZWQgPSB4NjRXb3JkLnhvcihhbm90aGVyWDY0V29yZCk7CgkgICAgICAgICAqLwoJICAgICAgICAvLyB4b3I6IGZ1bmN0aW9uICh3b3JkKSB7CgkgICAgICAgICAgICAvLyB2YXIgaGlnaCA9IHRoaXMuaGlnaCBeIHdvcmQuaGlnaDsKCSAgICAgICAgICAgIC8vIHZhciBsb3cgPSB0aGlzLmxvdyBeIHdvcmQubG93OwoKCSAgICAgICAgICAgIC8vIHJldHVybiBYNjRXb3JkLmNyZWF0ZShoaWdoLCBsb3cpOwoJICAgICAgICAvLyB9LAoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIFNoaWZ0cyB0aGlzIHdvcmQgbiBiaXRzIHRvIHRoZSBsZWZ0LgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcGFyYW0ge251bWJlcn0gbiBUaGUgbnVtYmVyIG9mIGJpdHMgdG8gc2hpZnQuCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge1g2NFdvcmR9IEEgbmV3IHg2NC1Xb3JkIG9iamVjdCBhZnRlciBzaGlmdGluZy4KCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciBzaGlmdGVkID0geDY0V29yZC5zaGlmdEwoMjUpOwoJICAgICAgICAgKi8KCSAgICAgICAgLy8gc2hpZnRMOiBmdW5jdGlvbiAobikgewoJICAgICAgICAgICAgLy8gaWYgKG4gPCAzMikgewoJICAgICAgICAgICAgICAgIC8vIHZhciBoaWdoID0gKHRoaXMuaGlnaCA8PCBuKSB8ICh0aGlzLmxvdyA+Pj4gKDMyIC0gbikpOwoJICAgICAgICAgICAgICAgIC8vIHZhciBsb3cgPSB0aGlzLmxvdyA8PCBuOwoJICAgICAgICAgICAgLy8gfSBlbHNlIHsKCSAgICAgICAgICAgICAgICAvLyB2YXIgaGlnaCA9IHRoaXMubG93IDw8IChuIC0gMzIpOwoJICAgICAgICAgICAgICAgIC8vIHZhciBsb3cgPSAwOwoJICAgICAgICAgICAgLy8gfQoKCSAgICAgICAgICAgIC8vIHJldHVybiBYNjRXb3JkLmNyZWF0ZShoaWdoLCBsb3cpOwoJICAgICAgICAvLyB9LAoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIFNoaWZ0cyB0aGlzIHdvcmQgbiBiaXRzIHRvIHRoZSByaWdodC4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtudW1iZXJ9IG4gVGhlIG51bWJlciBvZiBiaXRzIHRvIHNoaWZ0LgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcmV0dXJuIHtYNjRXb3JkfSBBIG5ldyB4NjQtV29yZCBvYmplY3QgYWZ0ZXIgc2hpZnRpbmcuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAqCgkgICAgICAgICAqICAgICB2YXIgc2hpZnRlZCA9IHg2NFdvcmQuc2hpZnRSKDcpOwoJICAgICAgICAgKi8KCSAgICAgICAgLy8gc2hpZnRSOiBmdW5jdGlvbiAobikgewoJICAgICAgICAgICAgLy8gaWYgKG4gPCAzMikgewoJICAgICAgICAgICAgICAgIC8vIHZhciBsb3cgPSAodGhpcy5sb3cgPj4+IG4pIHwgKHRoaXMuaGlnaCA8PCAoMzIgLSBuKSk7CgkgICAgICAgICAgICAgICAgLy8gdmFyIGhpZ2ggPSB0aGlzLmhpZ2ggPj4+IG47CgkgICAgICAgICAgICAvLyB9IGVsc2UgewoJICAgICAgICAgICAgICAgIC8vIHZhciBsb3cgPSB0aGlzLmhpZ2ggPj4+IChuIC0gMzIpOwoJICAgICAgICAgICAgICAgIC8vIHZhciBoaWdoID0gMDsKCSAgICAgICAgICAgIC8vIH0KCgkgICAgICAgICAgICAvLyByZXR1cm4gWDY0V29yZC5jcmVhdGUoaGlnaCwgbG93KTsKCSAgICAgICAgLy8gfSwKCgkgICAgICAgIC8qKgoJICAgICAgICAgKiBSb3RhdGVzIHRoaXMgd29yZCBuIGJpdHMgdG8gdGhlIGxlZnQuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSBuIFRoZSBudW1iZXIgb2YgYml0cyB0byByb3RhdGUuCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge1g2NFdvcmR9IEEgbmV3IHg2NC1Xb3JkIG9iamVjdCBhZnRlciByb3RhdGluZy4KCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciByb3RhdGVkID0geDY0V29yZC5yb3RMKDI1KTsKCSAgICAgICAgICovCgkgICAgICAgIC8vIHJvdEw6IGZ1bmN0aW9uIChuKSB7CgkgICAgICAgICAgICAvLyByZXR1cm4gdGhpcy5zaGlmdEwobikub3IodGhpcy5zaGlmdFIoNjQgLSBuKSk7CgkgICAgICAgIC8vIH0sCgoJICAgICAgICAvKioKCSAgICAgICAgICogUm90YXRlcyB0aGlzIHdvcmQgbiBiaXRzIHRvIHRoZSByaWdodC4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtudW1iZXJ9IG4gVGhlIG51bWJlciBvZiBiaXRzIHRvIHJvdGF0ZS4KCSAgICAgICAgICoKCSAgICAgICAgICogQHJldHVybiB7WDY0V29yZH0gQSBuZXcgeDY0LVdvcmQgb2JqZWN0IGFmdGVyIHJvdGF0aW5nLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIHJvdGF0ZWQgPSB4NjRXb3JkLnJvdFIoNyk7CgkgICAgICAgICAqLwoJICAgICAgICAvLyByb3RSOiBmdW5jdGlvbiAobikgewoJICAgICAgICAgICAgLy8gcmV0dXJuIHRoaXMuc2hpZnRSKG4pLm9yKHRoaXMuc2hpZnRMKDY0IC0gbikpOwoJICAgICAgICAvLyB9LAoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIEFkZHMgdGhpcyB3b3JkIHdpdGggdGhlIHBhc3NlZCB3b3JkLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcGFyYW0ge1g2NFdvcmR9IHdvcmQgVGhlIHg2NC1Xb3JkIHRvIGFkZCB3aXRoIHRoaXMgd29yZC4KCSAgICAgICAgICoKCSAgICAgICAgICogQHJldHVybiB7WDY0V29yZH0gQSBuZXcgeDY0LVdvcmQgb2JqZWN0IGFmdGVyIGFkZGluZy4KCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciBhZGRlZCA9IHg2NFdvcmQuYWRkKGFub3RoZXJYNjRXb3JkKTsKCSAgICAgICAgICovCgkgICAgICAgIC8vIGFkZDogZnVuY3Rpb24gKHdvcmQpIHsKCSAgICAgICAgICAgIC8vIHZhciBsb3cgPSAodGhpcy5sb3cgKyB3b3JkLmxvdykgfCAwOwoJICAgICAgICAgICAgLy8gdmFyIGNhcnJ5ID0gKGxvdyA+Pj4gMCkgPCAodGhpcy5sb3cgPj4+IDApID8gMSA6IDA7CgkgICAgICAgICAgICAvLyB2YXIgaGlnaCA9ICh0aGlzLmhpZ2ggKyB3b3JkLmhpZ2ggKyBjYXJyeSkgfCAwOwoKCSAgICAgICAgICAgIC8vIHJldHVybiBYNjRXb3JkLmNyZWF0ZShoaWdoLCBsb3cpOwoJICAgICAgICAvLyB9CgkgICAgfSk7CgoJICAgIC8qKgoJICAgICAqIEFuIGFycmF5IG9mIDY0LWJpdCB3b3Jkcy4KCSAgICAgKgoJICAgICAqIEBwcm9wZXJ0eSB7QXJyYXl9IHdvcmRzIFRoZSBhcnJheSBvZiBDcnlwdG9KUy54NjQuV29yZCBvYmplY3RzLgoJICAgICAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBzaWdCeXRlcyBUaGUgbnVtYmVyIG9mIHNpZ25pZmljYW50IGJ5dGVzIGluIHRoaXMgd29yZCBhcnJheS4KCSAgICAgKi8KCSAgICB2YXIgWDY0V29yZEFycmF5ID0gQ194NjQuV29yZEFycmF5ID0gQmFzZS5leHRlbmQoewoJICAgICAgICAvKioKCSAgICAgICAgICogSW5pdGlhbGl6ZXMgYSBuZXdseSBjcmVhdGVkIHdvcmQgYXJyYXkuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IHdvcmRzIChPcHRpb25hbCkgQW4gYXJyYXkgb2YgQ3J5cHRvSlMueDY0LldvcmQgb2JqZWN0cy4KCSAgICAgICAgICogQHBhcmFtIHtudW1iZXJ9IHNpZ0J5dGVzIChPcHRpb25hbCkgVGhlIG51bWJlciBvZiBzaWduaWZpY2FudCBieXRlcyBpbiB0aGUgd29yZHMuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAqCgkgICAgICAgICAqICAgICB2YXIgd29yZEFycmF5ID0gQ3J5cHRvSlMueDY0LldvcmRBcnJheS5jcmVhdGUoKTsKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciB3b3JkQXJyYXkgPSBDcnlwdG9KUy54NjQuV29yZEFycmF5LmNyZWF0ZShbCgkgICAgICAgICAqICAgICAgICAgQ3J5cHRvSlMueDY0LldvcmQuY3JlYXRlKDB4MDAwMTAyMDMsIDB4MDQwNTA2MDcpLAoJICAgICAgICAgKiAgICAgICAgIENyeXB0b0pTLng2NC5Xb3JkLmNyZWF0ZSgweDE4MTkxYTFiLCAweDFjMWQxZTFmKQoJICAgICAgICAgKiAgICAgXSk7CgkgICAgICAgICAqCgkgICAgICAgICAqICAgICB2YXIgd29yZEFycmF5ID0gQ3J5cHRvSlMueDY0LldvcmRBcnJheS5jcmVhdGUoWwoJICAgICAgICAgKiAgICAgICAgIENyeXB0b0pTLng2NC5Xb3JkLmNyZWF0ZSgweDAwMDEwMjAzLCAweDA0MDUwNjA3KSwKCSAgICAgICAgICogICAgICAgICBDcnlwdG9KUy54NjQuV29yZC5jcmVhdGUoMHgxODE5MWExYiwgMHgxYzFkMWUxZikKCSAgICAgICAgICogICAgIF0sIDEwKTsKCSAgICAgICAgICovCgkgICAgICAgIGluaXQ6IGZ1bmN0aW9uICh3b3Jkcywgc2lnQnl0ZXMpIHsKCSAgICAgICAgICAgIHdvcmRzID0gdGhpcy53b3JkcyA9IHdvcmRzIHx8IFtdOwoKCSAgICAgICAgICAgIGlmIChzaWdCeXRlcyAhPSB1bmRlZmluZWQpIHsKCSAgICAgICAgICAgICAgICB0aGlzLnNpZ0J5dGVzID0gc2lnQnl0ZXM7CgkgICAgICAgICAgICB9IGVsc2UgewoJICAgICAgICAgICAgICAgIHRoaXMuc2lnQnl0ZXMgPSB3b3Jkcy5sZW5ndGggKiA4OwoJICAgICAgICAgICAgfQoJICAgICAgICB9LAoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIENvbnZlcnRzIHRoaXMgNjQtYml0IHdvcmQgYXJyYXkgdG8gYSAzMi1iaXQgd29yZCBhcnJheS4KCSAgICAgICAgICoKCSAgICAgICAgICogQHJldHVybiB7Q3J5cHRvSlMubGliLldvcmRBcnJheX0gVGhpcyB3b3JkIGFycmF5J3MgZGF0YSBhcyBhIDMyLWJpdCB3b3JkIGFycmF5LgoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIHgzMldvcmRBcnJheSA9IHg2NFdvcmRBcnJheS50b1gzMigpOwoJICAgICAgICAgKi8KCSAgICAgICAgdG9YMzI6IGZ1bmN0aW9uICgpIHsKCSAgICAgICAgICAgIC8vIFNob3J0Y3V0cwoJICAgICAgICAgICAgdmFyIHg2NFdvcmRzID0gdGhpcy53b3JkczsKCSAgICAgICAgICAgIHZhciB4NjRXb3Jkc0xlbmd0aCA9IHg2NFdvcmRzLmxlbmd0aDsKCgkgICAgICAgICAgICAvLyBDb252ZXJ0CgkgICAgICAgICAgICB2YXIgeDMyV29yZHMgPSBbXTsKCSAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgeDY0V29yZHNMZW5ndGg7IGkrKykgewoJICAgICAgICAgICAgICAgIHZhciB4NjRXb3JkID0geDY0V29yZHNbaV07CgkgICAgICAgICAgICAgICAgeDMyV29yZHMucHVzaCh4NjRXb3JkLmhpZ2gpOwoJICAgICAgICAgICAgICAgIHgzMldvcmRzLnB1c2goeDY0V29yZC5sb3cpOwoJICAgICAgICAgICAgfQoKCSAgICAgICAgICAgIHJldHVybiBYMzJXb3JkQXJyYXkuY3JlYXRlKHgzMldvcmRzLCB0aGlzLnNpZ0J5dGVzKTsKCSAgICAgICAgfSwKCgkgICAgICAgIC8qKgoJICAgICAgICAgKiBDcmVhdGVzIGEgY29weSBvZiB0aGlzIHdvcmQgYXJyYXkuCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge1g2NFdvcmRBcnJheX0gVGhlIGNsb25lLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIGNsb25lID0geDY0V29yZEFycmF5LmNsb25lKCk7CgkgICAgICAgICAqLwoJICAgICAgICBjbG9uZTogZnVuY3Rpb24gKCkgewoJICAgICAgICAgICAgdmFyIGNsb25lID0gQmFzZS5jbG9uZS5jYWxsKHRoaXMpOwoKCSAgICAgICAgICAgIC8vIENsb25lICJ3b3JkcyIgYXJyYXkKCSAgICAgICAgICAgIHZhciB3b3JkcyA9IGNsb25lLndvcmRzID0gdGhpcy53b3Jkcy5zbGljZSgwKTsKCgkgICAgICAgICAgICAvLyBDbG9uZSBlYWNoIFg2NFdvcmQgb2JqZWN0CgkgICAgICAgICAgICB2YXIgd29yZHNMZW5ndGggPSB3b3Jkcy5sZW5ndGg7CgkgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHdvcmRzTGVuZ3RoOyBpKyspIHsKCSAgICAgICAgICAgICAgICB3b3Jkc1tpXSA9IHdvcmRzW2ldLmNsb25lKCk7CgkgICAgICAgICAgICB9CgoJICAgICAgICAgICAgcmV0dXJuIGNsb25lOwoJICAgICAgICB9CgkgICAgfSk7Cgl9KCkpOwoKCgkoZnVuY3Rpb24gKE1hdGgpIHsKCSAgICAvLyBTaG9ydGN1dHMKCSAgICB2YXIgQyA9IENyeXB0b0pTOwoJICAgIHZhciBDX2xpYiA9IEMubGliOwoJICAgIHZhciBXb3JkQXJyYXkgPSBDX2xpYi5Xb3JkQXJyYXk7CgkgICAgdmFyIEhhc2hlciA9IENfbGliLkhhc2hlcjsKCSAgICB2YXIgQ194NjQgPSBDLng2NDsKCSAgICB2YXIgWDY0V29yZCA9IENfeDY0LldvcmQ7CgkgICAgdmFyIENfYWxnbyA9IEMuYWxnbzsKCgkgICAgLy8gQ29uc3RhbnRzIHRhYmxlcwoJICAgIHZhciBSSE9fT0ZGU0VUUyA9IFtdOwoJICAgIHZhciBQSV9JTkRFWEVTICA9IFtdOwoJICAgIHZhciBST1VORF9DT05TVEFOVFMgPSBbXTsKCgkgICAgLy8gQ29tcHV0ZSBDb25zdGFudHMKCSAgICAoZnVuY3Rpb24gKCkgewoJICAgICAgICAvLyBDb21wdXRlIHJobyBvZmZzZXQgY29uc3RhbnRzCgkgICAgICAgIHZhciB4ID0gMSwgeSA9IDA7CgkgICAgICAgIGZvciAodmFyIHQgPSAwOyB0IDwgMjQ7IHQrKykgewoJICAgICAgICAgICAgUkhPX09GRlNFVFNbeCArIDUgKiB5XSA9ICgodCArIDEpICogKHQgKyAyKSAvIDIpICUgNjQ7CgoJICAgICAgICAgICAgdmFyIG5ld1ggPSB5ICUgNTsKCSAgICAgICAgICAgIHZhciBuZXdZID0gKDIgKiB4ICsgMyAqIHkpICUgNTsKCSAgICAgICAgICAgIHggPSBuZXdYOwoJICAgICAgICAgICAgeSA9IG5ld1k7CgkgICAgICAgIH0KCgkgICAgICAgIC8vIENvbXB1dGUgcGkgaW5kZXggY29uc3RhbnRzCgkgICAgICAgIGZvciAodmFyIHggPSAwOyB4IDwgNTsgeCsrKSB7CgkgICAgICAgICAgICBmb3IgKHZhciB5ID0gMDsgeSA8IDU7IHkrKykgewoJICAgICAgICAgICAgICAgIFBJX0lOREVYRVNbeCArIDUgKiB5XSA9IHkgKyAoKDIgKiB4ICsgMyAqIHkpICUgNSkgKiA1OwoJICAgICAgICAgICAgfQoJICAgICAgICB9CgoJICAgICAgICAvLyBDb21wdXRlIHJvdW5kIGNvbnN0YW50cwoJICAgICAgICB2YXIgTEZTUiA9IDB4MDE7CgkgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMjQ7IGkrKykgewoJICAgICAgICAgICAgdmFyIHJvdW5kQ29uc3RhbnRNc3cgPSAwOwoJICAgICAgICAgICAgdmFyIHJvdW5kQ29uc3RhbnRMc3cgPSAwOwoKCSAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgNzsgaisrKSB7CgkgICAgICAgICAgICAgICAgaWYgKExGU1IgJiAweDAxKSB7CgkgICAgICAgICAgICAgICAgICAgIHZhciBiaXRQb3NpdGlvbiA9ICgxIDw8IGopIC0gMTsKCSAgICAgICAgICAgICAgICAgICAgaWYgKGJpdFBvc2l0aW9uIDwgMzIpIHsKCSAgICAgICAgICAgICAgICAgICAgICAgIHJvdW5kQ29uc3RhbnRMc3cgXj0gMSA8PCBiaXRQb3NpdGlvbjsKCSAgICAgICAgICAgICAgICAgICAgfSBlbHNlIC8qIGlmIChiaXRQb3NpdGlvbiA+PSAzMikgKi8gewoJICAgICAgICAgICAgICAgICAgICAgICAgcm91bmRDb25zdGFudE1zdyBePSAxIDw8IChiaXRQb3NpdGlvbiAtIDMyKTsKCSAgICAgICAgICAgICAgICAgICAgfQoJICAgICAgICAgICAgICAgIH0KCgkgICAgICAgICAgICAgICAgLy8gQ29tcHV0ZSBuZXh0IExGU1IKCSAgICAgICAgICAgICAgICBpZiAoTEZTUiAmIDB4ODApIHsKCSAgICAgICAgICAgICAgICAgICAgLy8gUHJpbWl0aXZlIHBvbHlub21pYWwgb3ZlciBHRigyKTogeF44ICsgeF42ICsgeF41ICsgeF40ICsgMQoJICAgICAgICAgICAgICAgICAgICBMRlNSID0gKExGU1IgPDwgMSkgXiAweDcxOwoJICAgICAgICAgICAgICAgIH0gZWxzZSB7CgkgICAgICAgICAgICAgICAgICAgIExGU1IgPDw9IDE7CgkgICAgICAgICAgICAgICAgfQoJICAgICAgICAgICAgfQoKCSAgICAgICAgICAgIFJPVU5EX0NPTlNUQU5UU1tpXSA9IFg2NFdvcmQuY3JlYXRlKHJvdW5kQ29uc3RhbnRNc3csIHJvdW5kQ29uc3RhbnRMc3cpOwoJICAgICAgICB9CgkgICAgfSgpKTsKCgkgICAgLy8gUmV1c2FibGUgb2JqZWN0cyBmb3IgdGVtcG9yYXJ5IHZhbHVlcwoJICAgIHZhciBUID0gW107CgkgICAgKGZ1bmN0aW9uICgpIHsKCSAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAyNTsgaSsrKSB7CgkgICAgICAgICAgICBUW2ldID0gWDY0V29yZC5jcmVhdGUoKTsKCSAgICAgICAgfQoJICAgIH0oKSk7CgoJICAgIC8qKgoJICAgICAqIFNIQS0zIGhhc2ggYWxnb3JpdGhtLgoJICAgICAqLwoJICAgIHZhciBTSEEzID0gQ19hbGdvLlNIQTMgPSBIYXNoZXIuZXh0ZW5kKHsKCSAgICAgICAgLyoqCgkgICAgICAgICAqIENvbmZpZ3VyYXRpb24gb3B0aW9ucy4KCSAgICAgICAgICoKCSAgICAgICAgICogQHByb3BlcnR5IHtudW1iZXJ9IG91dHB1dExlbmd0aAoJICAgICAgICAgKiAgIFRoZSBkZXNpcmVkIG51bWJlciBvZiBiaXRzIGluIHRoZSBvdXRwdXQgaGFzaC4KCSAgICAgICAgICogICBPbmx5IHZhbHVlcyBwZXJtaXR0ZWQgYXJlOiAyMjQsIDI1NiwgMzg0LCA1MTIuCgkgICAgICAgICAqICAgRGVmYXVsdDogNTEyCgkgICAgICAgICAqLwoJICAgICAgICBjZmc6IEhhc2hlci5jZmcuZXh0ZW5kKHsKCSAgICAgICAgICAgIG91dHB1dExlbmd0aDogNTEyCgkgICAgICAgIH0pLAoKCSAgICAgICAgX2RvUmVzZXQ6IGZ1bmN0aW9uICgpIHsKCSAgICAgICAgICAgIHZhciBzdGF0ZSA9IHRoaXMuX3N0YXRlID0gW10KCSAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMjU7IGkrKykgewoJICAgICAgICAgICAgICAgIHN0YXRlW2ldID0gbmV3IFg2NFdvcmQuaW5pdCgpOwoJICAgICAgICAgICAgfQoKCSAgICAgICAgICAgIHRoaXMuYmxvY2tTaXplID0gKDE2MDAgLSAyICogdGhpcy5jZmcub3V0cHV0TGVuZ3RoKSAvIDMyOwoJICAgICAgICB9LAoKCSAgICAgICAgX2RvUHJvY2Vzc0Jsb2NrOiBmdW5jdGlvbiAoTSwgb2Zmc2V0KSB7CgkgICAgICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgICAgIHZhciBzdGF0ZSA9IHRoaXMuX3N0YXRlOwoJICAgICAgICAgICAgdmFyIG5CbG9ja1NpemVMYW5lcyA9IHRoaXMuYmxvY2tTaXplIC8gMjsKCgkgICAgICAgICAgICAvLyBBYnNvcmIKCSAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbkJsb2NrU2l6ZUxhbmVzOyBpKyspIHsKCSAgICAgICAgICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgICAgICAgICB2YXIgTTJpICA9IE1bb2Zmc2V0ICsgMiAqIGldOwoJICAgICAgICAgICAgICAgIHZhciBNMmkxID0gTVtvZmZzZXQgKyAyICogaSArIDFdOwoKCSAgICAgICAgICAgICAgICAvLyBTd2FwIGVuZGlhbgoJICAgICAgICAgICAgICAgIE0yaSA9ICgKCSAgICAgICAgICAgICAgICAgICAgKCgoTTJpIDw8IDgpICB8IChNMmkgPj4+IDI0KSkgJiAweDAwZmYwMGZmKSB8CgkgICAgICAgICAgICAgICAgICAgICgoKE0yaSA8PCAyNCkgfCAoTTJpID4+PiA4KSkgICYgMHhmZjAwZmYwMCkKCSAgICAgICAgICAgICAgICApOwoJICAgICAgICAgICAgICAgIE0yaTEgPSAoCgkgICAgICAgICAgICAgICAgICAgICgoKE0yaTEgPDwgOCkgIHwgKE0yaTEgPj4+IDI0KSkgJiAweDAwZmYwMGZmKSB8CgkgICAgICAgICAgICAgICAgICAgICgoKE0yaTEgPDwgMjQpIHwgKE0yaTEgPj4+IDgpKSAgJiAweGZmMDBmZjAwKQoJICAgICAgICAgICAgICAgICk7CgoJICAgICAgICAgICAgICAgIC8vIEFic29yYiBtZXNzYWdlIGludG8gc3RhdGUKCSAgICAgICAgICAgICAgICB2YXIgbGFuZSA9IHN0YXRlW2ldOwoJICAgICAgICAgICAgICAgIGxhbmUuaGlnaCBePSBNMmkxOwoJICAgICAgICAgICAgICAgIGxhbmUubG93ICBePSBNMmk7CgkgICAgICAgICAgICB9CgoJICAgICAgICAgICAgLy8gUm91bmRzCgkgICAgICAgICAgICBmb3IgKHZhciByb3VuZCA9IDA7IHJvdW5kIDwgMjQ7IHJvdW5kKyspIHsKCSAgICAgICAgICAgICAgICAvLyBUaGV0YQoJICAgICAgICAgICAgICAgIGZvciAodmFyIHggPSAwOyB4IDwgNTsgeCsrKSB7CgkgICAgICAgICAgICAgICAgICAgIC8vIE1peCBjb2x1bW4gbGFuZXMKCSAgICAgICAgICAgICAgICAgICAgdmFyIHRNc3cgPSAwLCB0THN3ID0gMDsKCSAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgeSA9IDA7IHkgPCA1OyB5KyspIHsKCSAgICAgICAgICAgICAgICAgICAgICAgIHZhciBsYW5lID0gc3RhdGVbeCArIDUgKiB5XTsKCSAgICAgICAgICAgICAgICAgICAgICAgIHRNc3cgXj0gbGFuZS5oaWdoOwoJICAgICAgICAgICAgICAgICAgICAgICAgdExzdyBePSBsYW5lLmxvdzsKCSAgICAgICAgICAgICAgICAgICAgfQoKCSAgICAgICAgICAgICAgICAgICAgLy8gVGVtcG9yYXJ5IHZhbHVlcwoJICAgICAgICAgICAgICAgICAgICB2YXIgVHggPSBUW3hdOwoJICAgICAgICAgICAgICAgICAgICBUeC5oaWdoID0gdE1zdzsKCSAgICAgICAgICAgICAgICAgICAgVHgubG93ICA9IHRMc3c7CgkgICAgICAgICAgICAgICAgfQoJICAgICAgICAgICAgICAgIGZvciAodmFyIHggPSAwOyB4IDwgNTsgeCsrKSB7CgkgICAgICAgICAgICAgICAgICAgIC8vIFNob3J0Y3V0cwoJICAgICAgICAgICAgICAgICAgICB2YXIgVHg0ID0gVFsoeCArIDQpICUgNV07CgkgICAgICAgICAgICAgICAgICAgIHZhciBUeDEgPSBUWyh4ICsgMSkgJSA1XTsKCSAgICAgICAgICAgICAgICAgICAgdmFyIFR4MU1zdyA9IFR4MS5oaWdoOwoJICAgICAgICAgICAgICAgICAgICB2YXIgVHgxTHN3ID0gVHgxLmxvdzsKCgkgICAgICAgICAgICAgICAgICAgIC8vIE1peCBzdXJyb3VuZGluZyBjb2x1bW5zCgkgICAgICAgICAgICAgICAgICAgIHZhciB0TXN3ID0gVHg0LmhpZ2ggXiAoKFR4MU1zdyA8PCAxKSB8IChUeDFMc3cgPj4+IDMxKSk7CgkgICAgICAgICAgICAgICAgICAgIHZhciB0THN3ID0gVHg0LmxvdyAgXiAoKFR4MUxzdyA8PCAxKSB8IChUeDFNc3cgPj4+IDMxKSk7CgkgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIHkgPSAwOyB5IDwgNTsgeSsrKSB7CgkgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbGFuZSA9IHN0YXRlW3ggKyA1ICogeV07CgkgICAgICAgICAgICAgICAgICAgICAgICBsYW5lLmhpZ2ggXj0gdE1zdzsKCSAgICAgICAgICAgICAgICAgICAgICAgIGxhbmUubG93ICBePSB0THN3OwoJICAgICAgICAgICAgICAgICAgICB9CgkgICAgICAgICAgICAgICAgfQoKCSAgICAgICAgICAgICAgICAvLyBSaG8gUGkKCSAgICAgICAgICAgICAgICBmb3IgKHZhciBsYW5lSW5kZXggPSAxOyBsYW5lSW5kZXggPCAyNTsgbGFuZUluZGV4KyspIHsKCSAgICAgICAgICAgICAgICAgICAgLy8gU2hvcnRjdXRzCgkgICAgICAgICAgICAgICAgICAgIHZhciBsYW5lID0gc3RhdGVbbGFuZUluZGV4XTsKCSAgICAgICAgICAgICAgICAgICAgdmFyIGxhbmVNc3cgPSBsYW5lLmhpZ2g7CgkgICAgICAgICAgICAgICAgICAgIHZhciBsYW5lTHN3ID0gbGFuZS5sb3c7CgkgICAgICAgICAgICAgICAgICAgIHZhciByaG9PZmZzZXQgPSBSSE9fT0ZGU0VUU1tsYW5lSW5kZXhdOwoKCSAgICAgICAgICAgICAgICAgICAgLy8gUm90YXRlIGxhbmVzCgkgICAgICAgICAgICAgICAgICAgIGlmIChyaG9PZmZzZXQgPCAzMikgewoJICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRNc3cgPSAobGFuZU1zdyA8PCByaG9PZmZzZXQpIHwgKGxhbmVMc3cgPj4+ICgzMiAtIHJob09mZnNldCkpOwoJICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRMc3cgPSAobGFuZUxzdyA8PCByaG9PZmZzZXQpIHwgKGxhbmVNc3cgPj4+ICgzMiAtIHJob09mZnNldCkpOwoJICAgICAgICAgICAgICAgICAgICB9IGVsc2UgLyogaWYgKHJob09mZnNldCA+PSAzMikgKi8gewoJICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRNc3cgPSAobGFuZUxzdyA8PCAocmhvT2Zmc2V0IC0gMzIpKSB8IChsYW5lTXN3ID4+PiAoNjQgLSByaG9PZmZzZXQpKTsKCSAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0THN3ID0gKGxhbmVNc3cgPDwgKHJob09mZnNldCAtIDMyKSkgfCAobGFuZUxzdyA+Pj4gKDY0IC0gcmhvT2Zmc2V0KSk7CgkgICAgICAgICAgICAgICAgICAgIH0KCgkgICAgICAgICAgICAgICAgICAgIC8vIFRyYW5zcG9zZSBsYW5lcwoJICAgICAgICAgICAgICAgICAgICB2YXIgVFBpTGFuZSA9IFRbUElfSU5ERVhFU1tsYW5lSW5kZXhdXTsKCSAgICAgICAgICAgICAgICAgICAgVFBpTGFuZS5oaWdoID0gdE1zdzsKCSAgICAgICAgICAgICAgICAgICAgVFBpTGFuZS5sb3cgID0gdExzdzsKCSAgICAgICAgICAgICAgICB9CgoJICAgICAgICAgICAgICAgIC8vIFJobyBwaSBhdCB4ID0geSA9IDAKCSAgICAgICAgICAgICAgICB2YXIgVDAgPSBUWzBdOwoJICAgICAgICAgICAgICAgIHZhciBzdGF0ZTAgPSBzdGF0ZVswXTsKCSAgICAgICAgICAgICAgICBUMC5oaWdoID0gc3RhdGUwLmhpZ2g7CgkgICAgICAgICAgICAgICAgVDAubG93ICA9IHN0YXRlMC5sb3c7CgoJICAgICAgICAgICAgICAgIC8vIENoaQoJICAgICAgICAgICAgICAgIGZvciAodmFyIHggPSAwOyB4IDwgNTsgeCsrKSB7CgkgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIHkgPSAwOyB5IDwgNTsgeSsrKSB7CgkgICAgICAgICAgICAgICAgICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgICAgICAgICAgICAgICAgIHZhciBsYW5lSW5kZXggPSB4ICsgNSAqIHk7CgkgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbGFuZSA9IHN0YXRlW2xhbmVJbmRleF07CgkgICAgICAgICAgICAgICAgICAgICAgICB2YXIgVExhbmUgPSBUW2xhbmVJbmRleF07CgkgICAgICAgICAgICAgICAgICAgICAgICB2YXIgVHgxTGFuZSA9IFRbKCh4ICsgMSkgJSA1KSArIDUgKiB5XTsKCSAgICAgICAgICAgICAgICAgICAgICAgIHZhciBUeDJMYW5lID0gVFsoKHggKyAyKSAlIDUpICsgNSAqIHldOwoKCSAgICAgICAgICAgICAgICAgICAgICAgIC8vIE1peCByb3dzCgkgICAgICAgICAgICAgICAgICAgICAgICBsYW5lLmhpZ2ggPSBUTGFuZS5oaWdoIF4gKH5UeDFMYW5lLmhpZ2ggJiBUeDJMYW5lLmhpZ2gpOwoJICAgICAgICAgICAgICAgICAgICAgICAgbGFuZS5sb3cgID0gVExhbmUubG93ICBeICh+VHgxTGFuZS5sb3cgICYgVHgyTGFuZS5sb3cpOwoJICAgICAgICAgICAgICAgICAgICB9CgkgICAgICAgICAgICAgICAgfQoKCSAgICAgICAgICAgICAgICAvLyBJb3RhCgkgICAgICAgICAgICAgICAgdmFyIGxhbmUgPSBzdGF0ZVswXTsKCSAgICAgICAgICAgICAgICB2YXIgcm91bmRDb25zdGFudCA9IFJPVU5EX0NPTlNUQU5UU1tyb3VuZF07CgkgICAgICAgICAgICAgICAgbGFuZS5oaWdoIF49IHJvdW5kQ29uc3RhbnQuaGlnaDsKCSAgICAgICAgICAgICAgICBsYW5lLmxvdyAgXj0gcm91bmRDb25zdGFudC5sb3c7OwoJICAgICAgICAgICAgfQoJICAgICAgICB9LAoKCSAgICAgICAgX2RvRmluYWxpemU6IGZ1bmN0aW9uICgpIHsKCSAgICAgICAgICAgIC8vIFNob3J0Y3V0cwoJICAgICAgICAgICAgdmFyIGRhdGEgPSB0aGlzLl9kYXRhOwoJICAgICAgICAgICAgdmFyIGRhdGFXb3JkcyA9IGRhdGEud29yZHM7CgkgICAgICAgICAgICB2YXIgbkJpdHNUb3RhbCA9IHRoaXMuX25EYXRhQnl0ZXMgKiA4OwoJICAgICAgICAgICAgdmFyIG5CaXRzTGVmdCA9IGRhdGEuc2lnQnl0ZXMgKiA4OwoJICAgICAgICAgICAgdmFyIGJsb2NrU2l6ZUJpdHMgPSB0aGlzLmJsb2NrU2l6ZSAqIDMyOwoKCSAgICAgICAgICAgIC8vIEFkZCBwYWRkaW5nCgkgICAgICAgICAgICBkYXRhV29yZHNbbkJpdHNMZWZ0ID4+PiA1XSB8PSAweDEgPDwgKDI0IC0gbkJpdHNMZWZ0ICUgMzIpOwoJICAgICAgICAgICAgZGF0YVdvcmRzWygoTWF0aC5jZWlsKChuQml0c0xlZnQgKyAxKSAvIGJsb2NrU2l6ZUJpdHMpICogYmxvY2tTaXplQml0cykgPj4+IDUpIC0gMV0gfD0gMHg4MDsKCSAgICAgICAgICAgIGRhdGEuc2lnQnl0ZXMgPSBkYXRhV29yZHMubGVuZ3RoICogNDsKCgkgICAgICAgICAgICAvLyBIYXNoIGZpbmFsIGJsb2NrcwoJICAgICAgICAgICAgdGhpcy5fcHJvY2VzcygpOwoKCSAgICAgICAgICAgIC8vIFNob3J0Y3V0cwoJICAgICAgICAgICAgdmFyIHN0YXRlID0gdGhpcy5fc3RhdGU7CgkgICAgICAgICAgICB2YXIgb3V0cHV0TGVuZ3RoQnl0ZXMgPSB0aGlzLmNmZy5vdXRwdXRMZW5ndGggLyA4OwoJICAgICAgICAgICAgdmFyIG91dHB1dExlbmd0aExhbmVzID0gb3V0cHV0TGVuZ3RoQnl0ZXMgLyA4OwoKCSAgICAgICAgICAgIC8vIFNxdWVlemUKCSAgICAgICAgICAgIHZhciBoYXNoV29yZHMgPSBbXTsKCSAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb3V0cHV0TGVuZ3RoTGFuZXM7IGkrKykgewoJICAgICAgICAgICAgICAgIC8vIFNob3J0Y3V0cwoJICAgICAgICAgICAgICAgIHZhciBsYW5lID0gc3RhdGVbaV07CgkgICAgICAgICAgICAgICAgdmFyIGxhbmVNc3cgPSBsYW5lLmhpZ2g7CgkgICAgICAgICAgICAgICAgdmFyIGxhbmVMc3cgPSBsYW5lLmxvdzsKCgkgICAgICAgICAgICAgICAgLy8gU3dhcCBlbmRpYW4KCSAgICAgICAgICAgICAgICBsYW5lTXN3ID0gKAoJICAgICAgICAgICAgICAgICAgICAoKChsYW5lTXN3IDw8IDgpICB8IChsYW5lTXN3ID4+PiAyNCkpICYgMHgwMGZmMDBmZikgfAoJICAgICAgICAgICAgICAgICAgICAoKChsYW5lTXN3IDw8IDI0KSB8IChsYW5lTXN3ID4+PiA4KSkgICYgMHhmZjAwZmYwMCkKCSAgICAgICAgICAgICAgICApOwoJICAgICAgICAgICAgICAgIGxhbmVMc3cgPSAoCgkgICAgICAgICAgICAgICAgICAgICgoKGxhbmVMc3cgPDwgOCkgIHwgKGxhbmVMc3cgPj4+IDI0KSkgJiAweDAwZmYwMGZmKSB8CgkgICAgICAgICAgICAgICAgICAgICgoKGxhbmVMc3cgPDwgMjQpIHwgKGxhbmVMc3cgPj4+IDgpKSAgJiAweGZmMDBmZjAwKQoJICAgICAgICAgICAgICAgICk7CgoJICAgICAgICAgICAgICAgIC8vIFNxdWVlemUgc3RhdGUgdG8gcmV0cmlldmUgaGFzaAoJICAgICAgICAgICAgICAgIGhhc2hXb3Jkcy5wdXNoKGxhbmVMc3cpOwoJICAgICAgICAgICAgICAgIGhhc2hXb3Jkcy5wdXNoKGxhbmVNc3cpOwoJICAgICAgICAgICAgfQoKCSAgICAgICAgICAgIC8vIFJldHVybiBmaW5hbCBjb21wdXRlZCBoYXNoCgkgICAgICAgICAgICByZXR1cm4gbmV3IFdvcmRBcnJheS5pbml0KGhhc2hXb3Jkcywgb3V0cHV0TGVuZ3RoQnl0ZXMpOwoJICAgICAgICB9LAoKCSAgICAgICAgY2xvbmU6IGZ1bmN0aW9uICgpIHsKCSAgICAgICAgICAgIHZhciBjbG9uZSA9IEhhc2hlci5jbG9uZS5jYWxsKHRoaXMpOwoKCSAgICAgICAgICAgIHZhciBzdGF0ZSA9IGNsb25lLl9zdGF0ZSA9IHRoaXMuX3N0YXRlLnNsaWNlKDApOwoJICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAyNTsgaSsrKSB7CgkgICAgICAgICAgICAgICAgc3RhdGVbaV0gPSBzdGF0ZVtpXS5jbG9uZSgpOwoJICAgICAgICAgICAgfQoKCSAgICAgICAgICAgIHJldHVybiBjbG9uZTsKCSAgICAgICAgfQoJICAgIH0pOwoKCSAgICAvKioKCSAgICAgKiBTaG9ydGN1dCBmdW5jdGlvbiB0byB0aGUgaGFzaGVyJ3Mgb2JqZWN0IGludGVyZmFjZS4KCSAgICAgKgoJICAgICAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBoYXNoLgoJICAgICAqCgkgICAgICogQHJldHVybiB7V29yZEFycmF5fSBUaGUgaGFzaC4KCSAgICAgKgoJICAgICAqIEBzdGF0aWMKCSAgICAgKgoJICAgICAqIEBleGFtcGxlCgkgICAgICoKCSAgICAgKiAgICAgdmFyIGhhc2ggPSBDcnlwdG9KUy5TSEEzKCdtZXNzYWdlJyk7CgkgICAgICogICAgIHZhciBoYXNoID0gQ3J5cHRvSlMuU0hBMyh3b3JkQXJyYXkpOwoJICAgICAqLwoJICAgIEMuU0hBMyA9IEhhc2hlci5fY3JlYXRlSGVscGVyKFNIQTMpOwoKCSAgICAvKioKCSAgICAgKiBTaG9ydGN1dCBmdW5jdGlvbiB0byB0aGUgSE1BQydzIG9iamVjdCBpbnRlcmZhY2UuCgkgICAgICoKCSAgICAgKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IG1lc3NhZ2UgVGhlIG1lc3NhZ2UgdG8gaGFzaC4KCSAgICAgKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IGtleSBUaGUgc2VjcmV0IGtleS4KCSAgICAgKgoJICAgICAqIEByZXR1cm4ge1dvcmRBcnJheX0gVGhlIEhNQUMuCgkgICAgICoKCSAgICAgKiBAc3RhdGljCgkgICAgICoKCSAgICAgKiBAZXhhbXBsZQoJICAgICAqCgkgICAgICogICAgIHZhciBobWFjID0gQ3J5cHRvSlMuSG1hY1NIQTMobWVzc2FnZSwga2V5KTsKCSAgICAgKi8KCSAgICBDLkhtYWNTSEEzID0gSGFzaGVyLl9jcmVhdGVIbWFjSGVscGVyKFNIQTMpOwoJfShNYXRoKSk7CgoKCShmdW5jdGlvbiAoKSB7CgkgICAgLy8gU2hvcnRjdXRzCgkgICAgdmFyIEMgPSBDcnlwdG9KUzsKCSAgICB2YXIgQ19saWIgPSBDLmxpYjsKCSAgICB2YXIgSGFzaGVyID0gQ19saWIuSGFzaGVyOwoJICAgIHZhciBDX3g2NCA9IEMueDY0OwoJICAgIHZhciBYNjRXb3JkID0gQ194NjQuV29yZDsKCSAgICB2YXIgWDY0V29yZEFycmF5ID0gQ194NjQuV29yZEFycmF5OwoJICAgIHZhciBDX2FsZ28gPSBDLmFsZ287CgoJICAgIGZ1bmN0aW9uIFg2NFdvcmRfY3JlYXRlKCkgewoJICAgICAgICByZXR1cm4gWDY0V29yZC5jcmVhdGUuYXBwbHkoWDY0V29yZCwgYXJndW1lbnRzKTsKCSAgICB9CgoJICAgIC8vIENvbnN0YW50cwoJICAgIHZhciBLID0gWwoJICAgICAgICBYNjRXb3JkX2NyZWF0ZSgweDQyOGEyZjk4LCAweGQ3MjhhZTIyKSwgWDY0V29yZF9jcmVhdGUoMHg3MTM3NDQ5MSwgMHgyM2VmNjVjZCksCgkgICAgICAgIFg2NFdvcmRfY3JlYXRlKDB4YjVjMGZiY2YsIDB4ZWM0ZDNiMmYpLCBYNjRXb3JkX2NyZWF0ZSgweGU5YjVkYmE1LCAweDgxODlkYmJjKSwKCSAgICAgICAgWDY0V29yZF9jcmVhdGUoMHgzOTU2YzI1YiwgMHhmMzQ4YjUzOCksIFg2NFdvcmRfY3JlYXRlKDB4NTlmMTExZjEsIDB4YjYwNWQwMTkpLAoJICAgICAgICBYNjRXb3JkX2NyZWF0ZSgweDkyM2Y4MmE0LCAweGFmMTk0ZjliKSwgWDY0V29yZF9jcmVhdGUoMHhhYjFjNWVkNSwgMHhkYTZkODExOCksCgkgICAgICAgIFg2NFdvcmRfY3JlYXRlKDB4ZDgwN2FhOTgsIDB4YTMwMzAyNDIpLCBYNjRXb3JkX2NyZWF0ZSgweDEyODM1YjAxLCAweDQ1NzA2ZmJlKSwKCSAgICAgICAgWDY0V29yZF9jcmVhdGUoMHgyNDMxODViZSwgMHg0ZWU0YjI4YyksIFg2NFdvcmRfY3JlYXRlKDB4NTUwYzdkYzMsIDB4ZDVmZmI0ZTIpLAoJICAgICAgICBYNjRXb3JkX2NyZWF0ZSgweDcyYmU1ZDc0LCAweGYyN2I4OTZmKSwgWDY0V29yZF9jcmVhdGUoMHg4MGRlYjFmZSwgMHgzYjE2OTZiMSksCgkgICAgICAgIFg2NFdvcmRfY3JlYXRlKDB4OWJkYzA2YTcsIDB4MjVjNzEyMzUpLCBYNjRXb3JkX2NyZWF0ZSgweGMxOWJmMTc0LCAweGNmNjkyNjk0KSwKCSAgICAgICAgWDY0V29yZF9jcmVhdGUoMHhlNDliNjljMSwgMHg5ZWYxNGFkMiksIFg2NFdvcmRfY3JlYXRlKDB4ZWZiZTQ3ODYsIDB4Mzg0ZjI1ZTMpLAoJICAgICAgICBYNjRXb3JkX2NyZWF0ZSgweDBmYzE5ZGM2LCAweDhiOGNkNWI1KSwgWDY0V29yZF9jcmVhdGUoMHgyNDBjYTFjYywgMHg3N2FjOWM2NSksCgkgICAgICAgIFg2NFdvcmRfY3JlYXRlKDB4MmRlOTJjNmYsIDB4NTkyYjAyNzUpLCBYNjRXb3JkX2NyZWF0ZSgweDRhNzQ4NGFhLCAweDZlYTZlNDgzKSwKCSAgICAgICAgWDY0V29yZF9jcmVhdGUoMHg1Y2IwYTlkYywgMHhiZDQxZmJkNCksIFg2NFdvcmRfY3JlYXRlKDB4NzZmOTg4ZGEsIDB4ODMxMTUzYjUpLAoJICAgICAgICBYNjRXb3JkX2NyZWF0ZSgweDk4M2U1MTUyLCAweGVlNjZkZmFiKSwgWDY0V29yZF9jcmVhdGUoMHhhODMxYzY2ZCwgMHgyZGI0MzIxMCksCgkgICAgICAgIFg2NFdvcmRfY3JlYXRlKDB4YjAwMzI3YzgsIDB4OThmYjIxM2YpLCBYNjRXb3JkX2NyZWF0ZSgweGJmNTk3ZmM3LCAweGJlZWYwZWU0KSwKCSAgICAgICAgWDY0V29yZF9jcmVhdGUoMHhjNmUwMGJmMywgMHgzZGE4OGZjMiksIFg2NFdvcmRfY3JlYXRlKDB4ZDVhNzkxNDcsIDB4OTMwYWE3MjUpLAoJICAgICAgICBYNjRXb3JkX2NyZWF0ZSgweDA2Y2E2MzUxLCAweGUwMDM4MjZmKSwgWDY0V29yZF9jcmVhdGUoMHgxNDI5Mjk2NywgMHgwYTBlNmU3MCksCgkgICAgICAgIFg2NFdvcmRfY3JlYXRlKDB4MjdiNzBhODUsIDB4NDZkMjJmZmMpLCBYNjRXb3JkX2NyZWF0ZSgweDJlMWIyMTM4LCAweDVjMjZjOTI2KSwKCSAgICAgICAgWDY0V29yZF9jcmVhdGUoMHg0ZDJjNmRmYywgMHg1YWM0MmFlZCksIFg2NFdvcmRfY3JlYXRlKDB4NTMzODBkMTMsIDB4OWQ5NWIzZGYpLAoJICAgICAgICBYNjRXb3JkX2NyZWF0ZSgweDY1MGE3MzU0LCAweDhiYWY2M2RlKSwgWDY0V29yZF9jcmVhdGUoMHg3NjZhMGFiYiwgMHgzYzc3YjJhOCksCgkgICAgICAgIFg2NFdvcmRfY3JlYXRlKDB4ODFjMmM5MmUsIDB4NDdlZGFlZTYpLCBYNjRXb3JkX2NyZWF0ZSgweDkyNzIyYzg1LCAweDE0ODIzNTNiKSwKCSAgICAgICAgWDY0V29yZF9jcmVhdGUoMHhhMmJmZThhMSwgMHg0Y2YxMDM2NCksIFg2NFdvcmRfY3JlYXRlKDB4YTgxYTY2NGIsIDB4YmM0MjMwMDEpLAoJICAgICAgICBYNjRXb3JkX2NyZWF0ZSgweGMyNGI4YjcwLCAweGQwZjg5NzkxKSwgWDY0V29yZF9jcmVhdGUoMHhjNzZjNTFhMywgMHgwNjU0YmUzMCksCgkgICAgICAgIFg2NFdvcmRfY3JlYXRlKDB4ZDE5MmU4MTksIDB4ZDZlZjUyMTgpLCBYNjRXb3JkX2NyZWF0ZSgweGQ2OTkwNjI0LCAweDU1NjVhOTEwKSwKCSAgICAgICAgWDY0V29yZF9jcmVhdGUoMHhmNDBlMzU4NSwgMHg1NzcxMjAyYSksIFg2NFdvcmRfY3JlYXRlKDB4MTA2YWEwNzAsIDB4MzJiYmQxYjgpLAoJICAgICAgICBYNjRXb3JkX2NyZWF0ZSgweDE5YTRjMTE2LCAweGI4ZDJkMGM4KSwgWDY0V29yZF9jcmVhdGUoMHgxZTM3NmMwOCwgMHg1MTQxYWI1MyksCgkgICAgICAgIFg2NFdvcmRfY3JlYXRlKDB4Mjc0ODc3NGMsIDB4ZGY4ZWViOTkpLCBYNjRXb3JkX2NyZWF0ZSgweDM0YjBiY2I1LCAweGUxOWI0OGE4KSwKCSAgICAgICAgWDY0V29yZF9jcmVhdGUoMHgzOTFjMGNiMywgMHhjNWM5NWE2MyksIFg2NFdvcmRfY3JlYXRlKDB4NGVkOGFhNGEsIDB4ZTM0MThhY2IpLAoJICAgICAgICBYNjRXb3JkX2NyZWF0ZSgweDViOWNjYTRmLCAweDc3NjNlMzczKSwgWDY0V29yZF9jcmVhdGUoMHg2ODJlNmZmMywgMHhkNmIyYjhhMyksCgkgICAgICAgIFg2NFdvcmRfY3JlYXRlKDB4NzQ4ZjgyZWUsIDB4NWRlZmIyZmMpLCBYNjRXb3JkX2NyZWF0ZSgweDc4YTU2MzZmLCAweDQzMTcyZjYwKSwKCSAgICAgICAgWDY0V29yZF9jcmVhdGUoMHg4NGM4NzgxNCwgMHhhMWYwYWI3MiksIFg2NFdvcmRfY3JlYXRlKDB4OGNjNzAyMDgsIDB4MWE2NDM5ZWMpLAoJICAgICAgICBYNjRXb3JkX2NyZWF0ZSgweDkwYmVmZmZhLCAweDIzNjMxZTI4KSwgWDY0V29yZF9jcmVhdGUoMHhhNDUwNmNlYiwgMHhkZTgyYmRlOSksCgkgICAgICAgIFg2NFdvcmRfY3JlYXRlKDB4YmVmOWEzZjcsIDB4YjJjNjc5MTUpLCBYNjRXb3JkX2NyZWF0ZSgweGM2NzE3OGYyLCAweGUzNzI1MzJiKSwKCSAgICAgICAgWDY0V29yZF9jcmVhdGUoMHhjYTI3M2VjZSwgMHhlYTI2NjE5YyksIFg2NFdvcmRfY3JlYXRlKDB4ZDE4NmI4YzcsIDB4MjFjMGMyMDcpLAoJICAgICAgICBYNjRXb3JkX2NyZWF0ZSgweGVhZGE3ZGQ2LCAweGNkZTBlYjFlKSwgWDY0V29yZF9jcmVhdGUoMHhmNTdkNGY3ZiwgMHhlZTZlZDE3OCksCgkgICAgICAgIFg2NFdvcmRfY3JlYXRlKDB4MDZmMDY3YWEsIDB4NzIxNzZmYmEpLCBYNjRXb3JkX2NyZWF0ZSgweDBhNjM3ZGM1LCAweGEyYzg5OGE2KSwKCSAgICAgICAgWDY0V29yZF9jcmVhdGUoMHgxMTNmOTgwNCwgMHhiZWY5MGRhZSksIFg2NFdvcmRfY3JlYXRlKDB4MWI3MTBiMzUsIDB4MTMxYzQ3MWIpLAoJICAgICAgICBYNjRXb3JkX2NyZWF0ZSgweDI4ZGI3N2Y1LCAweDIzMDQ3ZDg0KSwgWDY0V29yZF9jcmVhdGUoMHgzMmNhYWI3YiwgMHg0MGM3MjQ5MyksCgkgICAgICAgIFg2NFdvcmRfY3JlYXRlKDB4M2M5ZWJlMGEsIDB4MTVjOWJlYmMpLCBYNjRXb3JkX2NyZWF0ZSgweDQzMWQ2N2M0LCAweDljMTAwZDRjKSwKCSAgICAgICAgWDY0V29yZF9jcmVhdGUoMHg0Y2M1ZDRiZSwgMHhjYjNlNDJiNiksIFg2NFdvcmRfY3JlYXRlKDB4NTk3ZjI5OWMsIDB4ZmM2NTdlMmEpLAoJICAgICAgICBYNjRXb3JkX2NyZWF0ZSgweDVmY2I2ZmFiLCAweDNhZDZmYWVjKSwgWDY0V29yZF9jcmVhdGUoMHg2YzQ0MTk4YywgMHg0YTQ3NTgxNykKCSAgICBdOwoKCSAgICAvLyBSZXVzYWJsZSBvYmplY3RzCgkgICAgdmFyIFcgPSBbXTsKCSAgICAoZnVuY3Rpb24gKCkgewoJICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDgwOyBpKyspIHsKCSAgICAgICAgICAgIFdbaV0gPSBYNjRXb3JkX2NyZWF0ZSgpOwoJICAgICAgICB9CgkgICAgfSgpKTsKCgkgICAgLyoqCgkgICAgICogU0hBLTUxMiBoYXNoIGFsZ29yaXRobS4KCSAgICAgKi8KCSAgICB2YXIgU0hBNTEyID0gQ19hbGdvLlNIQTUxMiA9IEhhc2hlci5leHRlbmQoewoJICAgICAgICBfZG9SZXNldDogZnVuY3Rpb24gKCkgewoJICAgICAgICAgICAgdGhpcy5faGFzaCA9IG5ldyBYNjRXb3JkQXJyYXkuaW5pdChbCgkgICAgICAgICAgICAgICAgbmV3IFg2NFdvcmQuaW5pdCgweDZhMDllNjY3LCAweGYzYmNjOTA4KSwgbmV3IFg2NFdvcmQuaW5pdCgweGJiNjdhZTg1LCAweDg0Y2FhNzNiKSwKCSAgICAgICAgICAgICAgICBuZXcgWDY0V29yZC5pbml0KDB4M2M2ZWYzNzIsIDB4ZmU5NGY4MmIpLCBuZXcgWDY0V29yZC5pbml0KDB4YTU0ZmY1M2EsIDB4NWYxZDM2ZjEpLAoJICAgICAgICAgICAgICAgIG5ldyBYNjRXb3JkLmluaXQoMHg1MTBlNTI3ZiwgMHhhZGU2ODJkMSksIG5ldyBYNjRXb3JkLmluaXQoMHg5YjA1Njg4YywgMHgyYjNlNmMxZiksCgkgICAgICAgICAgICAgICAgbmV3IFg2NFdvcmQuaW5pdCgweDFmODNkOWFiLCAweGZiNDFiZDZiKSwgbmV3IFg2NFdvcmQuaW5pdCgweDViZTBjZDE5LCAweDEzN2UyMTc5KQoJICAgICAgICAgICAgXSk7CgkgICAgICAgIH0sCgoJICAgICAgICBfZG9Qcm9jZXNzQmxvY2s6IGZ1bmN0aW9uIChNLCBvZmZzZXQpIHsKCSAgICAgICAgICAgIC8vIFNob3J0Y3V0cwoJICAgICAgICAgICAgdmFyIEggPSB0aGlzLl9oYXNoLndvcmRzOwoKCSAgICAgICAgICAgIHZhciBIMCA9IEhbMF07CgkgICAgICAgICAgICB2YXIgSDEgPSBIWzFdOwoJICAgICAgICAgICAgdmFyIEgyID0gSFsyXTsKCSAgICAgICAgICAgIHZhciBIMyA9IEhbM107CgkgICAgICAgICAgICB2YXIgSDQgPSBIWzRdOwoJICAgICAgICAgICAgdmFyIEg1ID0gSFs1XTsKCSAgICAgICAgICAgIHZhciBINiA9IEhbNl07CgkgICAgICAgICAgICB2YXIgSDcgPSBIWzddOwoKCSAgICAgICAgICAgIHZhciBIMGggPSBIMC5oaWdoOwoJICAgICAgICAgICAgdmFyIEgwbCA9IEgwLmxvdzsKCSAgICAgICAgICAgIHZhciBIMWggPSBIMS5oaWdoOwoJICAgICAgICAgICAgdmFyIEgxbCA9IEgxLmxvdzsKCSAgICAgICAgICAgIHZhciBIMmggPSBIMi5oaWdoOwoJICAgICAgICAgICAgdmFyIEgybCA9IEgyLmxvdzsKCSAgICAgICAgICAgIHZhciBIM2ggPSBIMy5oaWdoOwoJICAgICAgICAgICAgdmFyIEgzbCA9IEgzLmxvdzsKCSAgICAgICAgICAgIHZhciBINGggPSBINC5oaWdoOwoJICAgICAgICAgICAgdmFyIEg0bCA9IEg0LmxvdzsKCSAgICAgICAgICAgIHZhciBINWggPSBINS5oaWdoOwoJICAgICAgICAgICAgdmFyIEg1bCA9IEg1LmxvdzsKCSAgICAgICAgICAgIHZhciBINmggPSBINi5oaWdoOwoJICAgICAgICAgICAgdmFyIEg2bCA9IEg2LmxvdzsKCSAgICAgICAgICAgIHZhciBIN2ggPSBINy5oaWdoOwoJICAgICAgICAgICAgdmFyIEg3bCA9IEg3LmxvdzsKCgkgICAgICAgICAgICAvLyBXb3JraW5nIHZhcmlhYmxlcwoJICAgICAgICAgICAgdmFyIGFoID0gSDBoOwoJICAgICAgICAgICAgdmFyIGFsID0gSDBsOwoJICAgICAgICAgICAgdmFyIGJoID0gSDFoOwoJICAgICAgICAgICAgdmFyIGJsID0gSDFsOwoJICAgICAgICAgICAgdmFyIGNoID0gSDJoOwoJICAgICAgICAgICAgdmFyIGNsID0gSDJsOwoJICAgICAgICAgICAgdmFyIGRoID0gSDNoOwoJICAgICAgICAgICAgdmFyIGRsID0gSDNsOwoJICAgICAgICAgICAgdmFyIGVoID0gSDRoOwoJICAgICAgICAgICAgdmFyIGVsID0gSDRsOwoJICAgICAgICAgICAgdmFyIGZoID0gSDVoOwoJICAgICAgICAgICAgdmFyIGZsID0gSDVsOwoJICAgICAgICAgICAgdmFyIGdoID0gSDZoOwoJICAgICAgICAgICAgdmFyIGdsID0gSDZsOwoJICAgICAgICAgICAgdmFyIGhoID0gSDdoOwoJICAgICAgICAgICAgdmFyIGhsID0gSDdsOwoKCSAgICAgICAgICAgIC8vIFJvdW5kcwoJICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA4MDsgaSsrKSB7CgkgICAgICAgICAgICAgICAgLy8gU2hvcnRjdXQKCSAgICAgICAgICAgICAgICB2YXIgV2kgPSBXW2ldOwoKCSAgICAgICAgICAgICAgICAvLyBFeHRlbmQgbWVzc2FnZQoJICAgICAgICAgICAgICAgIGlmIChpIDwgMTYpIHsKCSAgICAgICAgICAgICAgICAgICAgdmFyIFdpaCA9IFdpLmhpZ2ggPSBNW29mZnNldCArIGkgKiAyXSAgICAgfCAwOwoJICAgICAgICAgICAgICAgICAgICB2YXIgV2lsID0gV2kubG93ICA9IE1bb2Zmc2V0ICsgaSAqIDIgKyAxXSB8IDA7CgkgICAgICAgICAgICAgICAgfSBlbHNlIHsKCSAgICAgICAgICAgICAgICAgICAgLy8gR2FtbWEwCgkgICAgICAgICAgICAgICAgICAgIHZhciBnYW1tYTB4ICA9IFdbaSAtIDE1XTsKCSAgICAgICAgICAgICAgICAgICAgdmFyIGdhbW1hMHhoID0gZ2FtbWEweC5oaWdoOwoJICAgICAgICAgICAgICAgICAgICB2YXIgZ2FtbWEweGwgPSBnYW1tYTB4LmxvdzsKCSAgICAgICAgICAgICAgICAgICAgdmFyIGdhbW1hMGggID0gKChnYW1tYTB4aCA+Pj4gMSkgfCAoZ2FtbWEweGwgPDwgMzEpKSBeICgoZ2FtbWEweGggPj4+IDgpIHwgKGdhbW1hMHhsIDw8IDI0KSkgXiAoZ2FtbWEweGggPj4+IDcpOwoJICAgICAgICAgICAgICAgICAgICB2YXIgZ2FtbWEwbCAgPSAoKGdhbW1hMHhsID4+PiAxKSB8IChnYW1tYTB4aCA8PCAzMSkpIF4gKChnYW1tYTB4bCA+Pj4gOCkgfCAoZ2FtbWEweGggPDwgMjQpKSBeICgoZ2FtbWEweGwgPj4+IDcpIHwgKGdhbW1hMHhoIDw8IDI1KSk7CgoJICAgICAgICAgICAgICAgICAgICAvLyBHYW1tYTEKCSAgICAgICAgICAgICAgICAgICAgdmFyIGdhbW1hMXggID0gV1tpIC0gMl07CgkgICAgICAgICAgICAgICAgICAgIHZhciBnYW1tYTF4aCA9IGdhbW1hMXguaGlnaDsKCSAgICAgICAgICAgICAgICAgICAgdmFyIGdhbW1hMXhsID0gZ2FtbWExeC5sb3c7CgkgICAgICAgICAgICAgICAgICAgIHZhciBnYW1tYTFoICA9ICgoZ2FtbWExeGggPj4+IDE5KSB8IChnYW1tYTF4bCA8PCAxMykpIF4gKChnYW1tYTF4aCA8PCAzKSB8IChnYW1tYTF4bCA+Pj4gMjkpKSBeIChnYW1tYTF4aCA+Pj4gNik7CgkgICAgICAgICAgICAgICAgICAgIHZhciBnYW1tYTFsICA9ICgoZ2FtbWExeGwgPj4+IDE5KSB8IChnYW1tYTF4aCA8PCAxMykpIF4gKChnYW1tYTF4bCA8PCAzKSB8IChnYW1tYTF4aCA+Pj4gMjkpKSBeICgoZ2FtbWExeGwgPj4+IDYpIHwgKGdhbW1hMXhoIDw8IDI2KSk7CgoJICAgICAgICAgICAgICAgICAgICAvLyBXW2ldID0gZ2FtbWEwICsgV1tpIC0gN10gKyBnYW1tYTEgKyBXW2kgLSAxNl0KCSAgICAgICAgICAgICAgICAgICAgdmFyIFdpNyAgPSBXW2kgLSA3XTsKCSAgICAgICAgICAgICAgICAgICAgdmFyIFdpN2ggPSBXaTcuaGlnaDsKCSAgICAgICAgICAgICAgICAgICAgdmFyIFdpN2wgPSBXaTcubG93OwoKCSAgICAgICAgICAgICAgICAgICAgdmFyIFdpMTYgID0gV1tpIC0gMTZdOwoJICAgICAgICAgICAgICAgICAgICB2YXIgV2kxNmggPSBXaTE2LmhpZ2g7CgkgICAgICAgICAgICAgICAgICAgIHZhciBXaTE2bCA9IFdpMTYubG93OwoKCSAgICAgICAgICAgICAgICAgICAgdmFyIFdpbCA9IGdhbW1hMGwgKyBXaTdsOwoJICAgICAgICAgICAgICAgICAgICB2YXIgV2loID0gZ2FtbWEwaCArIFdpN2ggKyAoKFdpbCA+Pj4gMCkgPCAoZ2FtbWEwbCA+Pj4gMCkgPyAxIDogMCk7CgkgICAgICAgICAgICAgICAgICAgIHZhciBXaWwgPSBXaWwgKyBnYW1tYTFsOwoJICAgICAgICAgICAgICAgICAgICB2YXIgV2loID0gV2loICsgZ2FtbWExaCArICgoV2lsID4+PiAwKSA8IChnYW1tYTFsID4+PiAwKSA/IDEgOiAwKTsKCSAgICAgICAgICAgICAgICAgICAgdmFyIFdpbCA9IFdpbCArIFdpMTZsOwoJICAgICAgICAgICAgICAgICAgICB2YXIgV2loID0gV2loICsgV2kxNmggKyAoKFdpbCA+Pj4gMCkgPCAoV2kxNmwgPj4+IDApID8gMSA6IDApOwoKCSAgICAgICAgICAgICAgICAgICAgV2kuaGlnaCA9IFdpaDsKCSAgICAgICAgICAgICAgICAgICAgV2kubG93ICA9IFdpbDsKCSAgICAgICAgICAgICAgICB9CgoJICAgICAgICAgICAgICAgIHZhciBjaGggID0gKGVoICYgZmgpIF4gKH5laCAmIGdoKTsKCSAgICAgICAgICAgICAgICB2YXIgY2hsICA9IChlbCAmIGZsKSBeICh+ZWwgJiBnbCk7CgkgICAgICAgICAgICAgICAgdmFyIG1hamggPSAoYWggJiBiaCkgXiAoYWggJiBjaCkgXiAoYmggJiBjaCk7CgkgICAgICAgICAgICAgICAgdmFyIG1hamwgPSAoYWwgJiBibCkgXiAoYWwgJiBjbCkgXiAoYmwgJiBjbCk7CgoJICAgICAgICAgICAgICAgIHZhciBzaWdtYTBoID0gKChhaCA+Pj4gMjgpIHwgKGFsIDw8IDQpKSAgXiAoKGFoIDw8IDMwKSAgfCAoYWwgPj4+IDIpKSBeICgoYWggPDwgMjUpIHwgKGFsID4+PiA3KSk7CgkgICAgICAgICAgICAgICAgdmFyIHNpZ21hMGwgPSAoKGFsID4+PiAyOCkgfCAoYWggPDwgNCkpICBeICgoYWwgPDwgMzApICB8IChhaCA+Pj4gMikpIF4gKChhbCA8PCAyNSkgfCAoYWggPj4+IDcpKTsKCSAgICAgICAgICAgICAgICB2YXIgc2lnbWExaCA9ICgoZWggPj4+IDE0KSB8IChlbCA8PCAxOCkpIF4gKChlaCA+Pj4gMTgpIHwgKGVsIDw8IDE0KSkgXiAoKGVoIDw8IDIzKSB8IChlbCA+Pj4gOSkpOwoJICAgICAgICAgICAgICAgIHZhciBzaWdtYTFsID0gKChlbCA+Pj4gMTQpIHwgKGVoIDw8IDE4KSkgXiAoKGVsID4+PiAxOCkgfCAoZWggPDwgMTQpKSBeICgoZWwgPDwgMjMpIHwgKGVoID4+PiA5KSk7CgoJICAgICAgICAgICAgICAgIC8vIHQxID0gaCArIHNpZ21hMSArIGNoICsgS1tpXSArIFdbaV0KCSAgICAgICAgICAgICAgICB2YXIgS2kgID0gS1tpXTsKCSAgICAgICAgICAgICAgICB2YXIgS2loID0gS2kuaGlnaDsKCSAgICAgICAgICAgICAgICB2YXIgS2lsID0gS2kubG93OwoKCSAgICAgICAgICAgICAgICB2YXIgdDFsID0gaGwgKyBzaWdtYTFsOwoJICAgICAgICAgICAgICAgIHZhciB0MWggPSBoaCArIHNpZ21hMWggKyAoKHQxbCA+Pj4gMCkgPCAoaGwgPj4+IDApID8gMSA6IDApOwoJICAgICAgICAgICAgICAgIHZhciB0MWwgPSB0MWwgKyBjaGw7CgkgICAgICAgICAgICAgICAgdmFyIHQxaCA9IHQxaCArIGNoaCArICgodDFsID4+PiAwKSA8IChjaGwgPj4+IDApID8gMSA6IDApOwoJICAgICAgICAgICAgICAgIHZhciB0MWwgPSB0MWwgKyBLaWw7CgkgICAgICAgICAgICAgICAgdmFyIHQxaCA9IHQxaCArIEtpaCArICgodDFsID4+PiAwKSA8IChLaWwgPj4+IDApID8gMSA6IDApOwoJICAgICAgICAgICAgICAgIHZhciB0MWwgPSB0MWwgKyBXaWw7CgkgICAgICAgICAgICAgICAgdmFyIHQxaCA9IHQxaCArIFdpaCArICgodDFsID4+PiAwKSA8IChXaWwgPj4+IDApID8gMSA6IDApOwoKCSAgICAgICAgICAgICAgICAvLyB0MiA9IHNpZ21hMCArIG1hagoJICAgICAgICAgICAgICAgIHZhciB0MmwgPSBzaWdtYTBsICsgbWFqbDsKCSAgICAgICAgICAgICAgICB2YXIgdDJoID0gc2lnbWEwaCArIG1hamggKyAoKHQybCA+Pj4gMCkgPCAoc2lnbWEwbCA+Pj4gMCkgPyAxIDogMCk7CgoJICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSB3b3JraW5nIHZhcmlhYmxlcwoJICAgICAgICAgICAgICAgIGhoID0gZ2g7CgkgICAgICAgICAgICAgICAgaGwgPSBnbDsKCSAgICAgICAgICAgICAgICBnaCA9IGZoOwoJICAgICAgICAgICAgICAgIGdsID0gZmw7CgkgICAgICAgICAgICAgICAgZmggPSBlaDsKCSAgICAgICAgICAgICAgICBmbCA9IGVsOwoJICAgICAgICAgICAgICAgIGVsID0gKGRsICsgdDFsKSB8IDA7CgkgICAgICAgICAgICAgICAgZWggPSAoZGggKyB0MWggKyAoKGVsID4+PiAwKSA8IChkbCA+Pj4gMCkgPyAxIDogMCkpIHwgMDsKCSAgICAgICAgICAgICAgICBkaCA9IGNoOwoJICAgICAgICAgICAgICAgIGRsID0gY2w7CgkgICAgICAgICAgICAgICAgY2ggPSBiaDsKCSAgICAgICAgICAgICAgICBjbCA9IGJsOwoJICAgICAgICAgICAgICAgIGJoID0gYWg7CgkgICAgICAgICAgICAgICAgYmwgPSBhbDsKCSAgICAgICAgICAgICAgICBhbCA9ICh0MWwgKyB0MmwpIHwgMDsKCSAgICAgICAgICAgICAgICBhaCA9ICh0MWggKyB0MmggKyAoKGFsID4+PiAwKSA8ICh0MWwgPj4+IDApID8gMSA6IDApKSB8IDA7CgkgICAgICAgICAgICB9CgoJICAgICAgICAgICAgLy8gSW50ZXJtZWRpYXRlIGhhc2ggdmFsdWUKCSAgICAgICAgICAgIEgwbCA9IEgwLmxvdyAgPSAoSDBsICsgYWwpOwoJICAgICAgICAgICAgSDAuaGlnaCA9IChIMGggKyBhaCArICgoSDBsID4+PiAwKSA8IChhbCA+Pj4gMCkgPyAxIDogMCkpOwoJICAgICAgICAgICAgSDFsID0gSDEubG93ICA9IChIMWwgKyBibCk7CgkgICAgICAgICAgICBIMS5oaWdoID0gKEgxaCArIGJoICsgKChIMWwgPj4+IDApIDwgKGJsID4+PiAwKSA/IDEgOiAwKSk7CgkgICAgICAgICAgICBIMmwgPSBIMi5sb3cgID0gKEgybCArIGNsKTsKCSAgICAgICAgICAgIEgyLmhpZ2ggPSAoSDJoICsgY2ggKyAoKEgybCA+Pj4gMCkgPCAoY2wgPj4+IDApID8gMSA6IDApKTsKCSAgICAgICAgICAgIEgzbCA9IEgzLmxvdyAgPSAoSDNsICsgZGwpOwoJICAgICAgICAgICAgSDMuaGlnaCA9IChIM2ggKyBkaCArICgoSDNsID4+PiAwKSA8IChkbCA+Pj4gMCkgPyAxIDogMCkpOwoJICAgICAgICAgICAgSDRsID0gSDQubG93ICA9IChINGwgKyBlbCk7CgkgICAgICAgICAgICBINC5oaWdoID0gKEg0aCArIGVoICsgKChINGwgPj4+IDApIDwgKGVsID4+PiAwKSA/IDEgOiAwKSk7CgkgICAgICAgICAgICBINWwgPSBINS5sb3cgID0gKEg1bCArIGZsKTsKCSAgICAgICAgICAgIEg1LmhpZ2ggPSAoSDVoICsgZmggKyAoKEg1bCA+Pj4gMCkgPCAoZmwgPj4+IDApID8gMSA6IDApKTsKCSAgICAgICAgICAgIEg2bCA9IEg2LmxvdyAgPSAoSDZsICsgZ2wpOwoJICAgICAgICAgICAgSDYuaGlnaCA9IChINmggKyBnaCArICgoSDZsID4+PiAwKSA8IChnbCA+Pj4gMCkgPyAxIDogMCkpOwoJICAgICAgICAgICAgSDdsID0gSDcubG93ICA9IChIN2wgKyBobCk7CgkgICAgICAgICAgICBINy5oaWdoID0gKEg3aCArIGhoICsgKChIN2wgPj4+IDApIDwgKGhsID4+PiAwKSA/IDEgOiAwKSk7CgkgICAgICAgIH0sCgoJICAgICAgICBfZG9GaW5hbGl6ZTogZnVuY3Rpb24gKCkgewoJICAgICAgICAgICAgLy8gU2hvcnRjdXRzCgkgICAgICAgICAgICB2YXIgZGF0YSA9IHRoaXMuX2RhdGE7CgkgICAgICAgICAgICB2YXIgZGF0YVdvcmRzID0gZGF0YS53b3JkczsKCgkgICAgICAgICAgICB2YXIgbkJpdHNUb3RhbCA9IHRoaXMuX25EYXRhQnl0ZXMgKiA4OwoJICAgICAgICAgICAgdmFyIG5CaXRzTGVmdCA9IGRhdGEuc2lnQnl0ZXMgKiA4OwoKCSAgICAgICAgICAgIC8vIEFkZCBwYWRkaW5nCgkgICAgICAgICAgICBkYXRhV29yZHNbbkJpdHNMZWZ0ID4+PiA1XSB8PSAweDgwIDw8ICgyNCAtIG5CaXRzTGVmdCAlIDMyKTsKCSAgICAgICAgICAgIGRhdGFXb3Jkc1soKChuQml0c0xlZnQgKyAxMjgpID4+PiAxMCkgPDwgNSkgKyAzMF0gPSBNYXRoLmZsb29yKG5CaXRzVG90YWwgLyAweDEwMDAwMDAwMCk7CgkgICAgICAgICAgICBkYXRhV29yZHNbKCgobkJpdHNMZWZ0ICsgMTI4KSA+Pj4gMTApIDw8IDUpICsgMzFdID0gbkJpdHNUb3RhbDsKCSAgICAgICAgICAgIGRhdGEuc2lnQnl0ZXMgPSBkYXRhV29yZHMubGVuZ3RoICogNDsKCgkgICAgICAgICAgICAvLyBIYXNoIGZpbmFsIGJsb2NrcwoJICAgICAgICAgICAgdGhpcy5fcHJvY2VzcygpOwoKCSAgICAgICAgICAgIC8vIENvbnZlcnQgaGFzaCB0byAzMi1iaXQgd29yZCBhcnJheSBiZWZvcmUgcmV0dXJuaW5nCgkgICAgICAgICAgICB2YXIgaGFzaCA9IHRoaXMuX2hhc2gudG9YMzIoKTsKCgkgICAgICAgICAgICAvLyBSZXR1cm4gZmluYWwgY29tcHV0ZWQgaGFzaAoJICAgICAgICAgICAgcmV0dXJuIGhhc2g7CgkgICAgICAgIH0sCgoJICAgICAgICBjbG9uZTogZnVuY3Rpb24gKCkgewoJICAgICAgICAgICAgdmFyIGNsb25lID0gSGFzaGVyLmNsb25lLmNhbGwodGhpcyk7CgkgICAgICAgICAgICBjbG9uZS5faGFzaCA9IHRoaXMuX2hhc2guY2xvbmUoKTsKCgkgICAgICAgICAgICByZXR1cm4gY2xvbmU7CgkgICAgICAgIH0sCgoJICAgICAgICBibG9ja1NpemU6IDEwMjQvMzIKCSAgICB9KTsKCgkgICAgLyoqCgkgICAgICogU2hvcnRjdXQgZnVuY3Rpb24gdG8gdGhlIGhhc2hlcidzIG9iamVjdCBpbnRlcmZhY2UuCgkgICAgICoKCSAgICAgKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IG1lc3NhZ2UgVGhlIG1lc3NhZ2UgdG8gaGFzaC4KCSAgICAgKgoJICAgICAqIEByZXR1cm4ge1dvcmRBcnJheX0gVGhlIGhhc2guCgkgICAgICoKCSAgICAgKiBAc3RhdGljCgkgICAgICoKCSAgICAgKiBAZXhhbXBsZQoJICAgICAqCgkgICAgICogICAgIHZhciBoYXNoID0gQ3J5cHRvSlMuU0hBNTEyKCdtZXNzYWdlJyk7CgkgICAgICogICAgIHZhciBoYXNoID0gQ3J5cHRvSlMuU0hBNTEyKHdvcmRBcnJheSk7CgkgICAgICovCgkgICAgQy5TSEE1MTIgPSBIYXNoZXIuX2NyZWF0ZUhlbHBlcihTSEE1MTIpOwoKCSAgICAvKioKCSAgICAgKiBTaG9ydGN1dCBmdW5jdGlvbiB0byB0aGUgSE1BQydzIG9iamVjdCBpbnRlcmZhY2UuCgkgICAgICoKCSAgICAgKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IG1lc3NhZ2UgVGhlIG1lc3NhZ2UgdG8gaGFzaC4KCSAgICAgKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IGtleSBUaGUgc2VjcmV0IGtleS4KCSAgICAgKgoJICAgICAqIEByZXR1cm4ge1dvcmRBcnJheX0gVGhlIEhNQUMuCgkgICAgICoKCSAgICAgKiBAc3RhdGljCgkgICAgICoKCSAgICAgKiBAZXhhbXBsZQoJICAgICAqCgkgICAgICogICAgIHZhciBobWFjID0gQ3J5cHRvSlMuSG1hY1NIQTUxMihtZXNzYWdlLCBrZXkpOwoJICAgICAqLwoJICAgIEMuSG1hY1NIQTUxMiA9IEhhc2hlci5fY3JlYXRlSG1hY0hlbHBlcihTSEE1MTIpOwoJfSgpKTsKCgoJKGZ1bmN0aW9uICgpIHsKCSAgICAvLyBTaG9ydGN1dHMKCSAgICB2YXIgQyA9IENyeXB0b0pTOwoJICAgIHZhciBDX3g2NCA9IEMueDY0OwoJICAgIHZhciBYNjRXb3JkID0gQ194NjQuV29yZDsKCSAgICB2YXIgWDY0V29yZEFycmF5ID0gQ194NjQuV29yZEFycmF5OwoJICAgIHZhciBDX2FsZ28gPSBDLmFsZ287CgkgICAgdmFyIFNIQTUxMiA9IENfYWxnby5TSEE1MTI7CgoJICAgIC8qKgoJICAgICAqIFNIQS0zODQgaGFzaCBhbGdvcml0aG0uCgkgICAgICovCgkgICAgdmFyIFNIQTM4NCA9IENfYWxnby5TSEEzODQgPSBTSEE1MTIuZXh0ZW5kKHsKCSAgICAgICAgX2RvUmVzZXQ6IGZ1bmN0aW9uICgpIHsKCSAgICAgICAgICAgIHRoaXMuX2hhc2ggPSBuZXcgWDY0V29yZEFycmF5LmluaXQoWwoJICAgICAgICAgICAgICAgIG5ldyBYNjRXb3JkLmluaXQoMHhjYmJiOWQ1ZCwgMHhjMTA1OWVkOCksIG5ldyBYNjRXb3JkLmluaXQoMHg2MjlhMjkyYSwgMHgzNjdjZDUwNyksCgkgICAgICAgICAgICAgICAgbmV3IFg2NFdvcmQuaW5pdCgweDkxNTkwMTVhLCAweDMwNzBkZDE3KSwgbmV3IFg2NFdvcmQuaW5pdCgweDE1MmZlY2Q4LCAweGY3MGU1OTM5KSwKCSAgICAgICAgICAgICAgICBuZXcgWDY0V29yZC5pbml0KDB4NjczMzI2NjcsIDB4ZmZjMDBiMzEpLCBuZXcgWDY0V29yZC5pbml0KDB4OGViNDRhODcsIDB4Njg1ODE1MTEpLAoJICAgICAgICAgICAgICAgIG5ldyBYNjRXb3JkLmluaXQoMHhkYjBjMmUwZCwgMHg2NGY5OGZhNyksIG5ldyBYNjRXb3JkLmluaXQoMHg0N2I1NDgxZCwgMHhiZWZhNGZhNCkKCSAgICAgICAgICAgIF0pOwoJICAgICAgICB9LAoKCSAgICAgICAgX2RvRmluYWxpemU6IGZ1bmN0aW9uICgpIHsKCSAgICAgICAgICAgIHZhciBoYXNoID0gU0hBNTEyLl9kb0ZpbmFsaXplLmNhbGwodGhpcyk7CgoJICAgICAgICAgICAgaGFzaC5zaWdCeXRlcyAtPSAxNjsKCgkgICAgICAgICAgICByZXR1cm4gaGFzaDsKCSAgICAgICAgfQoJICAgIH0pOwoKCSAgICAvKioKCSAgICAgKiBTaG9ydGN1dCBmdW5jdGlvbiB0byB0aGUgaGFzaGVyJ3Mgb2JqZWN0IGludGVyZmFjZS4KCSAgICAgKgoJICAgICAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBoYXNoLgoJICAgICAqCgkgICAgICogQHJldHVybiB7V29yZEFycmF5fSBUaGUgaGFzaC4KCSAgICAgKgoJICAgICAqIEBzdGF0aWMKCSAgICAgKgoJICAgICAqIEBleGFtcGxlCgkgICAgICoKCSAgICAgKiAgICAgdmFyIGhhc2ggPSBDcnlwdG9KUy5TSEEzODQoJ21lc3NhZ2UnKTsKCSAgICAgKiAgICAgdmFyIGhhc2ggPSBDcnlwdG9KUy5TSEEzODQod29yZEFycmF5KTsKCSAgICAgKi8KCSAgICBDLlNIQTM4NCA9IFNIQTUxMi5fY3JlYXRlSGVscGVyKFNIQTM4NCk7CgoJICAgIC8qKgoJICAgICAqIFNob3J0Y3V0IGZ1bmN0aW9uIHRvIHRoZSBITUFDJ3Mgb2JqZWN0IGludGVyZmFjZS4KCSAgICAgKgoJICAgICAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBoYXNoLgoJICAgICAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30ga2V5IFRoZSBzZWNyZXQga2V5LgoJICAgICAqCgkgICAgICogQHJldHVybiB7V29yZEFycmF5fSBUaGUgSE1BQy4KCSAgICAgKgoJICAgICAqIEBzdGF0aWMKCSAgICAgKgoJICAgICAqIEBleGFtcGxlCgkgICAgICoKCSAgICAgKiAgICAgdmFyIGhtYWMgPSBDcnlwdG9KUy5IbWFjU0hBMzg0KG1lc3NhZ2UsIGtleSk7CgkgICAgICovCgkgICAgQy5IbWFjU0hBMzg0ID0gU0hBNTEyLl9jcmVhdGVIbWFjSGVscGVyKFNIQTM4NCk7Cgl9KCkpOwoKCgkvKioKCSAqIENpcGhlciBjb3JlIGNvbXBvbmVudHMuCgkgKi8KCUNyeXB0b0pTLmxpYi5DaXBoZXIgfHwgKGZ1bmN0aW9uICh1bmRlZmluZWQpIHsKCSAgICAvLyBTaG9ydGN1dHMKCSAgICB2YXIgQyA9IENyeXB0b0pTOwoJICAgIHZhciBDX2xpYiA9IEMubGliOwoJICAgIHZhciBCYXNlID0gQ19saWIuQmFzZTsKCSAgICB2YXIgV29yZEFycmF5ID0gQ19saWIuV29yZEFycmF5OwoJICAgIHZhciBCdWZmZXJlZEJsb2NrQWxnb3JpdGhtID0gQ19saWIuQnVmZmVyZWRCbG9ja0FsZ29yaXRobTsKCSAgICB2YXIgQ19lbmMgPSBDLmVuYzsKCSAgICB2YXIgVXRmOCA9IENfZW5jLlV0Zjg7CgkgICAgdmFyIEJhc2U2NCA9IENfZW5jLkJhc2U2NDsKCSAgICB2YXIgQ19hbGdvID0gQy5hbGdvOwoJICAgIHZhciBFdnBLREYgPSBDX2FsZ28uRXZwS0RGOwoKCSAgICAvKioKCSAgICAgKiBBYnN0cmFjdCBiYXNlIGNpcGhlciB0ZW1wbGF0ZS4KCSAgICAgKgoJICAgICAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBrZXlTaXplIFRoaXMgY2lwaGVyJ3Mga2V5IHNpemUuIERlZmF1bHQ6IDQgKDEyOCBiaXRzKQoJICAgICAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBpdlNpemUgVGhpcyBjaXBoZXIncyBJViBzaXplLiBEZWZhdWx0OiA0ICgxMjggYml0cykKCSAgICAgKiBAcHJvcGVydHkge251bWJlcn0gX0VOQ19YRk9STV9NT0RFIEEgY29uc3RhbnQgcmVwcmVzZW50aW5nIGVuY3J5cHRpb24gbW9kZS4KCSAgICAgKiBAcHJvcGVydHkge251bWJlcn0gX0RFQ19YRk9STV9NT0RFIEEgY29uc3RhbnQgcmVwcmVzZW50aW5nIGRlY3J5cHRpb24gbW9kZS4KCSAgICAgKi8KCSAgICB2YXIgQ2lwaGVyID0gQ19saWIuQ2lwaGVyID0gQnVmZmVyZWRCbG9ja0FsZ29yaXRobS5leHRlbmQoewoJICAgICAgICAvKioKCSAgICAgICAgICogQ29uZmlndXJhdGlvbiBvcHRpb25zLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcHJvcGVydHkge1dvcmRBcnJheX0gaXYgVGhlIElWIHRvIHVzZSBmb3IgdGhpcyBvcGVyYXRpb24uCgkgICAgICAgICAqLwoJICAgICAgICBjZmc6IEJhc2UuZXh0ZW5kKCksCgoJICAgICAgICAvKioKCSAgICAgICAgICogQ3JlYXRlcyB0aGlzIGNpcGhlciBpbiBlbmNyeXB0aW9uIG1vZGUuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBwYXJhbSB7V29yZEFycmF5fSBrZXkgVGhlIGtleS4KCSAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGNmZyAoT3B0aW9uYWwpIFRoZSBjb25maWd1cmF0aW9uIG9wdGlvbnMgdG8gdXNlIGZvciB0aGlzIG9wZXJhdGlvbi4KCSAgICAgICAgICoKCSAgICAgICAgICogQHJldHVybiB7Q2lwaGVyfSBBIGNpcGhlciBpbnN0YW5jZS4KCSAgICAgICAgICoKCSAgICAgICAgICogQHN0YXRpYwoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIGNpcGhlciA9IENyeXB0b0pTLmFsZ28uQUVTLmNyZWF0ZUVuY3J5cHRvcihrZXlXb3JkQXJyYXksIHsgaXY6IGl2V29yZEFycmF5IH0pOwoJICAgICAgICAgKi8KCSAgICAgICAgY3JlYXRlRW5jcnlwdG9yOiBmdW5jdGlvbiAoa2V5LCBjZmcpIHsKCSAgICAgICAgICAgIHJldHVybiB0aGlzLmNyZWF0ZSh0aGlzLl9FTkNfWEZPUk1fTU9ERSwga2V5LCBjZmcpOwoJICAgICAgICB9LAoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIENyZWF0ZXMgdGhpcyBjaXBoZXIgaW4gZGVjcnlwdGlvbiBtb2RlLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcGFyYW0ge1dvcmRBcnJheX0ga2V5IFRoZSBrZXkuCgkgICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBjZmcgKE9wdGlvbmFsKSBUaGUgY29uZmlndXJhdGlvbiBvcHRpb25zIHRvIHVzZSBmb3IgdGhpcyBvcGVyYXRpb24uCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge0NpcGhlcn0gQSBjaXBoZXIgaW5zdGFuY2UuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBzdGF0aWMKCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciBjaXBoZXIgPSBDcnlwdG9KUy5hbGdvLkFFUy5jcmVhdGVEZWNyeXB0b3Ioa2V5V29yZEFycmF5LCB7IGl2OiBpdldvcmRBcnJheSB9KTsKCSAgICAgICAgICovCgkgICAgICAgIGNyZWF0ZURlY3J5cHRvcjogZnVuY3Rpb24gKGtleSwgY2ZnKSB7CgkgICAgICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGUodGhpcy5fREVDX1hGT1JNX01PREUsIGtleSwgY2ZnKTsKCSAgICAgICAgfSwKCgkgICAgICAgIC8qKgoJICAgICAgICAgKiBJbml0aWFsaXplcyBhIG5ld2x5IGNyZWF0ZWQgY2lwaGVyLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcGFyYW0ge251bWJlcn0geGZvcm1Nb2RlIEVpdGhlciB0aGUgZW5jcnlwdGlvbiBvciBkZWNyeXB0aW9uIHRyYW5zb3JtYXRpb24gbW9kZSBjb25zdGFudC4KCSAgICAgICAgICogQHBhcmFtIHtXb3JkQXJyYXl9IGtleSBUaGUga2V5LgoJICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gY2ZnIChPcHRpb25hbCkgVGhlIGNvbmZpZ3VyYXRpb24gb3B0aW9ucyB0byB1c2UgZm9yIHRoaXMgb3BlcmF0aW9uLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIGNpcGhlciA9IENyeXB0b0pTLmFsZ28uQUVTLmNyZWF0ZShDcnlwdG9KUy5hbGdvLkFFUy5fRU5DX1hGT1JNX01PREUsIGtleVdvcmRBcnJheSwgeyBpdjogaXZXb3JkQXJyYXkgfSk7CgkgICAgICAgICAqLwoJICAgICAgICBpbml0OiBmdW5jdGlvbiAoeGZvcm1Nb2RlLCBrZXksIGNmZykgewoJICAgICAgICAgICAgLy8gQXBwbHkgY29uZmlnIGRlZmF1bHRzCgkgICAgICAgICAgICB0aGlzLmNmZyA9IHRoaXMuY2ZnLmV4dGVuZChjZmcpOwoKCSAgICAgICAgICAgIC8vIFN0b3JlIHRyYW5zZm9ybSBtb2RlIGFuZCBrZXkKCSAgICAgICAgICAgIHRoaXMuX3hmb3JtTW9kZSA9IHhmb3JtTW9kZTsKCSAgICAgICAgICAgIHRoaXMuX2tleSA9IGtleTsKCgkgICAgICAgICAgICAvLyBTZXQgaW5pdGlhbCB2YWx1ZXMKCSAgICAgICAgICAgIHRoaXMucmVzZXQoKTsKCSAgICAgICAgfSwKCgkgICAgICAgIC8qKgoJICAgICAgICAgKiBSZXNldHMgdGhpcyBjaXBoZXIgdG8gaXRzIGluaXRpYWwgc3RhdGUuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAqCgkgICAgICAgICAqICAgICBjaXBoZXIucmVzZXQoKTsKCSAgICAgICAgICovCgkgICAgICAgIHJlc2V0OiBmdW5jdGlvbiAoKSB7CgkgICAgICAgICAgICAvLyBSZXNldCBkYXRhIGJ1ZmZlcgoJICAgICAgICAgICAgQnVmZmVyZWRCbG9ja0FsZ29yaXRobS5yZXNldC5jYWxsKHRoaXMpOwoKCSAgICAgICAgICAgIC8vIFBlcmZvcm0gY29uY3JldGUtY2lwaGVyIGxvZ2ljCgkgICAgICAgICAgICB0aGlzLl9kb1Jlc2V0KCk7CgkgICAgICAgIH0sCgoJICAgICAgICAvKioKCSAgICAgICAgICogQWRkcyBkYXRhIHRvIGJlIGVuY3J5cHRlZCBvciBkZWNyeXB0ZWQuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30gZGF0YVVwZGF0ZSBUaGUgZGF0YSB0byBlbmNyeXB0IG9yIGRlY3J5cHQuCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge1dvcmRBcnJheX0gVGhlIGRhdGEgYWZ0ZXIgcHJvY2Vzc2luZy4KCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciBlbmNyeXB0ZWQgPSBjaXBoZXIucHJvY2VzcygnZGF0YScpOwoJICAgICAgICAgKiAgICAgdmFyIGVuY3J5cHRlZCA9IGNpcGhlci5wcm9jZXNzKHdvcmRBcnJheSk7CgkgICAgICAgICAqLwoJICAgICAgICBwcm9jZXNzOiBmdW5jdGlvbiAoZGF0YVVwZGF0ZSkgewoJICAgICAgICAgICAgLy8gQXBwZW5kCgkgICAgICAgICAgICB0aGlzLl9hcHBlbmQoZGF0YVVwZGF0ZSk7CgoJICAgICAgICAgICAgLy8gUHJvY2VzcyBhdmFpbGFibGUgYmxvY2tzCgkgICAgICAgICAgICByZXR1cm4gdGhpcy5fcHJvY2VzcygpOwoJICAgICAgICB9LAoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIEZpbmFsaXplcyB0aGUgZW5jcnlwdGlvbiBvciBkZWNyeXB0aW9uIHByb2Nlc3MuCgkgICAgICAgICAqIE5vdGUgdGhhdCB0aGUgZmluYWxpemUgb3BlcmF0aW9uIGlzIGVmZmVjdGl2ZWx5IGEgZGVzdHJ1Y3RpdmUsIHJlYWQtb25jZSBvcGVyYXRpb24uCgkgICAgICAgICAqCgkgICAgICAgICAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30gZGF0YVVwZGF0ZSBUaGUgZmluYWwgZGF0YSB0byBlbmNyeXB0IG9yIGRlY3J5cHQuCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge1dvcmRBcnJheX0gVGhlIGRhdGEgYWZ0ZXIgZmluYWwgcHJvY2Vzc2luZy4KCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciBlbmNyeXB0ZWQgPSBjaXBoZXIuZmluYWxpemUoKTsKCSAgICAgICAgICogICAgIHZhciBlbmNyeXB0ZWQgPSBjaXBoZXIuZmluYWxpemUoJ2RhdGEnKTsKCSAgICAgICAgICogICAgIHZhciBlbmNyeXB0ZWQgPSBjaXBoZXIuZmluYWxpemUod29yZEFycmF5KTsKCSAgICAgICAgICovCgkgICAgICAgIGZpbmFsaXplOiBmdW5jdGlvbiAoZGF0YVVwZGF0ZSkgewoJICAgICAgICAgICAgLy8gRmluYWwgZGF0YSB1cGRhdGUKCSAgICAgICAgICAgIGlmIChkYXRhVXBkYXRlKSB7CgkgICAgICAgICAgICAgICAgdGhpcy5fYXBwZW5kKGRhdGFVcGRhdGUpOwoJICAgICAgICAgICAgfQoKCSAgICAgICAgICAgIC8vIFBlcmZvcm0gY29uY3JldGUtY2lwaGVyIGxvZ2ljCgkgICAgICAgICAgICB2YXIgZmluYWxQcm9jZXNzZWREYXRhID0gdGhpcy5fZG9GaW5hbGl6ZSgpOwoKCSAgICAgICAgICAgIHJldHVybiBmaW5hbFByb2Nlc3NlZERhdGE7CgkgICAgICAgIH0sCgoJICAgICAgICBrZXlTaXplOiAxMjgvMzIsCgoJICAgICAgICBpdlNpemU6IDEyOC8zMiwKCgkgICAgICAgIF9FTkNfWEZPUk1fTU9ERTogMSwKCgkgICAgICAgIF9ERUNfWEZPUk1fTU9ERTogMiwKCgkgICAgICAgIC8qKgoJICAgICAgICAgKiBDcmVhdGVzIHNob3J0Y3V0IGZ1bmN0aW9ucyB0byBhIGNpcGhlcidzIG9iamVjdCBpbnRlcmZhY2UuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBwYXJhbSB7Q2lwaGVyfSBjaXBoZXIgVGhlIGNpcGhlciB0byBjcmVhdGUgYSBoZWxwZXIgZm9yLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcmV0dXJuIHtPYmplY3R9IEFuIG9iamVjdCB3aXRoIGVuY3J5cHQgYW5kIGRlY3J5cHQgc2hvcnRjdXQgZnVuY3Rpb25zLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAc3RhdGljCgkgICAgICAgICAqCgkgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAqCgkgICAgICAgICAqICAgICB2YXIgQUVTID0gQ3J5cHRvSlMubGliLkNpcGhlci5fY3JlYXRlSGVscGVyKENyeXB0b0pTLmFsZ28uQUVTKTsKCSAgICAgICAgICovCgkgICAgICAgIF9jcmVhdGVIZWxwZXI6IChmdW5jdGlvbiAoKSB7CgkgICAgICAgICAgICBmdW5jdGlvbiBzZWxlY3RDaXBoZXJTdHJhdGVneShrZXkpIHsKCSAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGtleSA9PSAnc3RyaW5nJykgewoJICAgICAgICAgICAgICAgICAgICByZXR1cm4gUGFzc3dvcmRCYXNlZENpcGhlcjsKCSAgICAgICAgICAgICAgICB9IGVsc2UgewoJICAgICAgICAgICAgICAgICAgICByZXR1cm4gU2VyaWFsaXphYmxlQ2lwaGVyOwoJICAgICAgICAgICAgICAgIH0KCSAgICAgICAgICAgIH0KCgkgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGNpcGhlcikgewoJICAgICAgICAgICAgICAgIHJldHVybiB7CgkgICAgICAgICAgICAgICAgICAgIGVuY3J5cHQ6IGZ1bmN0aW9uIChtZXNzYWdlLCBrZXksIGNmZykgewoJICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNlbGVjdENpcGhlclN0cmF0ZWd5KGtleSkuZW5jcnlwdChjaXBoZXIsIG1lc3NhZ2UsIGtleSwgY2ZnKTsKCSAgICAgICAgICAgICAgICAgICAgfSwKCgkgICAgICAgICAgICAgICAgICAgIGRlY3J5cHQ6IGZ1bmN0aW9uIChjaXBoZXJ0ZXh0LCBrZXksIGNmZykgewoJICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNlbGVjdENpcGhlclN0cmF0ZWd5KGtleSkuZGVjcnlwdChjaXBoZXIsIGNpcGhlcnRleHQsIGtleSwgY2ZnKTsKCSAgICAgICAgICAgICAgICAgICAgfQoJICAgICAgICAgICAgICAgIH07CgkgICAgICAgICAgICB9OwoJICAgICAgICB9KCkpCgkgICAgfSk7CgoJICAgIC8qKgoJICAgICAqIEFic3RyYWN0IGJhc2Ugc3RyZWFtIGNpcGhlciB0ZW1wbGF0ZS4KCSAgICAgKgoJICAgICAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBibG9ja1NpemUgVGhlIG51bWJlciBvZiAzMi1iaXQgd29yZHMgdGhpcyBjaXBoZXIgb3BlcmF0ZXMgb24uIERlZmF1bHQ6IDEgKDMyIGJpdHMpCgkgICAgICovCgkgICAgdmFyIFN0cmVhbUNpcGhlciA9IENfbGliLlN0cmVhbUNpcGhlciA9IENpcGhlci5leHRlbmQoewoJICAgICAgICBfZG9GaW5hbGl6ZTogZnVuY3Rpb24gKCkgewoJICAgICAgICAgICAgLy8gUHJvY2VzcyBwYXJ0aWFsIGJsb2NrcwoJICAgICAgICAgICAgdmFyIGZpbmFsUHJvY2Vzc2VkQmxvY2tzID0gdGhpcy5fcHJvY2VzcyghISdmbHVzaCcpOwoKCSAgICAgICAgICAgIHJldHVybiBmaW5hbFByb2Nlc3NlZEJsb2NrczsKCSAgICAgICAgfSwKCgkgICAgICAgIGJsb2NrU2l6ZTogMQoJICAgIH0pOwoKCSAgICAvKioKCSAgICAgKiBNb2RlIG5hbWVzcGFjZS4KCSAgICAgKi8KCSAgICB2YXIgQ19tb2RlID0gQy5tb2RlID0ge307CgoJICAgIC8qKgoJICAgICAqIEFic3RyYWN0IGJhc2UgYmxvY2sgY2lwaGVyIG1vZGUgdGVtcGxhdGUuCgkgICAgICovCgkgICAgdmFyIEJsb2NrQ2lwaGVyTW9kZSA9IENfbGliLkJsb2NrQ2lwaGVyTW9kZSA9IEJhc2UuZXh0ZW5kKHsKCSAgICAgICAgLyoqCgkgICAgICAgICAqIENyZWF0ZXMgdGhpcyBtb2RlIGZvciBlbmNyeXB0aW9uLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcGFyYW0ge0NpcGhlcn0gY2lwaGVyIEEgYmxvY2sgY2lwaGVyIGluc3RhbmNlLgoJICAgICAgICAgKiBAcGFyYW0ge0FycmF5fSBpdiBUaGUgSVYgd29yZHMuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBzdGF0aWMKCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciBtb2RlID0gQ3J5cHRvSlMubW9kZS5DQkMuY3JlYXRlRW5jcnlwdG9yKGNpcGhlciwgaXYud29yZHMpOwoJICAgICAgICAgKi8KCSAgICAgICAgY3JlYXRlRW5jcnlwdG9yOiBmdW5jdGlvbiAoY2lwaGVyLCBpdikgewoJICAgICAgICAgICAgcmV0dXJuIHRoaXMuRW5jcnlwdG9yLmNyZWF0ZShjaXBoZXIsIGl2KTsKCSAgICAgICAgfSwKCgkgICAgICAgIC8qKgoJICAgICAgICAgKiBDcmVhdGVzIHRoaXMgbW9kZSBmb3IgZGVjcnlwdGlvbi4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtDaXBoZXJ9IGNpcGhlciBBIGJsb2NrIGNpcGhlciBpbnN0YW5jZS4KCSAgICAgICAgICogQHBhcmFtIHtBcnJheX0gaXYgVGhlIElWIHdvcmRzLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAc3RhdGljCgkgICAgICAgICAqCgkgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAqCgkgICAgICAgICAqICAgICB2YXIgbW9kZSA9IENyeXB0b0pTLm1vZGUuQ0JDLmNyZWF0ZURlY3J5cHRvcihjaXBoZXIsIGl2LndvcmRzKTsKCSAgICAgICAgICovCgkgICAgICAgIGNyZWF0ZURlY3J5cHRvcjogZnVuY3Rpb24gKGNpcGhlciwgaXYpIHsKCSAgICAgICAgICAgIHJldHVybiB0aGlzLkRlY3J5cHRvci5jcmVhdGUoY2lwaGVyLCBpdik7CgkgICAgICAgIH0sCgoJICAgICAgICAvKioKCSAgICAgICAgICogSW5pdGlhbGl6ZXMgYSBuZXdseSBjcmVhdGVkIG1vZGUuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBwYXJhbSB7Q2lwaGVyfSBjaXBoZXIgQSBibG9jayBjaXBoZXIgaW5zdGFuY2UuCgkgICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IGl2IFRoZSBJViB3b3Jkcy4KCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciBtb2RlID0gQ3J5cHRvSlMubW9kZS5DQkMuRW5jcnlwdG9yLmNyZWF0ZShjaXBoZXIsIGl2LndvcmRzKTsKCSAgICAgICAgICovCgkgICAgICAgIGluaXQ6IGZ1bmN0aW9uIChjaXBoZXIsIGl2KSB7CgkgICAgICAgICAgICB0aGlzLl9jaXBoZXIgPSBjaXBoZXI7CgkgICAgICAgICAgICB0aGlzLl9pdiA9IGl2OwoJICAgICAgICB9CgkgICAgfSk7CgoJICAgIC8qKgoJICAgICAqIENpcGhlciBCbG9jayBDaGFpbmluZyBtb2RlLgoJICAgICAqLwoJICAgIHZhciBDQkMgPSBDX21vZGUuQ0JDID0gKGZ1bmN0aW9uICgpIHsKCSAgICAgICAgLyoqCgkgICAgICAgICAqIEFic3RyYWN0IGJhc2UgQ0JDIG1vZGUuCgkgICAgICAgICAqLwoJICAgICAgICB2YXIgQ0JDID0gQmxvY2tDaXBoZXJNb2RlLmV4dGVuZCgpOwoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIENCQyBlbmNyeXB0b3IuCgkgICAgICAgICAqLwoJICAgICAgICBDQkMuRW5jcnlwdG9yID0gQ0JDLmV4dGVuZCh7CgkgICAgICAgICAgICAvKioKCSAgICAgICAgICAgICAqIFByb2Nlc3NlcyB0aGUgZGF0YSBibG9jayBhdCBvZmZzZXQuCgkgICAgICAgICAgICAgKgoJICAgICAgICAgICAgICogQHBhcmFtIHtBcnJheX0gd29yZHMgVGhlIGRhdGEgd29yZHMgdG8gb3BlcmF0ZSBvbi4KCSAgICAgICAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSBvZmZzZXQgVGhlIG9mZnNldCB3aGVyZSB0aGUgYmxvY2sgc3RhcnRzLgoJICAgICAgICAgICAgICoKCSAgICAgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAgICAgKgoJICAgICAgICAgICAgICogICAgIG1vZGUucHJvY2Vzc0Jsb2NrKGRhdGEud29yZHMsIG9mZnNldCk7CgkgICAgICAgICAgICAgKi8KCSAgICAgICAgICAgIHByb2Nlc3NCbG9jazogZnVuY3Rpb24gKHdvcmRzLCBvZmZzZXQpIHsKCSAgICAgICAgICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgICAgICAgICB2YXIgY2lwaGVyID0gdGhpcy5fY2lwaGVyOwoJICAgICAgICAgICAgICAgIHZhciBibG9ja1NpemUgPSBjaXBoZXIuYmxvY2tTaXplOwoKCSAgICAgICAgICAgICAgICAvLyBYT1IgYW5kIGVuY3J5cHQKCSAgICAgICAgICAgICAgICB4b3JCbG9jay5jYWxsKHRoaXMsIHdvcmRzLCBvZmZzZXQsIGJsb2NrU2l6ZSk7CgkgICAgICAgICAgICAgICAgY2lwaGVyLmVuY3J5cHRCbG9jayh3b3Jkcywgb2Zmc2V0KTsKCgkgICAgICAgICAgICAgICAgLy8gUmVtZW1iZXIgdGhpcyBibG9jayB0byB1c2Ugd2l0aCBuZXh0IGJsb2NrCgkgICAgICAgICAgICAgICAgdGhpcy5fcHJldkJsb2NrID0gd29yZHMuc2xpY2Uob2Zmc2V0LCBvZmZzZXQgKyBibG9ja1NpemUpOwoJICAgICAgICAgICAgfQoJICAgICAgICB9KTsKCgkgICAgICAgIC8qKgoJICAgICAgICAgKiBDQkMgZGVjcnlwdG9yLgoJICAgICAgICAgKi8KCSAgICAgICAgQ0JDLkRlY3J5cHRvciA9IENCQy5leHRlbmQoewoJICAgICAgICAgICAgLyoqCgkgICAgICAgICAgICAgKiBQcm9jZXNzZXMgdGhlIGRhdGEgYmxvY2sgYXQgb2Zmc2V0LgoJICAgICAgICAgICAgICoKCSAgICAgICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IHdvcmRzIFRoZSBkYXRhIHdvcmRzIHRvIG9wZXJhdGUgb24uCgkgICAgICAgICAgICAgKiBAcGFyYW0ge251bWJlcn0gb2Zmc2V0IFRoZSBvZmZzZXQgd2hlcmUgdGhlIGJsb2NrIHN0YXJ0cy4KCSAgICAgICAgICAgICAqCgkgICAgICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgICAgICoKCSAgICAgICAgICAgICAqICAgICBtb2RlLnByb2Nlc3NCbG9jayhkYXRhLndvcmRzLCBvZmZzZXQpOwoJICAgICAgICAgICAgICovCgkgICAgICAgICAgICBwcm9jZXNzQmxvY2s6IGZ1bmN0aW9uICh3b3Jkcywgb2Zmc2V0KSB7CgkgICAgICAgICAgICAgICAgLy8gU2hvcnRjdXRzCgkgICAgICAgICAgICAgICAgdmFyIGNpcGhlciA9IHRoaXMuX2NpcGhlcjsKCSAgICAgICAgICAgICAgICB2YXIgYmxvY2tTaXplID0gY2lwaGVyLmJsb2NrU2l6ZTsKCgkgICAgICAgICAgICAgICAgLy8gUmVtZW1iZXIgdGhpcyBibG9jayB0byB1c2Ugd2l0aCBuZXh0IGJsb2NrCgkgICAgICAgICAgICAgICAgdmFyIHRoaXNCbG9jayA9IHdvcmRzLnNsaWNlKG9mZnNldCwgb2Zmc2V0ICsgYmxvY2tTaXplKTsKCgkgICAgICAgICAgICAgICAgLy8gRGVjcnlwdCBhbmQgWE9SCgkgICAgICAgICAgICAgICAgY2lwaGVyLmRlY3J5cHRCbG9jayh3b3Jkcywgb2Zmc2V0KTsKCSAgICAgICAgICAgICAgICB4b3JCbG9jay5jYWxsKHRoaXMsIHdvcmRzLCBvZmZzZXQsIGJsb2NrU2l6ZSk7CgoJICAgICAgICAgICAgICAgIC8vIFRoaXMgYmxvY2sgYmVjb21lcyB0aGUgcHJldmlvdXMgYmxvY2sKCSAgICAgICAgICAgICAgICB0aGlzLl9wcmV2QmxvY2sgPSB0aGlzQmxvY2s7CgkgICAgICAgICAgICB9CgkgICAgICAgIH0pOwoKCSAgICAgICAgZnVuY3Rpb24geG9yQmxvY2sod29yZHMsIG9mZnNldCwgYmxvY2tTaXplKSB7CgkgICAgICAgICAgICAvLyBTaG9ydGN1dAoJICAgICAgICAgICAgdmFyIGl2ID0gdGhpcy5faXY7CgoJICAgICAgICAgICAgLy8gQ2hvb3NlIG1peGluZyBibG9jawoJICAgICAgICAgICAgaWYgKGl2KSB7CgkgICAgICAgICAgICAgICAgdmFyIGJsb2NrID0gaXY7CgoJICAgICAgICAgICAgICAgIC8vIFJlbW92ZSBJViBmb3Igc3Vic2VxdWVudCBibG9ja3MKCSAgICAgICAgICAgICAgICB0aGlzLl9pdiA9IHVuZGVmaW5lZDsKCSAgICAgICAgICAgIH0gZWxzZSB7CgkgICAgICAgICAgICAgICAgdmFyIGJsb2NrID0gdGhpcy5fcHJldkJsb2NrOwoJICAgICAgICAgICAgfQoKCSAgICAgICAgICAgIC8vIFhPUiBibG9ja3MKCSAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYmxvY2tTaXplOyBpKyspIHsKCSAgICAgICAgICAgICAgICB3b3Jkc1tvZmZzZXQgKyBpXSBePSBibG9ja1tpXTsKCSAgICAgICAgICAgIH0KCSAgICAgICAgfQoKCSAgICAgICAgcmV0dXJuIENCQzsKCSAgICB9KCkpOwoKCSAgICAvKioKCSAgICAgKiBQYWRkaW5nIG5hbWVzcGFjZS4KCSAgICAgKi8KCSAgICB2YXIgQ19wYWQgPSBDLnBhZCA9IHt9OwoKCSAgICAvKioKCSAgICAgKiBQS0NTICM1LzcgcGFkZGluZyBzdHJhdGVneS4KCSAgICAgKi8KCSAgICB2YXIgUGtjczcgPSBDX3BhZC5Qa2NzNyA9IHsKCSAgICAgICAgLyoqCgkgICAgICAgICAqIFBhZHMgZGF0YSB1c2luZyB0aGUgYWxnb3JpdGhtIGRlZmluZWQgaW4gUEtDUyAjNS83LgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcGFyYW0ge1dvcmRBcnJheX0gZGF0YSBUaGUgZGF0YSB0byBwYWQuCgkgICAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSBibG9ja1NpemUgVGhlIG11bHRpcGxlIHRoYXQgdGhlIGRhdGEgc2hvdWxkIGJlIHBhZGRlZCB0by4KCSAgICAgICAgICoKCSAgICAgICAgICogQHN0YXRpYwoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgQ3J5cHRvSlMucGFkLlBrY3M3LnBhZCh3b3JkQXJyYXksIDQpOwoJICAgICAgICAgKi8KCSAgICAgICAgcGFkOiBmdW5jdGlvbiAoZGF0YSwgYmxvY2tTaXplKSB7CgkgICAgICAgICAgICAvLyBTaG9ydGN1dAoJICAgICAgICAgICAgdmFyIGJsb2NrU2l6ZUJ5dGVzID0gYmxvY2tTaXplICogNDsKCgkgICAgICAgICAgICAvLyBDb3VudCBwYWRkaW5nIGJ5dGVzCgkgICAgICAgICAgICB2YXIgblBhZGRpbmdCeXRlcyA9IGJsb2NrU2l6ZUJ5dGVzIC0gZGF0YS5zaWdCeXRlcyAlIGJsb2NrU2l6ZUJ5dGVzOwoKCSAgICAgICAgICAgIC8vIENyZWF0ZSBwYWRkaW5nIHdvcmQKCSAgICAgICAgICAgIHZhciBwYWRkaW5nV29yZCA9IChuUGFkZGluZ0J5dGVzIDw8IDI0KSB8IChuUGFkZGluZ0J5dGVzIDw8IDE2KSB8IChuUGFkZGluZ0J5dGVzIDw8IDgpIHwgblBhZGRpbmdCeXRlczsKCgkgICAgICAgICAgICAvLyBDcmVhdGUgcGFkZGluZwoJICAgICAgICAgICAgdmFyIHBhZGRpbmdXb3JkcyA9IFtdOwoJICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuUGFkZGluZ0J5dGVzOyBpICs9IDQpIHsKCSAgICAgICAgICAgICAgICBwYWRkaW5nV29yZHMucHVzaChwYWRkaW5nV29yZCk7CgkgICAgICAgICAgICB9CgkgICAgICAgICAgICB2YXIgcGFkZGluZyA9IFdvcmRBcnJheS5jcmVhdGUocGFkZGluZ1dvcmRzLCBuUGFkZGluZ0J5dGVzKTsKCgkgICAgICAgICAgICAvLyBBZGQgcGFkZGluZwoJICAgICAgICAgICAgZGF0YS5jb25jYXQocGFkZGluZyk7CgkgICAgICAgIH0sCgoJICAgICAgICAvKioKCSAgICAgICAgICogVW5wYWRzIGRhdGEgdGhhdCBoYWQgYmVlbiBwYWRkZWQgdXNpbmcgdGhlIGFsZ29yaXRobSBkZWZpbmVkIGluIFBLQ1MgIzUvNy4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtXb3JkQXJyYXl9IGRhdGEgVGhlIGRhdGEgdG8gdW5wYWQuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBzdGF0aWMKCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIENyeXB0b0pTLnBhZC5Qa2NzNy51bnBhZCh3b3JkQXJyYXkpOwoJICAgICAgICAgKi8KCSAgICAgICAgdW5wYWQ6IGZ1bmN0aW9uIChkYXRhKSB7CgkgICAgICAgICAgICAvLyBHZXQgbnVtYmVyIG9mIHBhZGRpbmcgYnl0ZXMgZnJvbSBsYXN0IGJ5dGUKCSAgICAgICAgICAgIHZhciBuUGFkZGluZ0J5dGVzID0gZGF0YS53b3Jkc1soZGF0YS5zaWdCeXRlcyAtIDEpID4+PiAyXSAmIDB4ZmY7CgoJICAgICAgICAgICAgLy8gUmVtb3ZlIHBhZGRpbmcKCSAgICAgICAgICAgIGRhdGEuc2lnQnl0ZXMgLT0gblBhZGRpbmdCeXRlczsKCSAgICAgICAgfQoJICAgIH07CgoJICAgIC8qKgoJICAgICAqIEFic3RyYWN0IGJhc2UgYmxvY2sgY2lwaGVyIHRlbXBsYXRlLgoJICAgICAqCgkgICAgICogQHByb3BlcnR5IHtudW1iZXJ9IGJsb2NrU2l6ZSBUaGUgbnVtYmVyIG9mIDMyLWJpdCB3b3JkcyB0aGlzIGNpcGhlciBvcGVyYXRlcyBvbi4gRGVmYXVsdDogNCAoMTI4IGJpdHMpCgkgICAgICovCgkgICAgdmFyIEJsb2NrQ2lwaGVyID0gQ19saWIuQmxvY2tDaXBoZXIgPSBDaXBoZXIuZXh0ZW5kKHsKCSAgICAgICAgLyoqCgkgICAgICAgICAqIENvbmZpZ3VyYXRpb24gb3B0aW9ucy4KCSAgICAgICAgICoKCSAgICAgICAgICogQHByb3BlcnR5IHtNb2RlfSBtb2RlIFRoZSBibG9jayBtb2RlIHRvIHVzZS4gRGVmYXVsdDogQ0JDCgkgICAgICAgICAqIEBwcm9wZXJ0eSB7UGFkZGluZ30gcGFkZGluZyBUaGUgcGFkZGluZyBzdHJhdGVneSB0byB1c2UuIERlZmF1bHQ6IFBrY3M3CgkgICAgICAgICAqLwoJICAgICAgICBjZmc6IENpcGhlci5jZmcuZXh0ZW5kKHsKCSAgICAgICAgICAgIG1vZGU6IENCQywKCSAgICAgICAgICAgIHBhZGRpbmc6IFBrY3M3CgkgICAgICAgIH0pLAoKCSAgICAgICAgcmVzZXQ6IGZ1bmN0aW9uICgpIHsKCSAgICAgICAgICAgIC8vIFJlc2V0IGNpcGhlcgoJICAgICAgICAgICAgQ2lwaGVyLnJlc2V0LmNhbGwodGhpcyk7CgoJICAgICAgICAgICAgLy8gU2hvcnRjdXRzCgkgICAgICAgICAgICB2YXIgY2ZnID0gdGhpcy5jZmc7CgkgICAgICAgICAgICB2YXIgaXYgPSBjZmcuaXY7CgkgICAgICAgICAgICB2YXIgbW9kZSA9IGNmZy5tb2RlOwoKCSAgICAgICAgICAgIC8vIFJlc2V0IGJsb2NrIG1vZGUKCSAgICAgICAgICAgIGlmICh0aGlzLl94Zm9ybU1vZGUgPT0gdGhpcy5fRU5DX1hGT1JNX01PREUpIHsKCSAgICAgICAgICAgICAgICB2YXIgbW9kZUNyZWF0b3IgPSBtb2RlLmNyZWF0ZUVuY3J5cHRvcjsKCSAgICAgICAgICAgIH0gZWxzZSAvKiBpZiAodGhpcy5feGZvcm1Nb2RlID09IHRoaXMuX0RFQ19YRk9STV9NT0RFKSAqLyB7CgkgICAgICAgICAgICAgICAgdmFyIG1vZGVDcmVhdG9yID0gbW9kZS5jcmVhdGVEZWNyeXB0b3I7CgkgICAgICAgICAgICAgICAgLy8gS2VlcCBhdCBsZWFzdCBvbmUgYmxvY2sgaW4gdGhlIGJ1ZmZlciBmb3IgdW5wYWRkaW5nCgkgICAgICAgICAgICAgICAgdGhpcy5fbWluQnVmZmVyU2l6ZSA9IDE7CgkgICAgICAgICAgICB9CgoJICAgICAgICAgICAgaWYgKHRoaXMuX21vZGUgJiYgdGhpcy5fbW9kZS5fX2NyZWF0b3IgPT0gbW9kZUNyZWF0b3IpIHsKCSAgICAgICAgICAgICAgICB0aGlzLl9tb2RlLmluaXQodGhpcywgaXYgJiYgaXYud29yZHMpOwoJICAgICAgICAgICAgfSBlbHNlIHsKCSAgICAgICAgICAgICAgICB0aGlzLl9tb2RlID0gbW9kZUNyZWF0b3IuY2FsbChtb2RlLCB0aGlzLCBpdiAmJiBpdi53b3Jkcyk7CgkgICAgICAgICAgICAgICAgdGhpcy5fbW9kZS5fX2NyZWF0b3IgPSBtb2RlQ3JlYXRvcjsKCSAgICAgICAgICAgIH0KCSAgICAgICAgfSwKCgkgICAgICAgIF9kb1Byb2Nlc3NCbG9jazogZnVuY3Rpb24gKHdvcmRzLCBvZmZzZXQpIHsKCSAgICAgICAgICAgIHRoaXMuX21vZGUucHJvY2Vzc0Jsb2NrKHdvcmRzLCBvZmZzZXQpOwoJICAgICAgICB9LAoKCSAgICAgICAgX2RvRmluYWxpemU6IGZ1bmN0aW9uICgpIHsKCSAgICAgICAgICAgIC8vIFNob3J0Y3V0CgkgICAgICAgICAgICB2YXIgcGFkZGluZyA9IHRoaXMuY2ZnLnBhZGRpbmc7CgoJICAgICAgICAgICAgLy8gRmluYWxpemUKCSAgICAgICAgICAgIGlmICh0aGlzLl94Zm9ybU1vZGUgPT0gdGhpcy5fRU5DX1hGT1JNX01PREUpIHsKCSAgICAgICAgICAgICAgICAvLyBQYWQgZGF0YQoJICAgICAgICAgICAgICAgIHBhZGRpbmcucGFkKHRoaXMuX2RhdGEsIHRoaXMuYmxvY2tTaXplKTsKCgkgICAgICAgICAgICAgICAgLy8gUHJvY2VzcyBmaW5hbCBibG9ja3MKCSAgICAgICAgICAgICAgICB2YXIgZmluYWxQcm9jZXNzZWRCbG9ja3MgPSB0aGlzLl9wcm9jZXNzKCEhJ2ZsdXNoJyk7CgkgICAgICAgICAgICB9IGVsc2UgLyogaWYgKHRoaXMuX3hmb3JtTW9kZSA9PSB0aGlzLl9ERUNfWEZPUk1fTU9ERSkgKi8gewoJICAgICAgICAgICAgICAgIC8vIFByb2Nlc3MgZmluYWwgYmxvY2tzCgkgICAgICAgICAgICAgICAgdmFyIGZpbmFsUHJvY2Vzc2VkQmxvY2tzID0gdGhpcy5fcHJvY2VzcyghISdmbHVzaCcpOwoKCSAgICAgICAgICAgICAgICAvLyBVbnBhZCBkYXRhCgkgICAgICAgICAgICAgICAgcGFkZGluZy51bnBhZChmaW5hbFByb2Nlc3NlZEJsb2Nrcyk7CgkgICAgICAgICAgICB9CgoJICAgICAgICAgICAgcmV0dXJuIGZpbmFsUHJvY2Vzc2VkQmxvY2tzOwoJICAgICAgICB9LAoKCSAgICAgICAgYmxvY2tTaXplOiAxMjgvMzIKCSAgICB9KTsKCgkgICAgLyoqCgkgICAgICogQSBjb2xsZWN0aW9uIG9mIGNpcGhlciBwYXJhbWV0ZXJzLgoJICAgICAqCgkgICAgICogQHByb3BlcnR5IHtXb3JkQXJyYXl9IGNpcGhlcnRleHQgVGhlIHJhdyBjaXBoZXJ0ZXh0LgoJICAgICAqIEBwcm9wZXJ0eSB7V29yZEFycmF5fSBrZXkgVGhlIGtleSB0byB0aGlzIGNpcGhlcnRleHQuCgkgICAgICogQHByb3BlcnR5IHtXb3JkQXJyYXl9IGl2IFRoZSBJViB1c2VkIGluIHRoZSBjaXBoZXJpbmcgb3BlcmF0aW9uLgoJICAgICAqIEBwcm9wZXJ0eSB7V29yZEFycmF5fSBzYWx0IFRoZSBzYWx0IHVzZWQgd2l0aCBhIGtleSBkZXJpdmF0aW9uIGZ1bmN0aW9uLgoJICAgICAqIEBwcm9wZXJ0eSB7Q2lwaGVyfSBhbGdvcml0aG0gVGhlIGNpcGhlciBhbGdvcml0aG0uCgkgICAgICogQHByb3BlcnR5IHtNb2RlfSBtb2RlIFRoZSBibG9jayBtb2RlIHVzZWQgaW4gdGhlIGNpcGhlcmluZyBvcGVyYXRpb24uCgkgICAgICogQHByb3BlcnR5IHtQYWRkaW5nfSBwYWRkaW5nIFRoZSBwYWRkaW5nIHNjaGVtZSB1c2VkIGluIHRoZSBjaXBoZXJpbmcgb3BlcmF0aW9uLgoJICAgICAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBibG9ja1NpemUgVGhlIGJsb2NrIHNpemUgb2YgdGhlIGNpcGhlci4KCSAgICAgKiBAcHJvcGVydHkge0Zvcm1hdH0gZm9ybWF0dGVyIFRoZSBkZWZhdWx0IGZvcm1hdHRpbmcgc3RyYXRlZ3kgdG8gY29udmVydCB0aGlzIGNpcGhlciBwYXJhbXMgb2JqZWN0IHRvIGEgc3RyaW5nLgoJICAgICAqLwoJICAgIHZhciBDaXBoZXJQYXJhbXMgPSBDX2xpYi5DaXBoZXJQYXJhbXMgPSBCYXNlLmV4dGVuZCh7CgkgICAgICAgIC8qKgoJICAgICAgICAgKiBJbml0aWFsaXplcyBhIG5ld2x5IGNyZWF0ZWQgY2lwaGVyIHBhcmFtcyBvYmplY3QuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBjaXBoZXJQYXJhbXMgQW4gb2JqZWN0IHdpdGggYW55IG9mIHRoZSBwb3NzaWJsZSBjaXBoZXIgcGFyYW1ldGVycy4KCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciBjaXBoZXJQYXJhbXMgPSBDcnlwdG9KUy5saWIuQ2lwaGVyUGFyYW1zLmNyZWF0ZSh7CgkgICAgICAgICAqICAgICAgICAgY2lwaGVydGV4dDogY2lwaGVydGV4dFdvcmRBcnJheSwKCSAgICAgICAgICogICAgICAgICBrZXk6IGtleVdvcmRBcnJheSwKCSAgICAgICAgICogICAgICAgICBpdjogaXZXb3JkQXJyYXksCgkgICAgICAgICAqICAgICAgICAgc2FsdDogc2FsdFdvcmRBcnJheSwKCSAgICAgICAgICogICAgICAgICBhbGdvcml0aG06IENyeXB0b0pTLmFsZ28uQUVTLAoJICAgICAgICAgKiAgICAgICAgIG1vZGU6IENyeXB0b0pTLm1vZGUuQ0JDLAoJICAgICAgICAgKiAgICAgICAgIHBhZGRpbmc6IENyeXB0b0pTLnBhZC5QS0NTNywKCSAgICAgICAgICogICAgICAgICBibG9ja1NpemU6IDQsCgkgICAgICAgICAqICAgICAgICAgZm9ybWF0dGVyOiBDcnlwdG9KUy5mb3JtYXQuT3BlblNTTAoJICAgICAgICAgKiAgICAgfSk7CgkgICAgICAgICAqLwoJICAgICAgICBpbml0OiBmdW5jdGlvbiAoY2lwaGVyUGFyYW1zKSB7CgkgICAgICAgICAgICB0aGlzLm1peEluKGNpcGhlclBhcmFtcyk7CgkgICAgICAgIH0sCgoJICAgICAgICAvKioKCSAgICAgICAgICogQ29udmVydHMgdGhpcyBjaXBoZXIgcGFyYW1zIG9iamVjdCB0byBhIHN0cmluZy4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtGb3JtYXR9IGZvcm1hdHRlciAoT3B0aW9uYWwpIFRoZSBmb3JtYXR0aW5nIHN0cmF0ZWd5IHRvIHVzZS4KCSAgICAgICAgICoKCSAgICAgICAgICogQHJldHVybiB7c3RyaW5nfSBUaGUgc3RyaW5naWZpZWQgY2lwaGVyIHBhcmFtcy4KCSAgICAgICAgICoKCSAgICAgICAgICogQHRocm93cyBFcnJvciBJZiBuZWl0aGVyIHRoZSBmb3JtYXR0ZXIgbm9yIHRoZSBkZWZhdWx0IGZvcm1hdHRlciBpcyBzZXQuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAqCgkgICAgICAgICAqICAgICB2YXIgc3RyaW5nID0gY2lwaGVyUGFyYW1zICsgJyc7CgkgICAgICAgICAqICAgICB2YXIgc3RyaW5nID0gY2lwaGVyUGFyYW1zLnRvU3RyaW5nKCk7CgkgICAgICAgICAqICAgICB2YXIgc3RyaW5nID0gY2lwaGVyUGFyYW1zLnRvU3RyaW5nKENyeXB0b0pTLmZvcm1hdC5PcGVuU1NMKTsKCSAgICAgICAgICovCgkgICAgICAgIHRvU3RyaW5nOiBmdW5jdGlvbiAoZm9ybWF0dGVyKSB7CgkgICAgICAgICAgICByZXR1cm4gKGZvcm1hdHRlciB8fCB0aGlzLmZvcm1hdHRlcikuc3RyaW5naWZ5KHRoaXMpOwoJICAgICAgICB9CgkgICAgfSk7CgoJICAgIC8qKgoJICAgICAqIEZvcm1hdCBuYW1lc3BhY2UuCgkgICAgICovCgkgICAgdmFyIENfZm9ybWF0ID0gQy5mb3JtYXQgPSB7fTsKCgkgICAgLyoqCgkgICAgICogT3BlblNTTCBmb3JtYXR0aW5nIHN0cmF0ZWd5LgoJICAgICAqLwoJICAgIHZhciBPcGVuU1NMRm9ybWF0dGVyID0gQ19mb3JtYXQuT3BlblNTTCA9IHsKCSAgICAgICAgLyoqCgkgICAgICAgICAqIENvbnZlcnRzIGEgY2lwaGVyIHBhcmFtcyBvYmplY3QgdG8gYW4gT3BlblNTTC1jb21wYXRpYmxlIHN0cmluZy4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtDaXBoZXJQYXJhbXN9IGNpcGhlclBhcmFtcyBUaGUgY2lwaGVyIHBhcmFtcyBvYmplY3QuCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge3N0cmluZ30gVGhlIE9wZW5TU0wtY29tcGF0aWJsZSBzdHJpbmcuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBzdGF0aWMKCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciBvcGVuU1NMU3RyaW5nID0gQ3J5cHRvSlMuZm9ybWF0Lk9wZW5TU0wuc3RyaW5naWZ5KGNpcGhlclBhcmFtcyk7CgkgICAgICAgICAqLwoJICAgICAgICBzdHJpbmdpZnk6IGZ1bmN0aW9uIChjaXBoZXJQYXJhbXMpIHsKCSAgICAgICAgICAgIC8vIFNob3J0Y3V0cwoJICAgICAgICAgICAgdmFyIGNpcGhlcnRleHQgPSBjaXBoZXJQYXJhbXMuY2lwaGVydGV4dDsKCSAgICAgICAgICAgIHZhciBzYWx0ID0gY2lwaGVyUGFyYW1zLnNhbHQ7CgoJICAgICAgICAgICAgLy8gRm9ybWF0CgkgICAgICAgICAgICBpZiAoc2FsdCkgewoJICAgICAgICAgICAgICAgIHZhciB3b3JkQXJyYXkgPSBXb3JkQXJyYXkuY3JlYXRlKFsweDUzNjE2Yzc0LCAweDY1NjQ1ZjVmXSkuY29uY2F0KHNhbHQpLmNvbmNhdChjaXBoZXJ0ZXh0KTsKCSAgICAgICAgICAgIH0gZWxzZSB7CgkgICAgICAgICAgICAgICAgdmFyIHdvcmRBcnJheSA9IGNpcGhlcnRleHQ7CgkgICAgICAgICAgICB9CgoJICAgICAgICAgICAgcmV0dXJuIHdvcmRBcnJheS50b1N0cmluZyhCYXNlNjQpOwoJICAgICAgICB9LAoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIENvbnZlcnRzIGFuIE9wZW5TU0wtY29tcGF0aWJsZSBzdHJpbmcgdG8gYSBjaXBoZXIgcGFyYW1zIG9iamVjdC4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG9wZW5TU0xTdHIgVGhlIE9wZW5TU0wtY29tcGF0aWJsZSBzdHJpbmcuCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge0NpcGhlclBhcmFtc30gVGhlIGNpcGhlciBwYXJhbXMgb2JqZWN0LgoJICAgICAgICAgKgoJICAgICAgICAgKiBAc3RhdGljCgkgICAgICAgICAqCgkgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAqCgkgICAgICAgICAqICAgICB2YXIgY2lwaGVyUGFyYW1zID0gQ3J5cHRvSlMuZm9ybWF0Lk9wZW5TU0wucGFyc2Uob3BlblNTTFN0cmluZyk7CgkgICAgICAgICAqLwoJICAgICAgICBwYXJzZTogZnVuY3Rpb24gKG9wZW5TU0xTdHIpIHsKCSAgICAgICAgICAgIC8vIFBhcnNlIGJhc2U2NAoJICAgICAgICAgICAgdmFyIGNpcGhlcnRleHQgPSBCYXNlNjQucGFyc2Uob3BlblNTTFN0cik7CgoJICAgICAgICAgICAgLy8gU2hvcnRjdXQKCSAgICAgICAgICAgIHZhciBjaXBoZXJ0ZXh0V29yZHMgPSBjaXBoZXJ0ZXh0LndvcmRzOwoKCSAgICAgICAgICAgIC8vIFRlc3QgZm9yIHNhbHQKCSAgICAgICAgICAgIGlmIChjaXBoZXJ0ZXh0V29yZHNbMF0gPT0gMHg1MzYxNmM3NCAmJiBjaXBoZXJ0ZXh0V29yZHNbMV0gPT0gMHg2NTY0NWY1ZikgewoJICAgICAgICAgICAgICAgIC8vIEV4dHJhY3Qgc2FsdAoJICAgICAgICAgICAgICAgIHZhciBzYWx0ID0gV29yZEFycmF5LmNyZWF0ZShjaXBoZXJ0ZXh0V29yZHMuc2xpY2UoMiwgNCkpOwoKCSAgICAgICAgICAgICAgICAvLyBSZW1vdmUgc2FsdCBmcm9tIGNpcGhlcnRleHQKCSAgICAgICAgICAgICAgICBjaXBoZXJ0ZXh0V29yZHMuc3BsaWNlKDAsIDQpOwoJICAgICAgICAgICAgICAgIGNpcGhlcnRleHQuc2lnQnl0ZXMgLT0gMTY7CgkgICAgICAgICAgICB9CgoJICAgICAgICAgICAgcmV0dXJuIENpcGhlclBhcmFtcy5jcmVhdGUoeyBjaXBoZXJ0ZXh0OiBjaXBoZXJ0ZXh0LCBzYWx0OiBzYWx0IH0pOwoJICAgICAgICB9CgkgICAgfTsKCgkgICAgLyoqCgkgICAgICogQSBjaXBoZXIgd3JhcHBlciB0aGF0IHJldHVybnMgY2lwaGVydGV4dCBhcyBhIHNlcmlhbGl6YWJsZSBjaXBoZXIgcGFyYW1zIG9iamVjdC4KCSAgICAgKi8KCSAgICB2YXIgU2VyaWFsaXphYmxlQ2lwaGVyID0gQ19saWIuU2VyaWFsaXphYmxlQ2lwaGVyID0gQmFzZS5leHRlbmQoewoJICAgICAgICAvKioKCSAgICAgICAgICogQ29uZmlndXJhdGlvbiBvcHRpb25zLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcHJvcGVydHkge0Zvcm1hdHRlcn0gZm9ybWF0IFRoZSBmb3JtYXR0aW5nIHN0cmF0ZWd5IHRvIGNvbnZlcnQgY2lwaGVyIHBhcmFtIG9iamVjdHMgdG8gYW5kIGZyb20gYSBzdHJpbmcuIERlZmF1bHQ6IE9wZW5TU0wKCSAgICAgICAgICovCgkgICAgICAgIGNmZzogQmFzZS5leHRlbmQoewoJICAgICAgICAgICAgZm9ybWF0OiBPcGVuU1NMRm9ybWF0dGVyCgkgICAgICAgIH0pLAoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIEVuY3J5cHRzIGEgbWVzc2FnZS4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtDaXBoZXJ9IGNpcGhlciBUaGUgY2lwaGVyIGFsZ29yaXRobSB0byB1c2UuCgkgICAgICAgICAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBlbmNyeXB0LgoJICAgICAgICAgKiBAcGFyYW0ge1dvcmRBcnJheX0ga2V5IFRoZSBrZXkuCgkgICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBjZmcgKE9wdGlvbmFsKSBUaGUgY29uZmlndXJhdGlvbiBvcHRpb25zIHRvIHVzZSBmb3IgdGhpcyBvcGVyYXRpb24uCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge0NpcGhlclBhcmFtc30gQSBjaXBoZXIgcGFyYW1zIG9iamVjdC4KCSAgICAgICAgICoKCSAgICAgICAgICogQHN0YXRpYwoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIGNpcGhlcnRleHRQYXJhbXMgPSBDcnlwdG9KUy5saWIuU2VyaWFsaXphYmxlQ2lwaGVyLmVuY3J5cHQoQ3J5cHRvSlMuYWxnby5BRVMsIG1lc3NhZ2UsIGtleSk7CgkgICAgICAgICAqICAgICB2YXIgY2lwaGVydGV4dFBhcmFtcyA9IENyeXB0b0pTLmxpYi5TZXJpYWxpemFibGVDaXBoZXIuZW5jcnlwdChDcnlwdG9KUy5hbGdvLkFFUywgbWVzc2FnZSwga2V5LCB7IGl2OiBpdiB9KTsKCSAgICAgICAgICogICAgIHZhciBjaXBoZXJ0ZXh0UGFyYW1zID0gQ3J5cHRvSlMubGliLlNlcmlhbGl6YWJsZUNpcGhlci5lbmNyeXB0KENyeXB0b0pTLmFsZ28uQUVTLCBtZXNzYWdlLCBrZXksIHsgaXY6IGl2LCBmb3JtYXQ6IENyeXB0b0pTLmZvcm1hdC5PcGVuU1NMIH0pOwoJICAgICAgICAgKi8KCSAgICAgICAgZW5jcnlwdDogZnVuY3Rpb24gKGNpcGhlciwgbWVzc2FnZSwga2V5LCBjZmcpIHsKCSAgICAgICAgICAgIC8vIEFwcGx5IGNvbmZpZyBkZWZhdWx0cwoJICAgICAgICAgICAgY2ZnID0gdGhpcy5jZmcuZXh0ZW5kKGNmZyk7CgoJICAgICAgICAgICAgLy8gRW5jcnlwdAoJICAgICAgICAgICAgdmFyIGVuY3J5cHRvciA9IGNpcGhlci5jcmVhdGVFbmNyeXB0b3Ioa2V5LCBjZmcpOwoJICAgICAgICAgICAgdmFyIGNpcGhlcnRleHQgPSBlbmNyeXB0b3IuZmluYWxpemUobWVzc2FnZSk7CgoJICAgICAgICAgICAgLy8gU2hvcnRjdXQKCSAgICAgICAgICAgIHZhciBjaXBoZXJDZmcgPSBlbmNyeXB0b3IuY2ZnOwoKCSAgICAgICAgICAgIC8vIENyZWF0ZSBhbmQgcmV0dXJuIHNlcmlhbGl6YWJsZSBjaXBoZXIgcGFyYW1zCgkgICAgICAgICAgICByZXR1cm4gQ2lwaGVyUGFyYW1zLmNyZWF0ZSh7CgkgICAgICAgICAgICAgICAgY2lwaGVydGV4dDogY2lwaGVydGV4dCwKCSAgICAgICAgICAgICAgICBrZXk6IGtleSwKCSAgICAgICAgICAgICAgICBpdjogY2lwaGVyQ2ZnLml2LAoJICAgICAgICAgICAgICAgIGFsZ29yaXRobTogY2lwaGVyLAoJICAgICAgICAgICAgICAgIG1vZGU6IGNpcGhlckNmZy5tb2RlLAoJICAgICAgICAgICAgICAgIHBhZGRpbmc6IGNpcGhlckNmZy5wYWRkaW5nLAoJICAgICAgICAgICAgICAgIGJsb2NrU2l6ZTogY2lwaGVyLmJsb2NrU2l6ZSwKCSAgICAgICAgICAgICAgICBmb3JtYXR0ZXI6IGNmZy5mb3JtYXQKCSAgICAgICAgICAgIH0pOwoJICAgICAgICB9LAoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIERlY3J5cHRzIHNlcmlhbGl6ZWQgY2lwaGVydGV4dC4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtDaXBoZXJ9IGNpcGhlciBUaGUgY2lwaGVyIGFsZ29yaXRobSB0byB1c2UuCgkgICAgICAgICAqIEBwYXJhbSB7Q2lwaGVyUGFyYW1zfHN0cmluZ30gY2lwaGVydGV4dCBUaGUgY2lwaGVydGV4dCB0byBkZWNyeXB0LgoJICAgICAgICAgKiBAcGFyYW0ge1dvcmRBcnJheX0ga2V5IFRoZSBrZXkuCgkgICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBjZmcgKE9wdGlvbmFsKSBUaGUgY29uZmlndXJhdGlvbiBvcHRpb25zIHRvIHVzZSBmb3IgdGhpcyBvcGVyYXRpb24uCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge1dvcmRBcnJheX0gVGhlIHBsYWludGV4dC4KCSAgICAgICAgICoKCSAgICAgICAgICogQHN0YXRpYwoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIHBsYWludGV4dCA9IENyeXB0b0pTLmxpYi5TZXJpYWxpemFibGVDaXBoZXIuZGVjcnlwdChDcnlwdG9KUy5hbGdvLkFFUywgZm9ybWF0dGVkQ2lwaGVydGV4dCwga2V5LCB7IGl2OiBpdiwgZm9ybWF0OiBDcnlwdG9KUy5mb3JtYXQuT3BlblNTTCB9KTsKCSAgICAgICAgICogICAgIHZhciBwbGFpbnRleHQgPSBDcnlwdG9KUy5saWIuU2VyaWFsaXphYmxlQ2lwaGVyLmRlY3J5cHQoQ3J5cHRvSlMuYWxnby5BRVMsIGNpcGhlcnRleHRQYXJhbXMsIGtleSwgeyBpdjogaXYsIGZvcm1hdDogQ3J5cHRvSlMuZm9ybWF0Lk9wZW5TU0wgfSk7CgkgICAgICAgICAqLwoJICAgICAgICBkZWNyeXB0OiBmdW5jdGlvbiAoY2lwaGVyLCBjaXBoZXJ0ZXh0LCBrZXksIGNmZykgewoJICAgICAgICAgICAgLy8gQXBwbHkgY29uZmlnIGRlZmF1bHRzCgkgICAgICAgICAgICBjZmcgPSB0aGlzLmNmZy5leHRlbmQoY2ZnKTsKCgkgICAgICAgICAgICAvLyBDb252ZXJ0IHN0cmluZyB0byBDaXBoZXJQYXJhbXMKCSAgICAgICAgICAgIGNpcGhlcnRleHQgPSB0aGlzLl9wYXJzZShjaXBoZXJ0ZXh0LCBjZmcuZm9ybWF0KTsKCgkgICAgICAgICAgICAvLyBEZWNyeXB0CgkgICAgICAgICAgICB2YXIgcGxhaW50ZXh0ID0gY2lwaGVyLmNyZWF0ZURlY3J5cHRvcihrZXksIGNmZykuZmluYWxpemUoY2lwaGVydGV4dC5jaXBoZXJ0ZXh0KTsKCgkgICAgICAgICAgICByZXR1cm4gcGxhaW50ZXh0OwoJICAgICAgICB9LAoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIENvbnZlcnRzIHNlcmlhbGl6ZWQgY2lwaGVydGV4dCB0byBDaXBoZXJQYXJhbXMsCgkgICAgICAgICAqIGVsc2UgYXNzdW1lZCBDaXBoZXJQYXJhbXMgYWxyZWFkeSBhbmQgcmV0dXJucyBjaXBoZXJ0ZXh0IHVuY2hhbmdlZC4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtDaXBoZXJQYXJhbXN8c3RyaW5nfSBjaXBoZXJ0ZXh0IFRoZSBjaXBoZXJ0ZXh0LgoJICAgICAgICAgKiBAcGFyYW0ge0Zvcm1hdHRlcn0gZm9ybWF0IFRoZSBmb3JtYXR0aW5nIHN0cmF0ZWd5IHRvIHVzZSB0byBwYXJzZSBzZXJpYWxpemVkIGNpcGhlcnRleHQuCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge0NpcGhlclBhcmFtc30gVGhlIHVuc2VyaWFsaXplZCBjaXBoZXJ0ZXh0LgoJICAgICAgICAgKgoJICAgICAgICAgKiBAc3RhdGljCgkgICAgICAgICAqCgkgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAqCgkgICAgICAgICAqICAgICB2YXIgY2lwaGVydGV4dFBhcmFtcyA9IENyeXB0b0pTLmxpYi5TZXJpYWxpemFibGVDaXBoZXIuX3BhcnNlKGNpcGhlcnRleHRTdHJpbmdPclBhcmFtcywgZm9ybWF0KTsKCSAgICAgICAgICovCgkgICAgICAgIF9wYXJzZTogZnVuY3Rpb24gKGNpcGhlcnRleHQsIGZvcm1hdCkgewoJICAgICAgICAgICAgaWYgKHR5cGVvZiBjaXBoZXJ0ZXh0ID09ICdzdHJpbmcnKSB7CgkgICAgICAgICAgICAgICAgcmV0dXJuIGZvcm1hdC5wYXJzZShjaXBoZXJ0ZXh0LCB0aGlzKTsKCSAgICAgICAgICAgIH0gZWxzZSB7CgkgICAgICAgICAgICAgICAgcmV0dXJuIGNpcGhlcnRleHQ7CgkgICAgICAgICAgICB9CgkgICAgICAgIH0KCSAgICB9KTsKCgkgICAgLyoqCgkgICAgICogS2V5IGRlcml2YXRpb24gZnVuY3Rpb24gbmFtZXNwYWNlLgoJICAgICAqLwoJICAgIHZhciBDX2tkZiA9IEMua2RmID0ge307CgoJICAgIC8qKgoJICAgICAqIE9wZW5TU0wga2V5IGRlcml2YXRpb24gZnVuY3Rpb24uCgkgICAgICovCgkgICAgdmFyIE9wZW5TU0xLZGYgPSBDX2tkZi5PcGVuU1NMID0gewoJICAgICAgICAvKioKCSAgICAgICAgICogRGVyaXZlcyBhIGtleSBhbmQgSVYgZnJvbSBhIHBhc3N3b3JkLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gcGFzc3dvcmQgVGhlIHBhc3N3b3JkIHRvIGRlcml2ZSBmcm9tLgoJICAgICAgICAgKiBAcGFyYW0ge251bWJlcn0ga2V5U2l6ZSBUaGUgc2l6ZSBpbiB3b3JkcyBvZiB0aGUga2V5IHRvIGdlbmVyYXRlLgoJICAgICAgICAgKiBAcGFyYW0ge251bWJlcn0gaXZTaXplIFRoZSBzaXplIGluIHdvcmRzIG9mIHRoZSBJViB0byBnZW5lcmF0ZS4KCSAgICAgICAgICogQHBhcmFtIHtXb3JkQXJyYXl8c3RyaW5nfSBzYWx0IChPcHRpb25hbCkgQSA2NC1iaXQgc2FsdCB0byB1c2UuIElmIG9taXR0ZWQsIGEgc2FsdCB3aWxsIGJlIGdlbmVyYXRlZCByYW5kb21seS4KCSAgICAgICAgICoKCSAgICAgICAgICogQHJldHVybiB7Q2lwaGVyUGFyYW1zfSBBIGNpcGhlciBwYXJhbXMgb2JqZWN0IHdpdGggdGhlIGtleSwgSVYsIGFuZCBzYWx0LgoJICAgICAgICAgKgoJICAgICAgICAgKiBAc3RhdGljCgkgICAgICAgICAqCgkgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAqCgkgICAgICAgICAqICAgICB2YXIgZGVyaXZlZFBhcmFtcyA9IENyeXB0b0pTLmtkZi5PcGVuU1NMLmV4ZWN1dGUoJ1Bhc3N3b3JkJywgMjU2LzMyLCAxMjgvMzIpOwoJICAgICAgICAgKiAgICAgdmFyIGRlcml2ZWRQYXJhbXMgPSBDcnlwdG9KUy5rZGYuT3BlblNTTC5leGVjdXRlKCdQYXNzd29yZCcsIDI1Ni8zMiwgMTI4LzMyLCAnc2FsdHNhbHQnKTsKCSAgICAgICAgICovCgkgICAgICAgIGV4ZWN1dGU6IGZ1bmN0aW9uIChwYXNzd29yZCwga2V5U2l6ZSwgaXZTaXplLCBzYWx0KSB7CgkgICAgICAgICAgICAvLyBHZW5lcmF0ZSByYW5kb20gc2FsdAoJICAgICAgICAgICAgaWYgKCFzYWx0KSB7CgkgICAgICAgICAgICAgICAgc2FsdCA9IFdvcmRBcnJheS5yYW5kb20oNjQvOCk7CgkgICAgICAgICAgICB9CgoJICAgICAgICAgICAgLy8gRGVyaXZlIGtleSBhbmQgSVYKCSAgICAgICAgICAgIHZhciBrZXkgPSBFdnBLREYuY3JlYXRlKHsga2V5U2l6ZToga2V5U2l6ZSArIGl2U2l6ZSB9KS5jb21wdXRlKHBhc3N3b3JkLCBzYWx0KTsKCgkgICAgICAgICAgICAvLyBTZXBhcmF0ZSBrZXkgYW5kIElWCgkgICAgICAgICAgICB2YXIgaXYgPSBXb3JkQXJyYXkuY3JlYXRlKGtleS53b3Jkcy5zbGljZShrZXlTaXplKSwgaXZTaXplICogNCk7CgkgICAgICAgICAgICBrZXkuc2lnQnl0ZXMgPSBrZXlTaXplICogNDsKCgkgICAgICAgICAgICAvLyBSZXR1cm4gcGFyYW1zCgkgICAgICAgICAgICByZXR1cm4gQ2lwaGVyUGFyYW1zLmNyZWF0ZSh7IGtleToga2V5LCBpdjogaXYsIHNhbHQ6IHNhbHQgfSk7CgkgICAgICAgIH0KCSAgICB9OwoKCSAgICAvKioKCSAgICAgKiBBIHNlcmlhbGl6YWJsZSBjaXBoZXIgd3JhcHBlciB0aGF0IGRlcml2ZXMgdGhlIGtleSBmcm9tIGEgcGFzc3dvcmQsCgkgICAgICogYW5kIHJldHVybnMgY2lwaGVydGV4dCBhcyBhIHNlcmlhbGl6YWJsZSBjaXBoZXIgcGFyYW1zIG9iamVjdC4KCSAgICAgKi8KCSAgICB2YXIgUGFzc3dvcmRCYXNlZENpcGhlciA9IENfbGliLlBhc3N3b3JkQmFzZWRDaXBoZXIgPSBTZXJpYWxpemFibGVDaXBoZXIuZXh0ZW5kKHsKCSAgICAgICAgLyoqCgkgICAgICAgICAqIENvbmZpZ3VyYXRpb24gb3B0aW9ucy4KCSAgICAgICAgICoKCSAgICAgICAgICogQHByb3BlcnR5IHtLREZ9IGtkZiBUaGUga2V5IGRlcml2YXRpb24gZnVuY3Rpb24gdG8gdXNlIHRvIGdlbmVyYXRlIGEga2V5IGFuZCBJViBmcm9tIGEgcGFzc3dvcmQuIERlZmF1bHQ6IE9wZW5TU0wKCSAgICAgICAgICovCgkgICAgICAgIGNmZzogU2VyaWFsaXphYmxlQ2lwaGVyLmNmZy5leHRlbmQoewoJICAgICAgICAgICAga2RmOiBPcGVuU1NMS2RmCgkgICAgICAgIH0pLAoKCSAgICAgICAgLyoqCgkgICAgICAgICAqIEVuY3J5cHRzIGEgbWVzc2FnZSB1c2luZyBhIHBhc3N3b3JkLgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcGFyYW0ge0NpcGhlcn0gY2lwaGVyIFRoZSBjaXBoZXIgYWxnb3JpdGhtIHRvIHVzZS4KCSAgICAgICAgICogQHBhcmFtIHtXb3JkQXJyYXl8c3RyaW5nfSBtZXNzYWdlIFRoZSBtZXNzYWdlIHRvIGVuY3J5cHQuCgkgICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwYXNzd29yZCBUaGUgcGFzc3dvcmQuCgkgICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBjZmcgKE9wdGlvbmFsKSBUaGUgY29uZmlndXJhdGlvbiBvcHRpb25zIHRvIHVzZSBmb3IgdGhpcyBvcGVyYXRpb24uCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge0NpcGhlclBhcmFtc30gQSBjaXBoZXIgcGFyYW1zIG9iamVjdC4KCSAgICAgICAgICoKCSAgICAgICAgICogQHN0YXRpYwoJICAgICAgICAgKgoJICAgICAgICAgKiBAZXhhbXBsZQoJICAgICAgICAgKgoJICAgICAgICAgKiAgICAgdmFyIGNpcGhlcnRleHRQYXJhbXMgPSBDcnlwdG9KUy5saWIuUGFzc3dvcmRCYXNlZENpcGhlci5lbmNyeXB0KENyeXB0b0pTLmFsZ28uQUVTLCBtZXNzYWdlLCAncGFzc3dvcmQnKTsKCSAgICAgICAgICogICAgIHZhciBjaXBoZXJ0ZXh0UGFyYW1zID0gQ3J5cHRvSlMubGliLlBhc3N3b3JkQmFzZWRDaXBoZXIuZW5jcnlwdChDcnlwdG9KUy5hbGdvLkFFUywgbWVzc2FnZSwgJ3Bhc3N3b3JkJywgeyBmb3JtYXQ6IENyeXB0b0pTLmZvcm1hdC5PcGVuU1NMIH0pOwoJICAgICAgICAgKi8KCSAgICAgICAgZW5jcnlwdDogZnVuY3Rpb24gKGNpcGhlciwgbWVzc2FnZSwgcGFzc3dvcmQsIGNmZykgewoJICAgICAgICAgICAgLy8gQXBwbHkgY29uZmlnIGRlZmF1bHRzCgkgICAgICAgICAgICBjZmcgPSB0aGlzLmNmZy5leHRlbmQoY2ZnKTsKCgkgICAgICAgICAgICAvLyBEZXJpdmUga2V5IGFuZCBvdGhlciBwYXJhbXMKCSAgICAgICAgICAgIHZhciBkZXJpdmVkUGFyYW1zID0gY2ZnLmtkZi5leGVjdXRlKHBhc3N3b3JkLCBjaXBoZXIua2V5U2l6ZSwgY2lwaGVyLml2U2l6ZSk7CgoJICAgICAgICAgICAgLy8gQWRkIElWIHRvIGNvbmZpZwoJICAgICAgICAgICAgY2ZnLml2ID0gZGVyaXZlZFBhcmFtcy5pdjsKCgkgICAgICAgICAgICAvLyBFbmNyeXB0CgkgICAgICAgICAgICB2YXIgY2lwaGVydGV4dCA9IFNlcmlhbGl6YWJsZUNpcGhlci5lbmNyeXB0LmNhbGwodGhpcywgY2lwaGVyLCBtZXNzYWdlLCBkZXJpdmVkUGFyYW1zLmtleSwgY2ZnKTsKCgkgICAgICAgICAgICAvLyBNaXggaW4gZGVyaXZlZCBwYXJhbXMKCSAgICAgICAgICAgIGNpcGhlcnRleHQubWl4SW4oZGVyaXZlZFBhcmFtcyk7CgoJICAgICAgICAgICAgcmV0dXJuIGNpcGhlcnRleHQ7CgkgICAgICAgIH0sCgoJICAgICAgICAvKioKCSAgICAgICAgICogRGVjcnlwdHMgc2VyaWFsaXplZCBjaXBoZXJ0ZXh0IHVzaW5nIGEgcGFzc3dvcmQuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBwYXJhbSB7Q2lwaGVyfSBjaXBoZXIgVGhlIGNpcGhlciBhbGdvcml0aG0gdG8gdXNlLgoJICAgICAgICAgKiBAcGFyYW0ge0NpcGhlclBhcmFtc3xzdHJpbmd9IGNpcGhlcnRleHQgVGhlIGNpcGhlcnRleHQgdG8gZGVjcnlwdC4KCSAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHBhc3N3b3JkIFRoZSBwYXNzd29yZC4KCSAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGNmZyAoT3B0aW9uYWwpIFRoZSBjb25maWd1cmF0aW9uIG9wdGlvbnMgdG8gdXNlIGZvciB0aGlzIG9wZXJhdGlvbi4KCSAgICAgICAgICoKCSAgICAgICAgICogQHJldHVybiB7V29yZEFycmF5fSBUaGUgcGxhaW50ZXh0LgoJICAgICAgICAgKgoJICAgICAgICAgKiBAc3RhdGljCgkgICAgICAgICAqCgkgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAqCgkgICAgICAgICAqICAgICB2YXIgcGxhaW50ZXh0ID0gQ3J5cHRvSlMubGliLlBhc3N3b3JkQmFzZWRDaXBoZXIuZGVjcnlwdChDcnlwdG9KUy5hbGdvLkFFUywgZm9ybWF0dGVkQ2lwaGVydGV4dCwgJ3Bhc3N3b3JkJywgeyBmb3JtYXQ6IENyeXB0b0pTLmZvcm1hdC5PcGVuU1NMIH0pOwoJICAgICAgICAgKiAgICAgdmFyIHBsYWludGV4dCA9IENyeXB0b0pTLmxpYi5QYXNzd29yZEJhc2VkQ2lwaGVyLmRlY3J5cHQoQ3J5cHRvSlMuYWxnby5BRVMsIGNpcGhlcnRleHRQYXJhbXMsICdwYXNzd29yZCcsIHsgZm9ybWF0OiBDcnlwdG9KUy5mb3JtYXQuT3BlblNTTCB9KTsKCSAgICAgICAgICovCgkgICAgICAgIGRlY3J5cHQ6IGZ1bmN0aW9uIChjaXBoZXIsIGNpcGhlcnRleHQsIHBhc3N3b3JkLCBjZmcpIHsKCSAgICAgICAgICAgIC8vIEFwcGx5IGNvbmZpZyBkZWZhdWx0cwoJICAgICAgICAgICAgY2ZnID0gdGhpcy5jZmcuZXh0ZW5kKGNmZyk7CgoJICAgICAgICAgICAgLy8gQ29udmVydCBzdHJpbmcgdG8gQ2lwaGVyUGFyYW1zCgkgICAgICAgICAgICBjaXBoZXJ0ZXh0ID0gdGhpcy5fcGFyc2UoY2lwaGVydGV4dCwgY2ZnLmZvcm1hdCk7CgoJICAgICAgICAgICAgLy8gRGVyaXZlIGtleSBhbmQgb3RoZXIgcGFyYW1zCgkgICAgICAgICAgICB2YXIgZGVyaXZlZFBhcmFtcyA9IGNmZy5rZGYuZXhlY3V0ZShwYXNzd29yZCwgY2lwaGVyLmtleVNpemUsIGNpcGhlci5pdlNpemUsIGNpcGhlcnRleHQuc2FsdCk7CgoJICAgICAgICAgICAgLy8gQWRkIElWIHRvIGNvbmZpZwoJICAgICAgICAgICAgY2ZnLml2ID0gZGVyaXZlZFBhcmFtcy5pdjsKCgkgICAgICAgICAgICAvLyBEZWNyeXB0CgkgICAgICAgICAgICB2YXIgcGxhaW50ZXh0ID0gU2VyaWFsaXphYmxlQ2lwaGVyLmRlY3J5cHQuY2FsbCh0aGlzLCBjaXBoZXIsIGNpcGhlcnRleHQsIGRlcml2ZWRQYXJhbXMua2V5LCBjZmcpOwoKCSAgICAgICAgICAgIHJldHVybiBwbGFpbnRleHQ7CgkgICAgICAgIH0KCSAgICB9KTsKCX0oKSk7CgoKCS8qKgoJICogQ2lwaGVyIEZlZWRiYWNrIGJsb2NrIG1vZGUuCgkgKi8KCUNyeXB0b0pTLm1vZGUuQ0ZCID0gKGZ1bmN0aW9uICgpIHsKCSAgICB2YXIgQ0ZCID0gQ3J5cHRvSlMubGliLkJsb2NrQ2lwaGVyTW9kZS5leHRlbmQoKTsKCgkgICAgQ0ZCLkVuY3J5cHRvciA9IENGQi5leHRlbmQoewoJICAgICAgICBwcm9jZXNzQmxvY2s6IGZ1bmN0aW9uICh3b3Jkcywgb2Zmc2V0KSB7CgkgICAgICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgICAgIHZhciBjaXBoZXIgPSB0aGlzLl9jaXBoZXI7CgkgICAgICAgICAgICB2YXIgYmxvY2tTaXplID0gY2lwaGVyLmJsb2NrU2l6ZTsKCgkgICAgICAgICAgICBnZW5lcmF0ZUtleXN0cmVhbUFuZEVuY3J5cHQuY2FsbCh0aGlzLCB3b3Jkcywgb2Zmc2V0LCBibG9ja1NpemUsIGNpcGhlcik7CgoJICAgICAgICAgICAgLy8gUmVtZW1iZXIgdGhpcyBibG9jayB0byB1c2Ugd2l0aCBuZXh0IGJsb2NrCgkgICAgICAgICAgICB0aGlzLl9wcmV2QmxvY2sgPSB3b3Jkcy5zbGljZShvZmZzZXQsIG9mZnNldCArIGJsb2NrU2l6ZSk7CgkgICAgICAgIH0KCSAgICB9KTsKCgkgICAgQ0ZCLkRlY3J5cHRvciA9IENGQi5leHRlbmQoewoJICAgICAgICBwcm9jZXNzQmxvY2s6IGZ1bmN0aW9uICh3b3Jkcywgb2Zmc2V0KSB7CgkgICAgICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgICAgIHZhciBjaXBoZXIgPSB0aGlzLl9jaXBoZXI7CgkgICAgICAgICAgICB2YXIgYmxvY2tTaXplID0gY2lwaGVyLmJsb2NrU2l6ZTsKCgkgICAgICAgICAgICAvLyBSZW1lbWJlciB0aGlzIGJsb2NrIHRvIHVzZSB3aXRoIG5leHQgYmxvY2sKCSAgICAgICAgICAgIHZhciB0aGlzQmxvY2sgPSB3b3Jkcy5zbGljZShvZmZzZXQsIG9mZnNldCArIGJsb2NrU2l6ZSk7CgoJICAgICAgICAgICAgZ2VuZXJhdGVLZXlzdHJlYW1BbmRFbmNyeXB0LmNhbGwodGhpcywgd29yZHMsIG9mZnNldCwgYmxvY2tTaXplLCBjaXBoZXIpOwoKCSAgICAgICAgICAgIC8vIFRoaXMgYmxvY2sgYmVjb21lcyB0aGUgcHJldmlvdXMgYmxvY2sKCSAgICAgICAgICAgIHRoaXMuX3ByZXZCbG9jayA9IHRoaXNCbG9jazsKCSAgICAgICAgfQoJICAgIH0pOwoKCSAgICBmdW5jdGlvbiBnZW5lcmF0ZUtleXN0cmVhbUFuZEVuY3J5cHQod29yZHMsIG9mZnNldCwgYmxvY2tTaXplLCBjaXBoZXIpIHsKCSAgICAgICAgLy8gU2hvcnRjdXQKCSAgICAgICAgdmFyIGl2ID0gdGhpcy5faXY7CgoJICAgICAgICAvLyBHZW5lcmF0ZSBrZXlzdHJlYW0KCSAgICAgICAgaWYgKGl2KSB7CgkgICAgICAgICAgICB2YXIga2V5c3RyZWFtID0gaXYuc2xpY2UoMCk7CgoJICAgICAgICAgICAgLy8gUmVtb3ZlIElWIGZvciBzdWJzZXF1ZW50IGJsb2NrcwoJICAgICAgICAgICAgdGhpcy5faXYgPSB1bmRlZmluZWQ7CgkgICAgICAgIH0gZWxzZSB7CgkgICAgICAgICAgICB2YXIga2V5c3RyZWFtID0gdGhpcy5fcHJldkJsb2NrOwoJICAgICAgICB9CgkgICAgICAgIGNpcGhlci5lbmNyeXB0QmxvY2soa2V5c3RyZWFtLCAwKTsKCgkgICAgICAgIC8vIEVuY3J5cHQKCSAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBibG9ja1NpemU7IGkrKykgewoJICAgICAgICAgICAgd29yZHNbb2Zmc2V0ICsgaV0gXj0ga2V5c3RyZWFtW2ldOwoJICAgICAgICB9CgkgICAgfQoKCSAgICByZXR1cm4gQ0ZCOwoJfSgpKTsKCgoJLyoqCgkgKiBFbGVjdHJvbmljIENvZGVib29rIGJsb2NrIG1vZGUuCgkgKi8KCUNyeXB0b0pTLm1vZGUuRUNCID0gKGZ1bmN0aW9uICgpIHsKCSAgICB2YXIgRUNCID0gQ3J5cHRvSlMubGliLkJsb2NrQ2lwaGVyTW9kZS5leHRlbmQoKTsKCgkgICAgRUNCLkVuY3J5cHRvciA9IEVDQi5leHRlbmQoewoJICAgICAgICBwcm9jZXNzQmxvY2s6IGZ1bmN0aW9uICh3b3Jkcywgb2Zmc2V0KSB7CgkgICAgICAgICAgICB0aGlzLl9jaXBoZXIuZW5jcnlwdEJsb2NrKHdvcmRzLCBvZmZzZXQpOwoJICAgICAgICB9CgkgICAgfSk7CgoJICAgIEVDQi5EZWNyeXB0b3IgPSBFQ0IuZXh0ZW5kKHsKCSAgICAgICAgcHJvY2Vzc0Jsb2NrOiBmdW5jdGlvbiAod29yZHMsIG9mZnNldCkgewoJICAgICAgICAgICAgdGhpcy5fY2lwaGVyLmRlY3J5cHRCbG9jayh3b3Jkcywgb2Zmc2V0KTsKCSAgICAgICAgfQoJICAgIH0pOwoKCSAgICByZXR1cm4gRUNCOwoJfSgpKTsKCgoJLyoqCgkgKiBBTlNJIFguOTIzIHBhZGRpbmcgc3RyYXRlZ3kuCgkgKi8KCUNyeXB0b0pTLnBhZC5BbnNpWDkyMyA9IHsKCSAgICBwYWQ6IGZ1bmN0aW9uIChkYXRhLCBibG9ja1NpemUpIHsKCSAgICAgICAgLy8gU2hvcnRjdXRzCgkgICAgICAgIHZhciBkYXRhU2lnQnl0ZXMgPSBkYXRhLnNpZ0J5dGVzOwoJICAgICAgICB2YXIgYmxvY2tTaXplQnl0ZXMgPSBibG9ja1NpemUgKiA0OwoKCSAgICAgICAgLy8gQ291bnQgcGFkZGluZyBieXRlcwoJICAgICAgICB2YXIgblBhZGRpbmdCeXRlcyA9IGJsb2NrU2l6ZUJ5dGVzIC0gZGF0YVNpZ0J5dGVzICUgYmxvY2tTaXplQnl0ZXM7CgoJICAgICAgICAvLyBDb21wdXRlIGxhc3QgYnl0ZSBwb3NpdGlvbgoJICAgICAgICB2YXIgbGFzdEJ5dGVQb3MgPSBkYXRhU2lnQnl0ZXMgKyBuUGFkZGluZ0J5dGVzIC0gMTsKCgkgICAgICAgIC8vIFBhZAoJICAgICAgICBkYXRhLmNsYW1wKCk7CgkgICAgICAgIGRhdGEud29yZHNbbGFzdEJ5dGVQb3MgPj4+IDJdIHw9IG5QYWRkaW5nQnl0ZXMgPDwgKDI0IC0gKGxhc3RCeXRlUG9zICUgNCkgKiA4KTsKCSAgICAgICAgZGF0YS5zaWdCeXRlcyArPSBuUGFkZGluZ0J5dGVzOwoJICAgIH0sCgoJICAgIHVucGFkOiBmdW5jdGlvbiAoZGF0YSkgewoJICAgICAgICAvLyBHZXQgbnVtYmVyIG9mIHBhZGRpbmcgYnl0ZXMgZnJvbSBsYXN0IGJ5dGUKCSAgICAgICAgdmFyIG5QYWRkaW5nQnl0ZXMgPSBkYXRhLndvcmRzWyhkYXRhLnNpZ0J5dGVzIC0gMSkgPj4+IDJdICYgMHhmZjsKCgkgICAgICAgIC8vIFJlbW92ZSBwYWRkaW5nCgkgICAgICAgIGRhdGEuc2lnQnl0ZXMgLT0gblBhZGRpbmdCeXRlczsKCSAgICB9Cgl9OwoKCgkvKioKCSAqIElTTyAxMDEyNiBwYWRkaW5nIHN0cmF0ZWd5LgoJICovCglDcnlwdG9KUy5wYWQuSXNvMTAxMjYgPSB7CgkgICAgcGFkOiBmdW5jdGlvbiAoZGF0YSwgYmxvY2tTaXplKSB7CgkgICAgICAgIC8vIFNob3J0Y3V0CgkgICAgICAgIHZhciBibG9ja1NpemVCeXRlcyA9IGJsb2NrU2l6ZSAqIDQ7CgoJICAgICAgICAvLyBDb3VudCBwYWRkaW5nIGJ5dGVzCgkgICAgICAgIHZhciBuUGFkZGluZ0J5dGVzID0gYmxvY2tTaXplQnl0ZXMgLSBkYXRhLnNpZ0J5dGVzICUgYmxvY2tTaXplQnl0ZXM7CgoJICAgICAgICAvLyBQYWQKCSAgICAgICAgZGF0YS5jb25jYXQoQ3J5cHRvSlMubGliLldvcmRBcnJheS5yYW5kb20oblBhZGRpbmdCeXRlcyAtIDEpKS4KCSAgICAgICAgICAgICBjb25jYXQoQ3J5cHRvSlMubGliLldvcmRBcnJheS5jcmVhdGUoW25QYWRkaW5nQnl0ZXMgPDwgMjRdLCAxKSk7CgkgICAgfSwKCgkgICAgdW5wYWQ6IGZ1bmN0aW9uIChkYXRhKSB7CgkgICAgICAgIC8vIEdldCBudW1iZXIgb2YgcGFkZGluZyBieXRlcyBmcm9tIGxhc3QgYnl0ZQoJICAgICAgICB2YXIgblBhZGRpbmdCeXRlcyA9IGRhdGEud29yZHNbKGRhdGEuc2lnQnl0ZXMgLSAxKSA+Pj4gMl0gJiAweGZmOwoKCSAgICAgICAgLy8gUmVtb3ZlIHBhZGRpbmcKCSAgICAgICAgZGF0YS5zaWdCeXRlcyAtPSBuUGFkZGluZ0J5dGVzOwoJICAgIH0KCX07CgoKCS8qKgoJICogSVNPL0lFQyA5Nzk3LTEgUGFkZGluZyBNZXRob2QgMi4KCSAqLwoJQ3J5cHRvSlMucGFkLklzbzk3OTcxID0gewoJICAgIHBhZDogZnVuY3Rpb24gKGRhdGEsIGJsb2NrU2l6ZSkgewoJICAgICAgICAvLyBBZGQgMHg4MCBieXRlCgkgICAgICAgIGRhdGEuY29uY2F0KENyeXB0b0pTLmxpYi5Xb3JkQXJyYXkuY3JlYXRlKFsweDgwMDAwMDAwXSwgMSkpOwoKCSAgICAgICAgLy8gWmVybyBwYWQgdGhlIHJlc3QKCSAgICAgICAgQ3J5cHRvSlMucGFkLlplcm9QYWRkaW5nLnBhZChkYXRhLCBibG9ja1NpemUpOwoJICAgIH0sCgoJICAgIHVucGFkOiBmdW5jdGlvbiAoZGF0YSkgewoJICAgICAgICAvLyBSZW1vdmUgemVybyBwYWRkaW5nCgkgICAgICAgIENyeXB0b0pTLnBhZC5aZXJvUGFkZGluZy51bnBhZChkYXRhKTsKCgkgICAgICAgIC8vIFJlbW92ZSBvbmUgbW9yZSBieXRlIC0tIHRoZSAweDgwIGJ5dGUKCSAgICAgICAgZGF0YS5zaWdCeXRlcy0tOwoJICAgIH0KCX07CgoKCS8qKgoJICogT3V0cHV0IEZlZWRiYWNrIGJsb2NrIG1vZGUuCgkgKi8KCUNyeXB0b0pTLm1vZGUuT0ZCID0gKGZ1bmN0aW9uICgpIHsKCSAgICB2YXIgT0ZCID0gQ3J5cHRvSlMubGliLkJsb2NrQ2lwaGVyTW9kZS5leHRlbmQoKTsKCgkgICAgdmFyIEVuY3J5cHRvciA9IE9GQi5FbmNyeXB0b3IgPSBPRkIuZXh0ZW5kKHsKCSAgICAgICAgcHJvY2Vzc0Jsb2NrOiBmdW5jdGlvbiAod29yZHMsIG9mZnNldCkgewoJICAgICAgICAgICAgLy8gU2hvcnRjdXRzCgkgICAgICAgICAgICB2YXIgY2lwaGVyID0gdGhpcy5fY2lwaGVyCgkgICAgICAgICAgICB2YXIgYmxvY2tTaXplID0gY2lwaGVyLmJsb2NrU2l6ZTsKCSAgICAgICAgICAgIHZhciBpdiA9IHRoaXMuX2l2OwoJICAgICAgICAgICAgdmFyIGtleXN0cmVhbSA9IHRoaXMuX2tleXN0cmVhbTsKCgkgICAgICAgICAgICAvLyBHZW5lcmF0ZSBrZXlzdHJlYW0KCSAgICAgICAgICAgIGlmIChpdikgewoJICAgICAgICAgICAgICAgIGtleXN0cmVhbSA9IHRoaXMuX2tleXN0cmVhbSA9IGl2LnNsaWNlKDApOwoKCSAgICAgICAgICAgICAgICAvLyBSZW1vdmUgSVYgZm9yIHN1YnNlcXVlbnQgYmxvY2tzCgkgICAgICAgICAgICAgICAgdGhpcy5faXYgPSB1bmRlZmluZWQ7CgkgICAgICAgICAgICB9CgkgICAgICAgICAgICBjaXBoZXIuZW5jcnlwdEJsb2NrKGtleXN0cmVhbSwgMCk7CgoJICAgICAgICAgICAgLy8gRW5jcnlwdAoJICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBibG9ja1NpemU7IGkrKykgewoJICAgICAgICAgICAgICAgIHdvcmRzW29mZnNldCArIGldIF49IGtleXN0cmVhbVtpXTsKCSAgICAgICAgICAgIH0KCSAgICAgICAgfQoJICAgIH0pOwoKCSAgICBPRkIuRGVjcnlwdG9yID0gRW5jcnlwdG9yOwoKCSAgICByZXR1cm4gT0ZCOwoJfSgpKTsKCgoJLyoqCgkgKiBBIG5vb3AgcGFkZGluZyBzdHJhdGVneS4KCSAqLwoJQ3J5cHRvSlMucGFkLk5vUGFkZGluZyA9IHsKCSAgICBwYWQ6IGZ1bmN0aW9uICgpIHsKCSAgICB9LAoKCSAgICB1bnBhZDogZnVuY3Rpb24gKCkgewoJICAgIH0KCX07CgoKCShmdW5jdGlvbiAodW5kZWZpbmVkKSB7CgkgICAgLy8gU2hvcnRjdXRzCgkgICAgdmFyIEMgPSBDcnlwdG9KUzsKCSAgICB2YXIgQ19saWIgPSBDLmxpYjsKCSAgICB2YXIgQ2lwaGVyUGFyYW1zID0gQ19saWIuQ2lwaGVyUGFyYW1zOwoJICAgIHZhciBDX2VuYyA9IEMuZW5jOwoJICAgIHZhciBIZXggPSBDX2VuYy5IZXg7CgkgICAgdmFyIENfZm9ybWF0ID0gQy5mb3JtYXQ7CgoJICAgIHZhciBIZXhGb3JtYXR0ZXIgPSBDX2Zvcm1hdC5IZXggPSB7CgkgICAgICAgIC8qKgoJICAgICAgICAgKiBDb252ZXJ0cyB0aGUgY2lwaGVydGV4dCBvZiBhIGNpcGhlciBwYXJhbXMgb2JqZWN0IHRvIGEgaGV4YWRlY2ltYWxseSBlbmNvZGVkIHN0cmluZy4KCSAgICAgICAgICoKCSAgICAgICAgICogQHBhcmFtIHtDaXBoZXJQYXJhbXN9IGNpcGhlclBhcmFtcyBUaGUgY2lwaGVyIHBhcmFtcyBvYmplY3QuCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge3N0cmluZ30gVGhlIGhleGFkZWNpbWFsbHkgZW5jb2RlZCBzdHJpbmcuCgkgICAgICAgICAqCgkgICAgICAgICAqIEBzdGF0aWMKCSAgICAgICAgICoKCSAgICAgICAgICogQGV4YW1wbGUKCSAgICAgICAgICoKCSAgICAgICAgICogICAgIHZhciBoZXhTdHJpbmcgPSBDcnlwdG9KUy5mb3JtYXQuSGV4LnN0cmluZ2lmeShjaXBoZXJQYXJhbXMpOwoJICAgICAgICAgKi8KCSAgICAgICAgc3RyaW5naWZ5OiBmdW5jdGlvbiAoY2lwaGVyUGFyYW1zKSB7CgkgICAgICAgICAgICByZXR1cm4gY2lwaGVyUGFyYW1zLmNpcGhlcnRleHQudG9TdHJpbmcoSGV4KTsKCSAgICAgICAgfSwKCgkgICAgICAgIC8qKgoJICAgICAgICAgKiBDb252ZXJ0cyBhIGhleGFkZWNpbWFsbHkgZW5jb2RlZCBjaXBoZXJ0ZXh0IHN0cmluZyB0byBhIGNpcGhlciBwYXJhbXMgb2JqZWN0LgoJICAgICAgICAgKgoJICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gaW5wdXQgVGhlIGhleGFkZWNpbWFsbHkgZW5jb2RlZCBzdHJpbmcuCgkgICAgICAgICAqCgkgICAgICAgICAqIEByZXR1cm4ge0NpcGhlclBhcmFtc30gVGhlIGNpcGhlciBwYXJhbXMgb2JqZWN0LgoJICAgICAgICAgKgoJICAgICAgICAgKiBAc3RhdGljCgkgICAgICAgICAqCgkgICAgICAgICAqIEBleGFtcGxlCgkgICAgICAgICAqCgkgICAgICAgICAqICAgICB2YXIgY2lwaGVyUGFyYW1zID0gQ3J5cHRvSlMuZm9ybWF0LkhleC5wYXJzZShoZXhTdHJpbmcpOwoJICAgICAgICAgKi8KCSAgICAgICAgcGFyc2U6IGZ1bmN0aW9uIChpbnB1dCkgewoJICAgICAgICAgICAgdmFyIGNpcGhlcnRleHQgPSBIZXgucGFyc2UoaW5wdXQpOwoJICAgICAgICAgICAgcmV0dXJuIENpcGhlclBhcmFtcy5jcmVhdGUoeyBjaXBoZXJ0ZXh0OiBjaXBoZXJ0ZXh0IH0pOwoJICAgICAgICB9CgkgICAgfTsKCX0oKSk7CgoKCShmdW5jdGlvbiAoKSB7CgkgICAgLy8gU2hvcnRjdXRzCgkgICAgdmFyIEMgPSBDcnlwdG9KUzsKCSAgICB2YXIgQ19saWIgPSBDLmxpYjsKCSAgICB2YXIgQmxvY2tDaXBoZXIgPSBDX2xpYi5CbG9ja0NpcGhlcjsKCSAgICB2YXIgQ19hbGdvID0gQy5hbGdvOwoKCSAgICAvLyBMb29rdXAgdGFibGVzCgkgICAgdmFyIFNCT1ggPSBbXTsKCSAgICB2YXIgSU5WX1NCT1ggPSBbXTsKCSAgICB2YXIgU1VCX01JWF8wID0gW107CgkgICAgdmFyIFNVQl9NSVhfMSA9IFtdOwoJICAgIHZhciBTVUJfTUlYXzIgPSBbXTsKCSAgICB2YXIgU1VCX01JWF8zID0gW107CgkgICAgdmFyIElOVl9TVUJfTUlYXzAgPSBbXTsKCSAgICB2YXIgSU5WX1NVQl9NSVhfMSA9IFtdOwoJICAgIHZhciBJTlZfU1VCX01JWF8yID0gW107CgkgICAgdmFyIElOVl9TVUJfTUlYXzMgPSBbXTsKCgkgICAgLy8gQ29tcHV0ZSBsb29rdXAgdGFibGVzCgkgICAgKGZ1bmN0aW9uICgpIHsKCSAgICAgICAgLy8gQ29tcHV0ZSBkb3VibGUgdGFibGUKCSAgICAgICAgdmFyIGQgPSBbXTsKCSAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAyNTY7IGkrKykgewoJICAgICAgICAgICAgaWYgKGkgPCAxMjgpIHsKCSAgICAgICAgICAgICAgICBkW2ldID0gaSA8PCAxOwoJICAgICAgICAgICAgfSBlbHNlIHsKCSAgICAgICAgICAgICAgICBkW2ldID0gKGkgPDwgMSkgXiAweDExYjsKCSAgICAgICAgICAgIH0KCSAgICAgICAgfQoKCSAgICAgICAgLy8gV2FsayBHRigyXjgpCgkgICAgICAgIHZhciB4ID0gMDsKCSAgICAgICAgdmFyIHhpID0gMDsKCSAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAyNTY7IGkrKykgewoJICAgICAgICAgICAgLy8gQ29tcHV0ZSBzYm94CgkgICAgICAgICAgICB2YXIgc3ggPSB4aSBeICh4aSA8PCAxKSBeICh4aSA8PCAyKSBeICh4aSA8PCAzKSBeICh4aSA8PCA0KTsKCSAgICAgICAgICAgIHN4ID0gKHN4ID4+PiA4KSBeIChzeCAmIDB4ZmYpIF4gMHg2MzsKCSAgICAgICAgICAgIFNCT1hbeF0gPSBzeDsKCSAgICAgICAgICAgIElOVl9TQk9YW3N4XSA9IHg7CgoJICAgICAgICAgICAgLy8gQ29tcHV0ZSBtdWx0aXBsaWNhdGlvbgoJICAgICAgICAgICAgdmFyIHgyID0gZFt4XTsKCSAgICAgICAgICAgIHZhciB4NCA9IGRbeDJdOwoJICAgICAgICAgICAgdmFyIHg4ID0gZFt4NF07CgoJICAgICAgICAgICAgLy8gQ29tcHV0ZSBzdWIgYnl0ZXMsIG1peCBjb2x1bW5zIHRhYmxlcwoJICAgICAgICAgICAgdmFyIHQgPSAoZFtzeF0gKiAweDEwMSkgXiAoc3ggKiAweDEwMTAxMDApOwoJICAgICAgICAgICAgU1VCX01JWF8wW3hdID0gKHQgPDwgMjQpIHwgKHQgPj4+IDgpOwoJICAgICAgICAgICAgU1VCX01JWF8xW3hdID0gKHQgPDwgMTYpIHwgKHQgPj4+IDE2KTsKCSAgICAgICAgICAgIFNVQl9NSVhfMlt4XSA9ICh0IDw8IDgpICB8ICh0ID4+PiAyNCk7CgkgICAgICAgICAgICBTVUJfTUlYXzNbeF0gPSB0OwoKCSAgICAgICAgICAgIC8vIENvbXB1dGUgaW52IHN1YiBieXRlcywgaW52IG1peCBjb2x1bW5zIHRhYmxlcwoJICAgICAgICAgICAgdmFyIHQgPSAoeDggKiAweDEwMTAxMDEpIF4gKHg0ICogMHgxMDAwMSkgXiAoeDIgKiAweDEwMSkgXiAoeCAqIDB4MTAxMDEwMCk7CgkgICAgICAgICAgICBJTlZfU1VCX01JWF8wW3N4XSA9ICh0IDw8IDI0KSB8ICh0ID4+PiA4KTsKCSAgICAgICAgICAgIElOVl9TVUJfTUlYXzFbc3hdID0gKHQgPDwgMTYpIHwgKHQgPj4+IDE2KTsKCSAgICAgICAgICAgIElOVl9TVUJfTUlYXzJbc3hdID0gKHQgPDwgOCkgIHwgKHQgPj4+IDI0KTsKCSAgICAgICAgICAgIElOVl9TVUJfTUlYXzNbc3hdID0gdDsKCgkgICAgICAgICAgICAvLyBDb21wdXRlIG5leHQgY291bnRlcgoJICAgICAgICAgICAgaWYgKCF4KSB7CgkgICAgICAgICAgICAgICAgeCA9IHhpID0gMTsKCSAgICAgICAgICAgIH0gZWxzZSB7CgkgICAgICAgICAgICAgICAgeCA9IHgyIF4gZFtkW2RbeDggXiB4Ml1dXTsKCSAgICAgICAgICAgICAgICB4aSBePSBkW2RbeGldXTsKCSAgICAgICAgICAgIH0KCSAgICAgICAgfQoJICAgIH0oKSk7CgoJICAgIC8vIFByZWNvbXB1dGVkIFJjb24gbG9va3VwCgkgICAgdmFyIFJDT04gPSBbMHgwMCwgMHgwMSwgMHgwMiwgMHgwNCwgMHgwOCwgMHgxMCwgMHgyMCwgMHg0MCwgMHg4MCwgMHgxYiwgMHgzNl07CgoJICAgIC8qKgoJICAgICAqIEFFUyBibG9jayBjaXBoZXIgYWxnb3JpdGhtLgoJICAgICAqLwoJICAgIHZhciBBRVMgPSBDX2FsZ28uQUVTID0gQmxvY2tDaXBoZXIuZXh0ZW5kKHsKCSAgICAgICAgX2RvUmVzZXQ6IGZ1bmN0aW9uICgpIHsKCSAgICAgICAgICAgIC8vIFNraXAgcmVzZXQgb2YgblJvdW5kcyBoYXMgYmVlbiBzZXQgYmVmb3JlIGFuZCBrZXkgZGlkIG5vdCBjaGFuZ2UKCSAgICAgICAgICAgIGlmICh0aGlzLl9uUm91bmRzICYmIHRoaXMuX2tleVByaW9yUmVzZXQgPT09IHRoaXMuX2tleSkgewoJICAgICAgICAgICAgICAgIHJldHVybjsKCSAgICAgICAgICAgIH0KCgkgICAgICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgICAgIHZhciBrZXkgPSB0aGlzLl9rZXlQcmlvclJlc2V0ID0gdGhpcy5fa2V5OwoJICAgICAgICAgICAgdmFyIGtleVdvcmRzID0ga2V5LndvcmRzOwoJICAgICAgICAgICAgdmFyIGtleVNpemUgPSBrZXkuc2lnQnl0ZXMgLyA0OwoKCSAgICAgICAgICAgIC8vIENvbXB1dGUgbnVtYmVyIG9mIHJvdW5kcwoJICAgICAgICAgICAgdmFyIG5Sb3VuZHMgPSB0aGlzLl9uUm91bmRzID0ga2V5U2l6ZSArIDY7CgoJICAgICAgICAgICAgLy8gQ29tcHV0ZSBudW1iZXIgb2Yga2V5IHNjaGVkdWxlIHJvd3MKCSAgICAgICAgICAgIHZhciBrc1Jvd3MgPSAoblJvdW5kcyArIDEpICogNDsKCgkgICAgICAgICAgICAvLyBDb21wdXRlIGtleSBzY2hlZHVsZQoJICAgICAgICAgICAgdmFyIGtleVNjaGVkdWxlID0gdGhpcy5fa2V5U2NoZWR1bGUgPSBbXTsKCSAgICAgICAgICAgIGZvciAodmFyIGtzUm93ID0gMDsga3NSb3cgPCBrc1Jvd3M7IGtzUm93KyspIHsKCSAgICAgICAgICAgICAgICBpZiAoa3NSb3cgPCBrZXlTaXplKSB7CgkgICAgICAgICAgICAgICAgICAgIGtleVNjaGVkdWxlW2tzUm93XSA9IGtleVdvcmRzW2tzUm93XTsKCSAgICAgICAgICAgICAgICB9IGVsc2UgewoJICAgICAgICAgICAgICAgICAgICB2YXIgdCA9IGtleVNjaGVkdWxlW2tzUm93IC0gMV07CgoJICAgICAgICAgICAgICAgICAgICBpZiAoIShrc1JvdyAlIGtleVNpemUpKSB7CgkgICAgICAgICAgICAgICAgICAgICAgICAvLyBSb3Qgd29yZAoJICAgICAgICAgICAgICAgICAgICAgICAgdCA9ICh0IDw8IDgpIHwgKHQgPj4+IDI0KTsKCgkgICAgICAgICAgICAgICAgICAgICAgICAvLyBTdWIgd29yZAoJICAgICAgICAgICAgICAgICAgICAgICAgdCA9IChTQk9YW3QgPj4+IDI0XSA8PCAyNCkgfCAoU0JPWFsodCA+Pj4gMTYpICYgMHhmZl0gPDwgMTYpIHwgKFNCT1hbKHQgPj4+IDgpICYgMHhmZl0gPDwgOCkgfCBTQk9YW3QgJiAweGZmXTsKCgkgICAgICAgICAgICAgICAgICAgICAgICAvLyBNaXggUmNvbgoJICAgICAgICAgICAgICAgICAgICAgICAgdCBePSBSQ09OWyhrc1JvdyAvIGtleVNpemUpIHwgMF0gPDwgMjQ7CgkgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoa2V5U2l6ZSA+IDYgJiYga3NSb3cgJSBrZXlTaXplID09IDQpIHsKCSAgICAgICAgICAgICAgICAgICAgICAgIC8vIFN1YiB3b3JkCgkgICAgICAgICAgICAgICAgICAgICAgICB0ID0gKFNCT1hbdCA+Pj4gMjRdIDw8IDI0KSB8IChTQk9YWyh0ID4+PiAxNikgJiAweGZmXSA8PCAxNikgfCAoU0JPWFsodCA+Pj4gOCkgJiAweGZmXSA8PCA4KSB8IFNCT1hbdCAmIDB4ZmZdOwoJICAgICAgICAgICAgICAgICAgICB9CgoJICAgICAgICAgICAgICAgICAgICBrZXlTY2hlZHVsZVtrc1Jvd10gPSBrZXlTY2hlZHVsZVtrc1JvdyAtIGtleVNpemVdIF4gdDsKCSAgICAgICAgICAgICAgICB9CgkgICAgICAgICAgICB9CgoJICAgICAgICAgICAgLy8gQ29tcHV0ZSBpbnYga2V5IHNjaGVkdWxlCgkgICAgICAgICAgICB2YXIgaW52S2V5U2NoZWR1bGUgPSB0aGlzLl9pbnZLZXlTY2hlZHVsZSA9IFtdOwoJICAgICAgICAgICAgZm9yICh2YXIgaW52S3NSb3cgPSAwOyBpbnZLc1JvdyA8IGtzUm93czsgaW52S3NSb3crKykgewoJICAgICAgICAgICAgICAgIHZhciBrc1JvdyA9IGtzUm93cyAtIGludktzUm93OwoKCSAgICAgICAgICAgICAgICBpZiAoaW52S3NSb3cgJSA0KSB7CgkgICAgICAgICAgICAgICAgICAgIHZhciB0ID0ga2V5U2NoZWR1bGVba3NSb3ddOwoJICAgICAgICAgICAgICAgIH0gZWxzZSB7CgkgICAgICAgICAgICAgICAgICAgIHZhciB0ID0ga2V5U2NoZWR1bGVba3NSb3cgLSA0XTsKCSAgICAgICAgICAgICAgICB9CgoJICAgICAgICAgICAgICAgIGlmIChpbnZLc1JvdyA8IDQgfHwga3NSb3cgPD0gNCkgewoJICAgICAgICAgICAgICAgICAgICBpbnZLZXlTY2hlZHVsZVtpbnZLc1Jvd10gPSB0OwoJICAgICAgICAgICAgICAgIH0gZWxzZSB7CgkgICAgICAgICAgICAgICAgICAgIGludktleVNjaGVkdWxlW2ludktzUm93XSA9IElOVl9TVUJfTUlYXzBbU0JPWFt0ID4+PiAyNF1dIF4gSU5WX1NVQl9NSVhfMVtTQk9YWyh0ID4+PiAxNikgJiAweGZmXV0gXgoJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJTlZfU1VCX01JWF8yW1NCT1hbKHQgPj4+IDgpICYgMHhmZl1dIF4gSU5WX1NVQl9NSVhfM1tTQk9YW3QgJiAweGZmXV07CgkgICAgICAgICAgICAgICAgfQoJICAgICAgICAgICAgfQoJICAgICAgICB9LAoKCSAgICAgICAgZW5jcnlwdEJsb2NrOiBmdW5jdGlvbiAoTSwgb2Zmc2V0KSB7CgkgICAgICAgICAgICB0aGlzLl9kb0NyeXB0QmxvY2soTSwgb2Zmc2V0LCB0aGlzLl9rZXlTY2hlZHVsZSwgU1VCX01JWF8wLCBTVUJfTUlYXzEsIFNVQl9NSVhfMiwgU1VCX01JWF8zLCBTQk9YKTsKCSAgICAgICAgfSwKCgkgICAgICAgIGRlY3J5cHRCbG9jazogZnVuY3Rpb24gKE0sIG9mZnNldCkgewoJICAgICAgICAgICAgLy8gU3dhcCAybmQgYW5kIDR0aCByb3dzCgkgICAgICAgICAgICB2YXIgdCA9IE1bb2Zmc2V0ICsgMV07CgkgICAgICAgICAgICBNW29mZnNldCArIDFdID0gTVtvZmZzZXQgKyAzXTsKCSAgICAgICAgICAgIE1bb2Zmc2V0ICsgM10gPSB0OwoKCSAgICAgICAgICAgIHRoaXMuX2RvQ3J5cHRCbG9jayhNLCBvZmZzZXQsIHRoaXMuX2ludktleVNjaGVkdWxlLCBJTlZfU1VCX01JWF8wLCBJTlZfU1VCX01JWF8xLCBJTlZfU1VCX01JWF8yLCBJTlZfU1VCX01JWF8zLCBJTlZfU0JPWCk7CgoJICAgICAgICAgICAgLy8gSW52IHN3YXAgMm5kIGFuZCA0dGggcm93cwoJICAgICAgICAgICAgdmFyIHQgPSBNW29mZnNldCArIDFdOwoJICAgICAgICAgICAgTVtvZmZzZXQgKyAxXSA9IE1bb2Zmc2V0ICsgM107CgkgICAgICAgICAgICBNW29mZnNldCArIDNdID0gdDsKCSAgICAgICAgfSwKCgkgICAgICAgIF9kb0NyeXB0QmxvY2s6IGZ1bmN0aW9uIChNLCBvZmZzZXQsIGtleVNjaGVkdWxlLCBTVUJfTUlYXzAsIFNVQl9NSVhfMSwgU1VCX01JWF8yLCBTVUJfTUlYXzMsIFNCT1gpIHsKCSAgICAgICAgICAgIC8vIFNob3J0Y3V0CgkgICAgICAgICAgICB2YXIgblJvdW5kcyA9IHRoaXMuX25Sb3VuZHM7CgoJICAgICAgICAgICAgLy8gR2V0IGlucHV0LCBhZGQgcm91bmQga2V5CgkgICAgICAgICAgICB2YXIgczAgPSBNW29mZnNldF0gICAgIF4ga2V5U2NoZWR1bGVbMF07CgkgICAgICAgICAgICB2YXIgczEgPSBNW29mZnNldCArIDFdIF4ga2V5U2NoZWR1bGVbMV07CgkgICAgICAgICAgICB2YXIgczIgPSBNW29mZnNldCArIDJdIF4ga2V5U2NoZWR1bGVbMl07CgkgICAgICAgICAgICB2YXIgczMgPSBNW29mZnNldCArIDNdIF4ga2V5U2NoZWR1bGVbM107CgoJICAgICAgICAgICAgLy8gS2V5IHNjaGVkdWxlIHJvdyBjb3VudGVyCgkgICAgICAgICAgICB2YXIga3NSb3cgPSA0OwoKCSAgICAgICAgICAgIC8vIFJvdW5kcwoJICAgICAgICAgICAgZm9yICh2YXIgcm91bmQgPSAxOyByb3VuZCA8IG5Sb3VuZHM7IHJvdW5kKyspIHsKCSAgICAgICAgICAgICAgICAvLyBTaGlmdCByb3dzLCBzdWIgYnl0ZXMsIG1peCBjb2x1bW5zLCBhZGQgcm91bmQga2V5CgkgICAgICAgICAgICAgICAgdmFyIHQwID0gU1VCX01JWF8wW3MwID4+PiAyNF0gXiBTVUJfTUlYXzFbKHMxID4+PiAxNikgJiAweGZmXSBeIFNVQl9NSVhfMlsoczIgPj4+IDgpICYgMHhmZl0gXiBTVUJfTUlYXzNbczMgJiAweGZmXSBeIGtleVNjaGVkdWxlW2tzUm93KytdOwoJICAgICAgICAgICAgICAgIHZhciB0MSA9IFNVQl9NSVhfMFtzMSA+Pj4gMjRdIF4gU1VCX01JWF8xWyhzMiA+Pj4gMTYpICYgMHhmZl0gXiBTVUJfTUlYXzJbKHMzID4+PiA4KSAmIDB4ZmZdIF4gU1VCX01JWF8zW3MwICYgMHhmZl0gXiBrZXlTY2hlZHVsZVtrc1JvdysrXTsKCSAgICAgICAgICAgICAgICB2YXIgdDIgPSBTVUJfTUlYXzBbczIgPj4+IDI0XSBeIFNVQl9NSVhfMVsoczMgPj4+IDE2KSAmIDB4ZmZdIF4gU1VCX01JWF8yWyhzMCA+Pj4gOCkgJiAweGZmXSBeIFNVQl9NSVhfM1tzMSAmIDB4ZmZdIF4ga2V5U2NoZWR1bGVba3NSb3crK107CgkgICAgICAgICAgICAgICAgdmFyIHQzID0gU1VCX01JWF8wW3MzID4+PiAyNF0gXiBTVUJfTUlYXzFbKHMwID4+PiAxNikgJiAweGZmXSBeIFNVQl9NSVhfMlsoczEgPj4+IDgpICYgMHhmZl0gXiBTVUJfTUlYXzNbczIgJiAweGZmXSBeIGtleVNjaGVkdWxlW2tzUm93KytdOwoKCSAgICAgICAgICAgICAgICAvLyBVcGRhdGUgc3RhdGUKCSAgICAgICAgICAgICAgICBzMCA9IHQwOwoJICAgICAgICAgICAgICAgIHMxID0gdDE7CgkgICAgICAgICAgICAgICAgczIgPSB0MjsKCSAgICAgICAgICAgICAgICBzMyA9IHQzOwoJICAgICAgICAgICAgfQoKCSAgICAgICAgICAgIC8vIFNoaWZ0IHJvd3MsIHN1YiBieXRlcywgYWRkIHJvdW5kIGtleQoJICAgICAgICAgICAgdmFyIHQwID0gKChTQk9YW3MwID4+PiAyNF0gPDwgMjQpIHwgKFNCT1hbKHMxID4+PiAxNikgJiAweGZmXSA8PCAxNikgfCAoU0JPWFsoczIgPj4+IDgpICYgMHhmZl0gPDwgOCkgfCBTQk9YW3MzICYgMHhmZl0pIF4ga2V5U2NoZWR1bGVba3NSb3crK107CgkgICAgICAgICAgICB2YXIgdDEgPSAoKFNCT1hbczEgPj4+IDI0XSA8PCAyNCkgfCAoU0JPWFsoczIgPj4+IDE2KSAmIDB4ZmZdIDw8IDE2KSB8IChTQk9YWyhzMyA+Pj4gOCkgJiAweGZmXSA8PCA4KSB8IFNCT1hbczAgJiAweGZmXSkgXiBrZXlTY2hlZHVsZVtrc1JvdysrXTsKCSAgICAgICAgICAgIHZhciB0MiA9ICgoU0JPWFtzMiA+Pj4gMjRdIDw8IDI0KSB8IChTQk9YWyhzMyA+Pj4gMTYpICYgMHhmZl0gPDwgMTYpIHwgKFNCT1hbKHMwID4+PiA4KSAmIDB4ZmZdIDw8IDgpIHwgU0JPWFtzMSAmIDB4ZmZdKSBeIGtleVNjaGVkdWxlW2tzUm93KytdOwoJICAgICAgICAgICAgdmFyIHQzID0gKChTQk9YW3MzID4+PiAyNF0gPDwgMjQpIHwgKFNCT1hbKHMwID4+PiAxNikgJiAweGZmXSA8PCAxNikgfCAoU0JPWFsoczEgPj4+IDgpICYgMHhmZl0gPDwgOCkgfCBTQk9YW3MyICYgMHhmZl0pIF4ga2V5U2NoZWR1bGVba3NSb3crK107CgoJICAgICAgICAgICAgLy8gU2V0IG91dHB1dAoJICAgICAgICAgICAgTVtvZmZzZXRdICAgICA9IHQwOwoJICAgICAgICAgICAgTVtvZmZzZXQgKyAxXSA9IHQxOwoJICAgICAgICAgICAgTVtvZmZzZXQgKyAyXSA9IHQyOwoJICAgICAgICAgICAgTVtvZmZzZXQgKyAzXSA9IHQzOwoJICAgICAgICB9LAoKCSAgICAgICAga2V5U2l6ZTogMjU2LzMyCgkgICAgfSk7CgoJICAgIC8qKgoJICAgICAqIFNob3J0Y3V0IGZ1bmN0aW9ucyB0byB0aGUgY2lwaGVyJ3Mgb2JqZWN0IGludGVyZmFjZS4KCSAgICAgKgoJICAgICAqIEBleGFtcGxlCgkgICAgICoKCSAgICAgKiAgICAgdmFyIGNpcGhlcnRleHQgPSBDcnlwdG9KUy5BRVMuZW5jcnlwdChtZXNzYWdlLCBrZXksIGNmZyk7CgkgICAgICogICAgIHZhciBwbGFpbnRleHQgID0gQ3J5cHRvSlMuQUVTLmRlY3J5cHQoY2lwaGVydGV4dCwga2V5LCBjZmcpOwoJICAgICAqLwoJICAgIEMuQUVTID0gQmxvY2tDaXBoZXIuX2NyZWF0ZUhlbHBlcihBRVMpOwoJfSgpKTsKCgoJKGZ1bmN0aW9uICgpIHsKCSAgICAvLyBTaG9ydGN1dHMKCSAgICB2YXIgQyA9IENyeXB0b0pTOwoJICAgIHZhciBDX2xpYiA9IEMubGliOwoJICAgIHZhciBXb3JkQXJyYXkgPSBDX2xpYi5Xb3JkQXJyYXk7CgkgICAgdmFyIEJsb2NrQ2lwaGVyID0gQ19saWIuQmxvY2tDaXBoZXI7CgkgICAgdmFyIENfYWxnbyA9IEMuYWxnbzsKCgkgICAgLy8gUGVybXV0ZWQgQ2hvaWNlIDEgY29uc3RhbnRzCgkgICAgdmFyIFBDMSA9IFsKCSAgICAgICAgNTcsIDQ5LCA0MSwgMzMsIDI1LCAxNywgOSwgIDEsCgkgICAgICAgIDU4LCA1MCwgNDIsIDM0LCAyNiwgMTgsIDEwLCAyLAoJICAgICAgICA1OSwgNTEsIDQzLCAzNSwgMjcsIDE5LCAxMSwgMywKCSAgICAgICAgNjAsIDUyLCA0NCwgMzYsIDYzLCA1NSwgNDcsIDM5LAoJICAgICAgICAzMSwgMjMsIDE1LCA3LCAgNjIsIDU0LCA0NiwgMzgsCgkgICAgICAgIDMwLCAyMiwgMTQsIDYsICA2MSwgNTMsIDQ1LCAzNywKCSAgICAgICAgMjksIDIxLCAxMywgNSwgIDI4LCAyMCwgMTIsIDQKCSAgICBdOwoKCSAgICAvLyBQZXJtdXRlZCBDaG9pY2UgMiBjb25zdGFudHMKCSAgICB2YXIgUEMyID0gWwoJICAgICAgICAxNCwgMTcsIDExLCAyNCwgMSwgIDUsCgkgICAgICAgIDMsICAyOCwgMTUsIDYsICAyMSwgMTAsCgkgICAgICAgIDIzLCAxOSwgMTIsIDQsICAyNiwgOCwKCSAgICAgICAgMTYsIDcsICAyNywgMjAsIDEzLCAyLAoJICAgICAgICA0MSwgNTIsIDMxLCAzNywgNDcsIDU1LAoJICAgICAgICAzMCwgNDAsIDUxLCA0NSwgMzMsIDQ4LAoJICAgICAgICA0NCwgNDksIDM5LCA1NiwgMzQsIDUzLAoJICAgICAgICA0NiwgNDIsIDUwLCAzNiwgMjksIDMyCgkgICAgXTsKCgkgICAgLy8gQ3VtdWxhdGl2ZSBiaXQgc2hpZnQgY29uc3RhbnRzCgkgICAgdmFyIEJJVF9TSElGVFMgPSBbMSwgIDIsICA0LCAgNiwgIDgsICAxMCwgMTIsIDE0LCAxNSwgMTcsIDE5LCAyMSwgMjMsIDI1LCAyNywgMjhdOwoKCSAgICAvLyBTQk9YZXMgYW5kIHJvdW5kIHBlcm11dGF0aW9uIGNvbnN0YW50cwoJICAgIHZhciBTQk9YX1AgPSBbCgkgICAgICAgIHsKCSAgICAgICAgICAgIDB4MDogMHg4MDgyMDAsCgkgICAgICAgICAgICAweDEwMDAwMDAwOiAweDgwMDAsCgkgICAgICAgICAgICAweDIwMDAwMDAwOiAweDgwODAwMiwKCSAgICAgICAgICAgIDB4MzAwMDAwMDA6IDB4MiwKCSAgICAgICAgICAgIDB4NDAwMDAwMDA6IDB4MjAwLAoJICAgICAgICAgICAgMHg1MDAwMDAwMDogMHg4MDgyMDIsCgkgICAgICAgICAgICAweDYwMDAwMDAwOiAweDgwMDIwMiwKCSAgICAgICAgICAgIDB4NzAwMDAwMDA6IDB4ODAwMDAwLAoJICAgICAgICAgICAgMHg4MDAwMDAwMDogMHgyMDIsCgkgICAgICAgICAgICAweDkwMDAwMDAwOiAweDgwMDIwMCwKCSAgICAgICAgICAgIDB4YTAwMDAwMDA6IDB4ODIwMCwKCSAgICAgICAgICAgIDB4YjAwMDAwMDA6IDB4ODA4MDAwLAoJICAgICAgICAgICAgMHhjMDAwMDAwMDogMHg4MDAyLAoJICAgICAgICAgICAgMHhkMDAwMDAwMDogMHg4MDAwMDIsCgkgICAgICAgICAgICAweGUwMDAwMDAwOiAweDAsCgkgICAgICAgICAgICAweGYwMDAwMDAwOiAweDgyMDIsCgkgICAgICAgICAgICAweDgwMDAwMDA6IDB4MCwKCSAgICAgICAgICAgIDB4MTgwMDAwMDA6IDB4ODA4MjAyLAoJICAgICAgICAgICAgMHgyODAwMDAwMDogMHg4MjAyLAoJICAgICAgICAgICAgMHgzODAwMDAwMDogMHg4MDAwLAoJICAgICAgICAgICAgMHg0ODAwMDAwMDogMHg4MDgyMDAsCgkgICAgICAgICAgICAweDU4MDAwMDAwOiAweDIwMCwKCSAgICAgICAgICAgIDB4NjgwMDAwMDA6IDB4ODA4MDAyLAoJICAgICAgICAgICAgMHg3ODAwMDAwMDogMHgyLAoJICAgICAgICAgICAgMHg4ODAwMDAwMDogMHg4MDAyMDAsCgkgICAgICAgICAgICAweDk4MDAwMDAwOiAweDgyMDAsCgkgICAgICAgICAgICAweGE4MDAwMDAwOiAweDgwODAwMCwKCSAgICAgICAgICAgIDB4YjgwMDAwMDA6IDB4ODAwMjAyLAoJICAgICAgICAgICAgMHhjODAwMDAwMDogMHg4MDAwMDIsCgkgICAgICAgICAgICAweGQ4MDAwMDAwOiAweDgwMDIsCgkgICAgICAgICAgICAweGU4MDAwMDAwOiAweDIwMiwKCSAgICAgICAgICAgIDB4ZjgwMDAwMDA6IDB4ODAwMDAwLAoJICAgICAgICAgICAgMHgxOiAweDgwMDAsCgkgICAgICAgICAgICAweDEwMDAwMDAxOiAweDIsCgkgICAgICAgICAgICAweDIwMDAwMDAxOiAweDgwODIwMCwKCSAgICAgICAgICAgIDB4MzAwMDAwMDE6IDB4ODAwMDAwLAoJICAgICAgICAgICAgMHg0MDAwMDAwMTogMHg4MDgwMDIsCgkgICAgICAgICAgICAweDUwMDAwMDAxOiAweDgyMDAsCgkgICAgICAgICAgICAweDYwMDAwMDAxOiAweDIwMCwKCSAgICAgICAgICAgIDB4NzAwMDAwMDE6IDB4ODAwMjAyLAoJICAgICAgICAgICAgMHg4MDAwMDAwMTogMHg4MDgyMDIsCgkgICAgICAgICAgICAweDkwMDAwMDAxOiAweDgwODAwMCwKCSAgICAgICAgICAgIDB4YTAwMDAwMDE6IDB4ODAwMDAyLAoJICAgICAgICAgICAgMHhiMDAwMDAwMTogMHg4MjAyLAoJICAgICAgICAgICAgMHhjMDAwMDAwMTogMHgyMDIsCgkgICAgICAgICAgICAweGQwMDAwMDAxOiAweDgwMDIwMCwKCSAgICAgICAgICAgIDB4ZTAwMDAwMDE6IDB4ODAwMiwKCSAgICAgICAgICAgIDB4ZjAwMDAwMDE6IDB4MCwKCSAgICAgICAgICAgIDB4ODAwMDAwMTogMHg4MDgyMDIsCgkgICAgICAgICAgICAweDE4MDAwMDAxOiAweDgwODAwMCwKCSAgICAgICAgICAgIDB4MjgwMDAwMDE6IDB4ODAwMDAwLAoJICAgICAgICAgICAgMHgzODAwMDAwMTogMHgyMDAsCgkgICAgICAgICAgICAweDQ4MDAwMDAxOiAweDgwMDAsCgkgICAgICAgICAgICAweDU4MDAwMDAxOiAweDgwMDAwMiwKCSAgICAgICAgICAgIDB4NjgwMDAwMDE6IDB4MiwKCSAgICAgICAgICAgIDB4NzgwMDAwMDE6IDB4ODIwMiwKCSAgICAgICAgICAgIDB4ODgwMDAwMDE6IDB4ODAwMiwKCSAgICAgICAgICAgIDB4OTgwMDAwMDE6IDB4ODAwMjAyLAoJICAgICAgICAgICAgMHhhODAwMDAwMTogMHgyMDIsCgkgICAgICAgICAgICAweGI4MDAwMDAxOiAweDgwODIwMCwKCSAgICAgICAgICAgIDB4YzgwMDAwMDE6IDB4ODAwMjAwLAoJICAgICAgICAgICAgMHhkODAwMDAwMTogMHgwLAoJICAgICAgICAgICAgMHhlODAwMDAwMTogMHg4MjAwLAoJICAgICAgICAgICAgMHhmODAwMDAwMTogMHg4MDgwMDIKCSAgICAgICAgfSwKCSAgICAgICAgewoJICAgICAgICAgICAgMHgwOiAweDQwMDg0MDEwLAoJICAgICAgICAgICAgMHgxMDAwMDAwOiAweDQwMDAsCgkgICAgICAgICAgICAweDIwMDAwMDA6IDB4ODAwMDAsCgkgICAgICAgICAgICAweDMwMDAwMDA6IDB4NDAwODAwMTAsCgkgICAgICAgICAgICAweDQwMDAwMDA6IDB4NDAwMDAwMTAsCgkgICAgICAgICAgICAweDUwMDAwMDA6IDB4NDAwODQwMDAsCgkgICAgICAgICAgICAweDYwMDAwMDA6IDB4NDAwMDQwMDAsCgkgICAgICAgICAgICAweDcwMDAwMDA6IDB4MTAsCgkgICAgICAgICAgICAweDgwMDAwMDA6IDB4ODQwMDAsCgkgICAgICAgICAgICAweDkwMDAwMDA6IDB4NDAwMDQwMTAsCgkgICAgICAgICAgICAweGEwMDAwMDA6IDB4NDAwMDAwMDAsCgkgICAgICAgICAgICAweGIwMDAwMDA6IDB4ODQwMTAsCgkgICAgICAgICAgICAweGMwMDAwMDA6IDB4ODAwMTAsCgkgICAgICAgICAgICAweGQwMDAwMDA6IDB4MCwKCSAgICAgICAgICAgIDB4ZTAwMDAwMDogMHg0MDEwLAoJICAgICAgICAgICAgMHhmMDAwMDAwOiAweDQwMDgwMDAwLAoJICAgICAgICAgICAgMHg4MDAwMDA6IDB4NDAwMDQwMDAsCgkgICAgICAgICAgICAweDE4MDAwMDA6IDB4ODQwMTAsCgkgICAgICAgICAgICAweDI4MDAwMDA6IDB4MTAsCgkgICAgICAgICAgICAweDM4MDAwMDA6IDB4NDAwMDQwMTAsCgkgICAgICAgICAgICAweDQ4MDAwMDA6IDB4NDAwODQwMTAsCgkgICAgICAgICAgICAweDU4MDAwMDA6IDB4NDAwMDAwMDAsCgkgICAgICAgICAgICAweDY4MDAwMDA6IDB4ODAwMDAsCgkgICAgICAgICAgICAweDc4MDAwMDA6IDB4NDAwODAwMTAsCgkgICAgICAgICAgICAweDg4MDAwMDA6IDB4ODAwMTAsCgkgICAgICAgICAgICAweDk4MDAwMDA6IDB4MCwKCSAgICAgICAgICAgIDB4YTgwMDAwMDogMHg0MDAwLAoJICAgICAgICAgICAgMHhiODAwMDAwOiAweDQwMDgwMDAwLAoJICAgICAgICAgICAgMHhjODAwMDAwOiAweDQwMDAwMDEwLAoJICAgICAgICAgICAgMHhkODAwMDAwOiAweDg0MDAwLAoJICAgICAgICAgICAgMHhlODAwMDAwOiAweDQwMDg0MDAwLAoJICAgICAgICAgICAgMHhmODAwMDAwOiAweDQwMTAsCgkgICAgICAgICAgICAweDEwMDAwMDAwOiAweDAsCgkgICAgICAgICAgICAweDExMDAwMDAwOiAweDQwMDgwMDEwLAoJICAgICAgICAgICAgMHgxMjAwMDAwMDogMHg0MDAwNDAxMCwKCSAgICAgICAgICAgIDB4MTMwMDAwMDA6IDB4NDAwODQwMDAsCgkgICAgICAgICAgICAweDE0MDAwMDAwOiAweDQwMDgwMDAwLAoJICAgICAgICAgICAgMHgxNTAwMDAwMDogMHgxMCwKCSAgICAgICAgICAgIDB4MTYwMDAwMDA6IDB4ODQwMTAsCgkgICAgICAgICAgICAweDE3MDAwMDAwOiAweDQwMDAsCgkgICAgICAgICAgICAweDE4MDAwMDAwOiAweDQwMTAsCgkgICAgICAgICAgICAweDE5MDAwMDAwOiAweDgwMDAwLAoJICAgICAgICAgICAgMHgxYTAwMDAwMDogMHg4MDAxMCwKCSAgICAgICAgICAgIDB4MWIwMDAwMDA6IDB4NDAwMDAwMTAsCgkgICAgICAgICAgICAweDFjMDAwMDAwOiAweDg0MDAwLAoJICAgICAgICAgICAgMHgxZDAwMDAwMDogMHg0MDAwNDAwMCwKCSAgICAgICAgICAgIDB4MWUwMDAwMDA6IDB4NDAwMDAwMDAsCgkgICAgICAgICAgICAweDFmMDAwMDAwOiAweDQwMDg0MDEwLAoJICAgICAgICAgICAgMHgxMDgwMDAwMDogMHg4NDAxMCwKCSAgICAgICAgICAgIDB4MTE4MDAwMDA6IDB4ODAwMDAsCgkgICAgICAgICAgICAweDEyODAwMDAwOiAweDQwMDgwMDAwLAoJICAgICAgICAgICAgMHgxMzgwMDAwMDogMHg0MDAwLAoJICAgICAgICAgICAgMHgxNDgwMDAwMDogMHg0MDAwNDAwMCwKCSAgICAgICAgICAgIDB4MTU4MDAwMDA6IDB4NDAwODQwMTAsCgkgICAgICAgICAgICAweDE2ODAwMDAwOiAweDEwLAoJICAgICAgICAgICAgMHgxNzgwMDAwMDogMHg0MDAwMDAwMCwKCSAgICAgICAgICAgIDB4MTg4MDAwMDA6IDB4NDAwODQwMDAsCgkgICAgICAgICAgICAweDE5ODAwMDAwOiAweDQwMDAwMDEwLAoJICAgICAgICAgICAgMHgxYTgwMDAwMDogMHg0MDAwNDAxMCwKCSAgICAgICAgICAgIDB4MWI4MDAwMDA6IDB4ODAwMTAsCgkgICAgICAgICAgICAweDFjODAwMDAwOiAweDAsCgkgICAgICAgICAgICAweDFkODAwMDAwOiAweDQwMTAsCgkgICAgICAgICAgICAweDFlODAwMDAwOiAweDQwMDgwMDEwLAoJICAgICAgICAgICAgMHgxZjgwMDAwMDogMHg4NDAwMAoJICAgICAgICB9LAoJICAgICAgICB7CgkgICAgICAgICAgICAweDA6IDB4MTA0LAoJICAgICAgICAgICAgMHgxMDAwMDA6IDB4MCwKCSAgICAgICAgICAgIDB4MjAwMDAwOiAweDQwMDAxMDAsCgkgICAgICAgICAgICAweDMwMDAwMDogMHgxMDEwNCwKCSAgICAgICAgICAgIDB4NDAwMDAwOiAweDEwMDA0LAoJICAgICAgICAgICAgMHg1MDAwMDA6IDB4NDAwMDAwNCwKCSAgICAgICAgICAgIDB4NjAwMDAwOiAweDQwMTAxMDQsCgkgICAgICAgICAgICAweDcwMDAwMDogMHg0MDEwMDAwLAoJICAgICAgICAgICAgMHg4MDAwMDA6IDB4NDAwMDAwMCwKCSAgICAgICAgICAgIDB4OTAwMDAwOiAweDQwMTAxMDAsCgkgICAgICAgICAgICAweGEwMDAwMDogMHgxMDEwMCwKCSAgICAgICAgICAgIDB4YjAwMDAwOiAweDQwMTAwMDQsCgkgICAgICAgICAgICAweGMwMDAwMDogMHg0MDAwMTA0LAoJICAgICAgICAgICAgMHhkMDAwMDA6IDB4MTAwMDAsCgkgICAgICAgICAgICAweGUwMDAwMDogMHg0LAoJICAgICAgICAgICAgMHhmMDAwMDA6IDB4MTAwLAoJICAgICAgICAgICAgMHg4MDAwMDogMHg0MDEwMTAwLAoJICAgICAgICAgICAgMHgxODAwMDA6IDB4NDAxMDAwNCwKCSAgICAgICAgICAgIDB4MjgwMDAwOiAweDAsCgkgICAgICAgICAgICAweDM4MDAwMDogMHg0MDAwMTAwLAoJICAgICAgICAgICAgMHg0ODAwMDA6IDB4NDAwMDAwNCwKCSAgICAgICAgICAgIDB4NTgwMDAwOiAweDEwMDAwLAoJICAgICAgICAgICAgMHg2ODAwMDA6IDB4MTAwMDQsCgkgICAgICAgICAgICAweDc4MDAwMDogMHgxMDQsCgkgICAgICAgICAgICAweDg4MDAwMDogMHg0LAoJICAgICAgICAgICAgMHg5ODAwMDA6IDB4MTAwLAoJICAgICAgICAgICAgMHhhODAwMDA6IDB4NDAxMDAwMCwKCSAgICAgICAgICAgIDB4YjgwMDAwOiAweDEwMTA0LAoJICAgICAgICAgICAgMHhjODAwMDA6IDB4MTAxMDAsCgkgICAgICAgICAgICAweGQ4MDAwMDogMHg0MDAwMTA0LAoJICAgICAgICAgICAgMHhlODAwMDA6IDB4NDAxMDEwNCwKCSAgICAgICAgICAgIDB4ZjgwMDAwOiAweDQwMDAwMDAsCgkgICAgICAgICAgICAweDEwMDAwMDA6IDB4NDAxMDEwMCwKCSAgICAgICAgICAgIDB4MTEwMDAwMDogMHgxMDAwNCwKCSAgICAgICAgICAgIDB4MTIwMDAwMDogMHgxMDAwMCwKCSAgICAgICAgICAgIDB4MTMwMDAwMDogMHg0MDAwMTAwLAoJICAgICAgICAgICAgMHgxNDAwMDAwOiAweDEwMCwKCSAgICAgICAgICAgIDB4MTUwMDAwMDogMHg0MDEwMTA0LAoJICAgICAgICAgICAgMHgxNjAwMDAwOiAweDQwMDAwMDQsCgkgICAgICAgICAgICAweDE3MDAwMDA6IDB4MCwKCSAgICAgICAgICAgIDB4MTgwMDAwMDogMHg0MDAwMTA0LAoJICAgICAgICAgICAgMHgxOTAwMDAwOiAweDQwMDAwMDAsCgkgICAgICAgICAgICAweDFhMDAwMDA6IDB4NCwKCSAgICAgICAgICAgIDB4MWIwMDAwMDogMHgxMDEwMCwKCSAgICAgICAgICAgIDB4MWMwMDAwMDogMHg0MDEwMDAwLAoJICAgICAgICAgICAgMHgxZDAwMDAwOiAweDEwNCwKCSAgICAgICAgICAgIDB4MWUwMDAwMDogMHgxMDEwNCwKCSAgICAgICAgICAgIDB4MWYwMDAwMDogMHg0MDEwMDA0LAoJICAgICAgICAgICAgMHgxMDgwMDAwOiAweDQwMDAwMDAsCgkgICAgICAgICAgICAweDExODAwMDA6IDB4MTA0LAoJICAgICAgICAgICAgMHgxMjgwMDAwOiAweDQwMTAxMDAsCgkgICAgICAgICAgICAweDEzODAwMDA6IDB4MCwKCSAgICAgICAgICAgIDB4MTQ4MDAwMDogMHgxMDAwNCwKCSAgICAgICAgICAgIDB4MTU4MDAwMDogMHg0MDAwMTAwLAoJICAgICAgICAgICAgMHgxNjgwMDAwOiAweDEwMCwKCSAgICAgICAgICAgIDB4MTc4MDAwMDogMHg0MDEwMDA0LAoJICAgICAgICAgICAgMHgxODgwMDAwOiAweDEwMDAwLAoJICAgICAgICAgICAgMHgxOTgwMDAwOiAweDQwMTAxMDQsCgkgICAgICAgICAgICAweDFhODAwMDA6IDB4MTAxMDQsCgkgICAgICAgICAgICAweDFiODAwMDA6IDB4NDAwMDAwNCwKCSAgICAgICAgICAgIDB4MWM4MDAwMDogMHg0MDAwMTA0LAoJICAgICAgICAgICAgMHgxZDgwMDAwOiAweDQwMTAwMDAsCgkgICAgICAgICAgICAweDFlODAwMDA6IDB4NCwKCSAgICAgICAgICAgIDB4MWY4MDAwMDogMHgxMDEwMAoJICAgICAgICB9LAoJICAgICAgICB7CgkgICAgICAgICAgICAweDA6IDB4ODA0MDEwMDAsCgkgICAgICAgICAgICAweDEwMDAwOiAweDgwMDAxMDQwLAoJICAgICAgICAgICAgMHgyMDAwMDogMHg0MDEwNDAsCgkgICAgICAgICAgICAweDMwMDAwOiAweDgwNDAwMDAwLAoJICAgICAgICAgICAgMHg0MDAwMDogMHgwLAoJICAgICAgICAgICAgMHg1MDAwMDogMHg0MDEwMDAsCgkgICAgICAgICAgICAweDYwMDAwOiAweDgwMDAwMDQwLAoJICAgICAgICAgICAgMHg3MDAwMDogMHg0MDAwNDAsCgkgICAgICAgICAgICAweDgwMDAwOiAweDgwMDAwMDAwLAoJICAgICAgICAgICAgMHg5MDAwMDogMHg0MDAwMDAsCgkgICAgICAgICAgICAweGEwMDAwOiAweDQwLAoJICAgICAgICAgICAgMHhiMDAwMDogMHg4MDAwMTAwMCwKCSAgICAgICAgICAgIDB4YzAwMDA6IDB4ODA0MDAwNDAsCgkgICAgICAgICAgICAweGQwMDAwOiAweDEwNDAsCgkgICAgICAgICAgICAweGUwMDAwOiAweDEwMDAsCgkgICAgICAgICAgICAweGYwMDAwOiAweDgwNDAxMDQwLAoJICAgICAgICAgICAgMHg4MDAwOiAweDgwMDAxMDQwLAoJICAgICAgICAgICAgMHgxODAwMDogMHg0MCwKCSAgICAgICAgICAgIDB4MjgwMDA6IDB4ODA0MDAwNDAsCgkgICAgICAgICAgICAweDM4MDAwOiAweDgwMDAxMDAwLAoJICAgICAgICAgICAgMHg0ODAwMDogMHg0MDEwMDAsCgkgICAgICAgICAgICAweDU4MDAwOiAweDgwNDAxMDQwLAoJICAgICAgICAgICAgMHg2ODAwMDogMHgwLAoJICAgICAgICAgICAgMHg3ODAwMDogMHg4MDQwMDAwMCwKCSAgICAgICAgICAgIDB4ODgwMDA6IDB4MTAwMCwKCSAgICAgICAgICAgIDB4OTgwMDA6IDB4ODA0MDEwMDAsCgkgICAgICAgICAgICAweGE4MDAwOiAweDQwMDAwMCwKCSAgICAgICAgICAgIDB4YjgwMDA6IDB4MTA0MCwKCSAgICAgICAgICAgIDB4YzgwMDA6IDB4ODAwMDAwMDAsCgkgICAgICAgICAgICAweGQ4MDAwOiAweDQwMDA0MCwKCSAgICAgICAgICAgIDB4ZTgwMDA6IDB4NDAxMDQwLAoJICAgICAgICAgICAgMHhmODAwMDogMHg4MDAwMDA0MCwKCSAgICAgICAgICAgIDB4MTAwMDAwOiAweDQwMDA0MCwKCSAgICAgICAgICAgIDB4MTEwMDAwOiAweDQwMTAwMCwKCSAgICAgICAgICAgIDB4MTIwMDAwOiAweDgwMDAwMDQwLAoJICAgICAgICAgICAgMHgxMzAwMDA6IDB4MCwKCSAgICAgICAgICAgIDB4MTQwMDAwOiAweDEwNDAsCgkgICAgICAgICAgICAweDE1MDAwMDogMHg4MDQwMDA0MCwKCSAgICAgICAgICAgIDB4MTYwMDAwOiAweDgwNDAxMDAwLAoJICAgICAgICAgICAgMHgxNzAwMDA6IDB4ODAwMDEwNDAsCgkgICAgICAgICAgICAweDE4MDAwMDogMHg4MDQwMTA0MCwKCSAgICAgICAgICAgIDB4MTkwMDAwOiAweDgwMDAwMDAwLAoJICAgICAgICAgICAgMHgxYTAwMDA6IDB4ODA0MDAwMDAsCgkgICAgICAgICAgICAweDFiMDAwMDogMHg0MDEwNDAsCgkgICAgICAgICAgICAweDFjMDAwMDogMHg4MDAwMTAwMCwKCSAgICAgICAgICAgIDB4MWQwMDAwOiAweDQwMDAwMCwKCSAgICAgICAgICAgIDB4MWUwMDAwOiAweDQwLAoJICAgICAgICAgICAgMHgxZjAwMDA6IDB4MTAwMCwKCSAgICAgICAgICAgIDB4MTA4MDAwOiAweDgwNDAwMDAwLAoJICAgICAgICAgICAgMHgxMTgwMDA6IDB4ODA0MDEwNDAsCgkgICAgICAgICAgICAweDEyODAwMDogMHgwLAoJICAgICAgICAgICAgMHgxMzgwMDA6IDB4NDAxMDAwLAoJICAgICAgICAgICAgMHgxNDgwMDA6IDB4NDAwMDQwLAoJICAgICAgICAgICAgMHgxNTgwMDA6IDB4ODAwMDAwMDAsCgkgICAgICAgICAgICAweDE2ODAwMDogMHg4MDAwMTA0MCwKCSAgICAgICAgICAgIDB4MTc4MDAwOiAweDQwLAoJICAgICAgICAgICAgMHgxODgwMDA6IDB4ODAwMDAwNDAsCgkgICAgICAgICAgICAweDE5ODAwMDogMHgxMDAwLAoJICAgICAgICAgICAgMHgxYTgwMDA6IDB4ODAwMDEwMDAsCgkgICAgICAgICAgICAweDFiODAwMDogMHg4MDQwMDA0MCwKCSAgICAgICAgICAgIDB4MWM4MDAwOiAweDEwNDAsCgkgICAgICAgICAgICAweDFkODAwMDogMHg4MDQwMTAwMCwKCSAgICAgICAgICAgIDB4MWU4MDAwOiAweDQwMDAwMCwKCSAgICAgICAgICAgIDB4MWY4MDAwOiAweDQwMTA0MAoJICAgICAgICB9LAoJICAgICAgICB7CgkgICAgICAgICAgICAweDA6IDB4ODAsCgkgICAgICAgICAgICAweDEwMDA6IDB4MTA0MDAwMCwKCSAgICAgICAgICAgIDB4MjAwMDogMHg0MDAwMCwKCSAgICAgICAgICAgIDB4MzAwMDogMHgyMDAwMDAwMCwKCSAgICAgICAgICAgIDB4NDAwMDogMHgyMDA0MDA4MCwKCSAgICAgICAgICAgIDB4NTAwMDogMHgxMDAwMDgwLAoJICAgICAgICAgICAgMHg2MDAwOiAweDIxMDAwMDgwLAoJICAgICAgICAgICAgMHg3MDAwOiAweDQwMDgwLAoJICAgICAgICAgICAgMHg4MDAwOiAweDEwMDAwMDAsCgkgICAgICAgICAgICAweDkwMDA6IDB4MjAwNDAwMDAsCgkgICAgICAgICAgICAweGEwMDA6IDB4MjAwMDAwODAsCgkgICAgICAgICAgICAweGIwMDA6IDB4MjEwNDAwODAsCgkgICAgICAgICAgICAweGMwMDA6IDB4MjEwNDAwMDAsCgkgICAgICAgICAgICAweGQwMDA6IDB4MCwKCSAgICAgICAgICAgIDB4ZTAwMDogMHgxMDQwMDgwLAoJICAgICAgICAgICAgMHhmMDAwOiAweDIxMDAwMDAwLAoJICAgICAgICAgICAgMHg4MDA6IDB4MTA0MDA4MCwKCSAgICAgICAgICAgIDB4MTgwMDogMHgyMTAwMDA4MCwKCSAgICAgICAgICAgIDB4MjgwMDogMHg4MCwKCSAgICAgICAgICAgIDB4MzgwMDogMHgxMDQwMDAwLAoJICAgICAgICAgICAgMHg0ODAwOiAweDQwMDAwLAoJICAgICAgICAgICAgMHg1ODAwOiAweDIwMDQwMDgwLAoJICAgICAgICAgICAgMHg2ODAwOiAweDIxMDQwMDAwLAoJICAgICAgICAgICAgMHg3ODAwOiAweDIwMDAwMDAwLAoJICAgICAgICAgICAgMHg4ODAwOiAweDIwMDQwMDAwLAoJICAgICAgICAgICAgMHg5ODAwOiAweDAsCgkgICAgICAgICAgICAweGE4MDA6IDB4MjEwNDAwODAsCgkgICAgICAgICAgICAweGI4MDA6IDB4MTAwMDA4MCwKCSAgICAgICAgICAgIDB4YzgwMDogMHgyMDAwMDA4MCwKCSAgICAgICAgICAgIDB4ZDgwMDogMHgyMTAwMDAwMCwKCSAgICAgICAgICAgIDB4ZTgwMDogMHgxMDAwMDAwLAoJICAgICAgICAgICAgMHhmODAwOiAweDQwMDgwLAoJICAgICAgICAgICAgMHgxMDAwMDogMHg0MDAwMCwKCSAgICAgICAgICAgIDB4MTEwMDA6IDB4ODAsCgkgICAgICAgICAgICAweDEyMDAwOiAweDIwMDAwMDAwLAoJICAgICAgICAgICAgMHgxMzAwMDogMHgyMTAwMDA4MCwKCSAgICAgICAgICAgIDB4MTQwMDA6IDB4MTAwMDA4MCwKCSAgICAgICAgICAgIDB4MTUwMDA6IDB4MjEwNDAwMDAsCgkgICAgICAgICAgICAweDE2MDAwOiAweDIwMDQwMDgwLAoJICAgICAgICAgICAgMHgxNzAwMDogMHgxMDAwMDAwLAoJICAgICAgICAgICAgMHgxODAwMDogMHgyMTA0MDA4MCwKCSAgICAgICAgICAgIDB4MTkwMDA6IDB4MjEwMDAwMDAsCgkgICAgICAgICAgICAweDFhMDAwOiAweDEwNDAwMDAsCgkgICAgICAgICAgICAweDFiMDAwOiAweDIwMDQwMDAwLAoJICAgICAgICAgICAgMHgxYzAwMDogMHg0MDA4MCwKCSAgICAgICAgICAgIDB4MWQwMDA6IDB4MjAwMDAwODAsCgkgICAgICAgICAgICAweDFlMDAwOiAweDAsCgkgICAgICAgICAgICAweDFmMDAwOiAweDEwNDAwODAsCgkgICAgICAgICAgICAweDEwODAwOiAweDIxMDAwMDgwLAoJICAgICAgICAgICAgMHgxMTgwMDogMHgxMDAwMDAwLAoJICAgICAgICAgICAgMHgxMjgwMDogMHgxMDQwMDAwLAoJICAgICAgICAgICAgMHgxMzgwMDogMHgyMDA0MDA4MCwKCSAgICAgICAgICAgIDB4MTQ4MDA6IDB4MjAwMDAwMDAsCgkgICAgICAgICAgICAweDE1ODAwOiAweDEwNDAwODAsCgkgICAgICAgICAgICAweDE2ODAwOiAweDgwLAoJICAgICAgICAgICAgMHgxNzgwMDogMHgyMTA0MDAwMCwKCSAgICAgICAgICAgIDB4MTg4MDA6IDB4NDAwODAsCgkgICAgICAgICAgICAweDE5ODAwOiAweDIxMDQwMDgwLAoJICAgICAgICAgICAgMHgxYTgwMDogMHgwLAoJICAgICAgICAgICAgMHgxYjgwMDogMHgyMTAwMDAwMCwKCSAgICAgICAgICAgIDB4MWM4MDA6IDB4MTAwMDA4MCwKCSAgICAgICAgICAgIDB4MWQ4MDA6IDB4NDAwMDAsCgkgICAgICAgICAgICAweDFlODAwOiAweDIwMDQwMDAwLAoJICAgICAgICAgICAgMHgxZjgwMDogMHgyMDAwMDA4MAoJICAgICAgICB9LAoJICAgICAgICB7CgkgICAgICAgICAgICAweDA6IDB4MTAwMDAwMDgsCgkgICAgICAgICAgICAweDEwMDogMHgyMDAwLAoJICAgICAgICAgICAgMHgyMDA6IDB4MTAyMDAwMDAsCgkgICAgICAgICAgICAweDMwMDogMHgxMDIwMjAwOCwKCSAgICAgICAgICAgIDB4NDAwOiAweDEwMDAyMDAwLAoJICAgICAgICAgICAgMHg1MDA6IDB4MjAwMDAwLAoJICAgICAgICAgICAgMHg2MDA6IDB4MjAwMDA4LAoJICAgICAgICAgICAgMHg3MDA6IDB4MTAwMDAwMDAsCgkgICAgICAgICAgICAweDgwMDogMHgwLAoJICAgICAgICAgICAgMHg5MDA6IDB4MTAwMDIwMDgsCgkgICAgICAgICAgICAweGEwMDogMHgyMDIwMDAsCgkgICAgICAgICAgICAweGIwMDogMHg4LAoJICAgICAgICAgICAgMHhjMDA6IDB4MTAyMDAwMDgsCgkgICAgICAgICAgICAweGQwMDogMHgyMDIwMDgsCgkgICAgICAgICAgICAweGUwMDogMHgyMDA4LAoJICAgICAgICAgICAgMHhmMDA6IDB4MTAyMDIwMDAsCgkgICAgICAgICAgICAweDgwOiAweDEwMjAwMDAwLAoJICAgICAgICAgICAgMHgxODA6IDB4MTAyMDIwMDgsCgkgICAgICAgICAgICAweDI4MDogMHg4LAoJICAgICAgICAgICAgMHgzODA6IDB4MjAwMDAwLAoJICAgICAgICAgICAgMHg0ODA6IDB4MjAyMDA4LAoJICAgICAgICAgICAgMHg1ODA6IDB4MTAwMDAwMDgsCgkgICAgICAgICAgICAweDY4MDogMHgxMDAwMjAwMCwKCSAgICAgICAgICAgIDB4NzgwOiAweDIwMDgsCgkgICAgICAgICAgICAweDg4MDogMHgyMDAwMDgsCgkgICAgICAgICAgICAweDk4MDogMHgyMDAwLAoJICAgICAgICAgICAgMHhhODA6IDB4MTAwMDIwMDgsCgkgICAgICAgICAgICAweGI4MDogMHgxMDIwMDAwOCwKCSAgICAgICAgICAgIDB4YzgwOiAweDAsCgkgICAgICAgICAgICAweGQ4MDogMHgxMDIwMjAwMCwKCSAgICAgICAgICAgIDB4ZTgwOiAweDIwMjAwMCwKCSAgICAgICAgICAgIDB4ZjgwOiAweDEwMDAwMDAwLAoJICAgICAgICAgICAgMHgxMDAwOiAweDEwMDAyMDAwLAoJICAgICAgICAgICAgMHgxMTAwOiAweDEwMjAwMDA4LAoJICAgICAgICAgICAgMHgxMjAwOiAweDEwMjAyMDA4LAoJICAgICAgICAgICAgMHgxMzAwOiAweDIwMDgsCgkgICAgICAgICAgICAweDE0MDA6IDB4MjAwMDAwLAoJICAgICAgICAgICAgMHgxNTAwOiAweDEwMDAwMDAwLAoJICAgICAgICAgICAgMHgxNjAwOiAweDEwMDAwMDA4LAoJICAgICAgICAgICAgMHgxNzAwOiAweDIwMjAwMCwKCSAgICAgICAgICAgIDB4MTgwMDogMHgyMDIwMDgsCgkgICAgICAgICAgICAweDE5MDA6IDB4MCwKCSAgICAgICAgICAgIDB4MWEwMDogMHg4LAoJICAgICAgICAgICAgMHgxYjAwOiAweDEwMjAwMDAwLAoJICAgICAgICAgICAgMHgxYzAwOiAweDIwMDAsCgkgICAgICAgICAgICAweDFkMDA6IDB4MTAwMDIwMDgsCgkgICAgICAgICAgICAweDFlMDA6IDB4MTAyMDIwMDAsCgkgICAgICAgICAgICAweDFmMDA6IDB4MjAwMDA4LAoJICAgICAgICAgICAgMHgxMDgwOiAweDgsCgkgICAgICAgICAgICAweDExODA6IDB4MjAyMDAwLAoJICAgICAgICAgICAgMHgxMjgwOiAweDIwMDAwMCwKCSAgICAgICAgICAgIDB4MTM4MDogMHgxMDAwMDAwOCwKCSAgICAgICAgICAgIDB4MTQ4MDogMHgxMDAwMjAwMCwKCSAgICAgICAgICAgIDB4MTU4MDogMHgyMDA4LAoJICAgICAgICAgICAgMHgxNjgwOiAweDEwMjAyMDA4LAoJICAgICAgICAgICAgMHgxNzgwOiAweDEwMjAwMDAwLAoJICAgICAgICAgICAgMHgxODgwOiAweDEwMjAyMDAwLAoJICAgICAgICAgICAgMHgxOTgwOiAweDEwMjAwMDA4LAoJICAgICAgICAgICAgMHgxYTgwOiAweDIwMDAsCgkgICAgICAgICAgICAweDFiODA6IDB4MjAyMDA4LAoJICAgICAgICAgICAgMHgxYzgwOiAweDIwMDAwOCwKCSAgICAgICAgICAgIDB4MWQ4MDogMHgwLAoJICAgICAgICAgICAgMHgxZTgwOiAweDEwMDAwMDAwLAoJICAgICAgICAgICAgMHgxZjgwOiAweDEwMDAyMDA4CgkgICAgICAgIH0sCgkgICAgICAgIHsKCSAgICAgICAgICAgIDB4MDogMHgxMDAwMDAsCgkgICAgICAgICAgICAweDEwOiAweDIwMDA0MDEsCgkgICAgICAgICAgICAweDIwOiAweDQwMCwKCSAgICAgICAgICAgIDB4MzA6IDB4MTAwNDAxLAoJICAgICAgICAgICAgMHg0MDogMHgyMTAwNDAxLAoJICAgICAgICAgICAgMHg1MDogMHgwLAoJICAgICAgICAgICAgMHg2MDogMHgxLAoJICAgICAgICAgICAgMHg3MDogMHgyMTAwMDAxLAoJICAgICAgICAgICAgMHg4MDogMHgyMDAwNDAwLAoJICAgICAgICAgICAgMHg5MDogMHgxMDAwMDEsCgkgICAgICAgICAgICAweGEwOiAweDIwMDAwMDEsCgkgICAgICAgICAgICAweGIwOiAweDIxMDA0MDAsCgkgICAgICAgICAgICAweGMwOiAweDIxMDAwMDAsCgkgICAgICAgICAgICAweGQwOiAweDQwMSwKCSAgICAgICAgICAgIDB4ZTA6IDB4MTAwNDAwLAoJICAgICAgICAgICAgMHhmMDogMHgyMDAwMDAwLAoJICAgICAgICAgICAgMHg4OiAweDIxMDAwMDEsCgkgICAgICAgICAgICAweDE4OiAweDAsCgkgICAgICAgICAgICAweDI4OiAweDIwMDA0MDEsCgkgICAgICAgICAgICAweDM4OiAweDIxMDA0MDAsCgkgICAgICAgICAgICAweDQ4OiAweDEwMDAwMCwKCSAgICAgICAgICAgIDB4NTg6IDB4MjAwMDAwMSwKCSAgICAgICAgICAgIDB4Njg6IDB4MjAwMDAwMCwKCSAgICAgICAgICAgIDB4Nzg6IDB4NDAxLAoJICAgICAgICAgICAgMHg4ODogMHgxMDA0MDEsCgkgICAgICAgICAgICAweDk4OiAweDIwMDA0MDAsCgkgICAgICAgICAgICAweGE4OiAweDIxMDAwMDAsCgkgICAgICAgICAgICAweGI4OiAweDEwMDAwMSwKCSAgICAgICAgICAgIDB4Yzg6IDB4NDAwLAoJICAgICAgICAgICAgMHhkODogMHgyMTAwNDAxLAoJICAgICAgICAgICAgMHhlODogMHgxLAoJICAgICAgICAgICAgMHhmODogMHgxMDA0MDAsCgkgICAgICAgICAgICAweDEwMDogMHgyMDAwMDAwLAoJICAgICAgICAgICAgMHgxMTA6IDB4MTAwMDAwLAoJICAgICAgICAgICAgMHgxMjA6IDB4MjAwMDQwMSwKCSAgICAgICAgICAgIDB4MTMwOiAweDIxMDAwMDEsCgkgICAgICAgICAgICAweDE0MDogMHgxMDAwMDEsCgkgICAgICAgICAgICAweDE1MDogMHgyMDAwNDAwLAoJICAgICAgICAgICAgMHgxNjA6IDB4MjEwMDQwMCwKCSAgICAgICAgICAgIDB4MTcwOiAweDEwMDQwMSwKCSAgICAgICAgICAgIDB4MTgwOiAweDQwMSwKCSAgICAgICAgICAgIDB4MTkwOiAweDIxMDA0MDEsCgkgICAgICAgICAgICAweDFhMDogMHgxMDA0MDAsCgkgICAgICAgICAgICAweDFiMDogMHgxLAoJICAgICAgICAgICAgMHgxYzA6IDB4MCwKCSAgICAgICAgICAgIDB4MWQwOiAweDIxMDAwMDAsCgkgICAgICAgICAgICAweDFlMDogMHgyMDAwMDAxLAoJICAgICAgICAgICAgMHgxZjA6IDB4NDAwLAoJICAgICAgICAgICAgMHgxMDg6IDB4MTAwNDAwLAoJICAgICAgICAgICAgMHgxMTg6IDB4MjAwMDQwMSwKCSAgICAgICAgICAgIDB4MTI4OiAweDIxMDAwMDEsCgkgICAgICAgICAgICAweDEzODogMHgxLAoJICAgICAgICAgICAgMHgxNDg6IDB4MjAwMDAwMCwKCSAgICAgICAgICAgIDB4MTU4OiAweDEwMDAwMCwKCSAgICAgICAgICAgIDB4MTY4OiAweDQwMSwKCSAgICAgICAgICAgIDB4MTc4OiAweDIxMDA0MDAsCgkgICAgICAgICAgICAweDE4ODogMHgyMDAwMDAxLAoJICAgICAgICAgICAgMHgxOTg6IDB4MjEwMDAwMCwKCSAgICAgICAgICAgIDB4MWE4OiAweDAsCgkgICAgICAgICAgICAweDFiODogMHgyMTAwNDAxLAoJICAgICAgICAgICAgMHgxYzg6IDB4MTAwNDAxLAoJICAgICAgICAgICAgMHgxZDg6IDB4NDAwLAoJICAgICAgICAgICAgMHgxZTg6IDB4MjAwMDQwMCwKCSAgICAgICAgICAgIDB4MWY4OiAweDEwMDAwMQoJICAgICAgICB9LAoJICAgICAgICB7CgkgICAgICAgICAgICAweDA6IDB4ODAwMDgyMCwKCSAgICAgICAgICAgIDB4MTogMHgyMDAwMCwKCSAgICAgICAgICAgIDB4MjogMHg4MDAwMDAwLAoJICAgICAgICAgICAgMHgzOiAweDIwLAoJICAgICAgICAgICAgMHg0OiAweDIwMDIwLAoJICAgICAgICAgICAgMHg1OiAweDgwMjA4MjAsCgkgICAgICAgICAgICAweDY6IDB4ODAyMDgwMCwKCSAgICAgICAgICAgIDB4NzogMHg4MDAsCgkgICAgICAgICAgICAweDg6IDB4ODAyMDAwMCwKCSAgICAgICAgICAgIDB4OTogMHg4MDAwODAwLAoJICAgICAgICAgICAgMHhhOiAweDIwODAwLAoJICAgICAgICAgICAgMHhiOiAweDgwMjAwMjAsCgkgICAgICAgICAgICAweGM6IDB4ODIwLAoJICAgICAgICAgICAgMHhkOiAweDAsCgkgICAgICAgICAgICAweGU6IDB4ODAwMDAyMCwKCSAgICAgICAgICAgIDB4ZjogMHgyMDgyMCwKCSAgICAgICAgICAgIDB4ODAwMDAwMDA6IDB4ODAwLAoJICAgICAgICAgICAgMHg4MDAwMDAwMTogMHg4MDIwODIwLAoJICAgICAgICAgICAgMHg4MDAwMDAwMjogMHg4MDAwODIwLAoJICAgICAgICAgICAgMHg4MDAwMDAwMzogMHg4MDAwMDAwLAoJICAgICAgICAgICAgMHg4MDAwMDAwNDogMHg4MDIwMDAwLAoJICAgICAgICAgICAgMHg4MDAwMDAwNTogMHgyMDgwMCwKCSAgICAgICAgICAgIDB4ODAwMDAwMDY6IDB4MjA4MjAsCgkgICAgICAgICAgICAweDgwMDAwMDA3OiAweDIwLAoJICAgICAgICAgICAgMHg4MDAwMDAwODogMHg4MDAwMDIwLAoJICAgICAgICAgICAgMHg4MDAwMDAwOTogMHg4MjAsCgkgICAgICAgICAgICAweDgwMDAwMDBhOiAweDIwMDIwLAoJICAgICAgICAgICAgMHg4MDAwMDAwYjogMHg4MDIwODAwLAoJICAgICAgICAgICAgMHg4MDAwMDAwYzogMHgwLAoJICAgICAgICAgICAgMHg4MDAwMDAwZDogMHg4MDIwMDIwLAoJICAgICAgICAgICAgMHg4MDAwMDAwZTogMHg4MDAwODAwLAoJICAgICAgICAgICAgMHg4MDAwMDAwZjogMHgyMDAwMCwKCSAgICAgICAgICAgIDB4MTA6IDB4MjA4MjAsCgkgICAgICAgICAgICAweDExOiAweDgwMjA4MDAsCgkgICAgICAgICAgICAweDEyOiAweDIwLAoJICAgICAgICAgICAgMHgxMzogMHg4MDAsCgkgICAgICAgICAgICAweDE0OiAweDgwMDA4MDAsCgkgICAgICAgICAgICAweDE1OiAweDgwMDAwMjAsCgkgICAgICAgICAgICAweDE2OiAweDgwMjAwMjAsCgkgICAgICAgICAgICAweDE3OiAweDIwMDAwLAoJICAgICAgICAgICAgMHgxODogMHgwLAoJICAgICAgICAgICAgMHgxOTogMHgyMDAyMCwKCSAgICAgICAgICAgIDB4MWE6IDB4ODAyMDAwMCwKCSAgICAgICAgICAgIDB4MWI6IDB4ODAwMDgyMCwKCSAgICAgICAgICAgIDB4MWM6IDB4ODAyMDgyMCwKCSAgICAgICAgICAgIDB4MWQ6IDB4MjA4MDAsCgkgICAgICAgICAgICAweDFlOiAweDgyMCwKCSAgICAgICAgICAgIDB4MWY6IDB4ODAwMDAwMCwKCSAgICAgICAgICAgIDB4ODAwMDAwMTA6IDB4MjAwMDAsCgkgICAgICAgICAgICAweDgwMDAwMDExOiAweDgwMCwKCSAgICAgICAgICAgIDB4ODAwMDAwMTI6IDB4ODAyMDAyMCwKCSAgICAgICAgICAgIDB4ODAwMDAwMTM6IDB4MjA4MjAsCgkgICAgICAgICAgICAweDgwMDAwMDE0OiAweDIwLAoJICAgICAgICAgICAgMHg4MDAwMDAxNTogMHg4MDIwMDAwLAoJICAgICAgICAgICAgMHg4MDAwMDAxNjogMHg4MDAwMDAwLAoJICAgICAgICAgICAgMHg4MDAwMDAxNzogMHg4MDAwODIwLAoJICAgICAgICAgICAgMHg4MDAwMDAxODogMHg4MDIwODIwLAoJICAgICAgICAgICAgMHg4MDAwMDAxOTogMHg4MDAwMDIwLAoJICAgICAgICAgICAgMHg4MDAwMDAxYTogMHg4MDAwODAwLAoJICAgICAgICAgICAgMHg4MDAwMDAxYjogMHgwLAoJICAgICAgICAgICAgMHg4MDAwMDAxYzogMHgyMDgwMCwKCSAgICAgICAgICAgIDB4ODAwMDAwMWQ6IDB4ODIwLAoJICAgICAgICAgICAgMHg4MDAwMDAxZTogMHgyMDAyMCwKCSAgICAgICAgICAgIDB4ODAwMDAwMWY6IDB4ODAyMDgwMAoJICAgICAgICB9CgkgICAgXTsKCgkgICAgLy8gTWFza3MgdGhhdCBzZWxlY3QgdGhlIFNCT1ggaW5wdXQKCSAgICB2YXIgU0JPWF9NQVNLID0gWwoJICAgICAgICAweGY4MDAwMDAxLCAweDFmODAwMDAwLCAweDAxZjgwMDAwLCAweDAwMWY4MDAwLAoJICAgICAgICAweDAwMDFmODAwLCAweDAwMDAxZjgwLCAweDAwMDAwMWY4LCAweDgwMDAwMDFmCgkgICAgXTsKCgkgICAgLyoqCgkgICAgICogREVTIGJsb2NrIGNpcGhlciBhbGdvcml0aG0uCgkgICAgICovCgkgICAgdmFyIERFUyA9IENfYWxnby5ERVMgPSBCbG9ja0NpcGhlci5leHRlbmQoewoJICAgICAgICBfZG9SZXNldDogZnVuY3Rpb24gKCkgewoJICAgICAgICAgICAgLy8gU2hvcnRjdXRzCgkgICAgICAgICAgICB2YXIga2V5ID0gdGhpcy5fa2V5OwoJICAgICAgICAgICAgdmFyIGtleVdvcmRzID0ga2V5LndvcmRzOwoKCSAgICAgICAgICAgIC8vIFNlbGVjdCA1NiBiaXRzIGFjY29yZGluZyB0byBQQzEKCSAgICAgICAgICAgIHZhciBrZXlCaXRzID0gW107CgkgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDU2OyBpKyspIHsKCSAgICAgICAgICAgICAgICB2YXIga2V5Qml0UG9zID0gUEMxW2ldIC0gMTsKCSAgICAgICAgICAgICAgICBrZXlCaXRzW2ldID0gKGtleVdvcmRzW2tleUJpdFBvcyA+Pj4gNV0gPj4+ICgzMSAtIGtleUJpdFBvcyAlIDMyKSkgJiAxOwoJICAgICAgICAgICAgfQoKCSAgICAgICAgICAgIC8vIEFzc2VtYmxlIDE2IHN1YmtleXMKCSAgICAgICAgICAgIHZhciBzdWJLZXlzID0gdGhpcy5fc3ViS2V5cyA9IFtdOwoJICAgICAgICAgICAgZm9yICh2YXIgblN1YktleSA9IDA7IG5TdWJLZXkgPCAxNjsgblN1YktleSsrKSB7CgkgICAgICAgICAgICAgICAgLy8gQ3JlYXRlIHN1YmtleQoJICAgICAgICAgICAgICAgIHZhciBzdWJLZXkgPSBzdWJLZXlzW25TdWJLZXldID0gW107CgoJICAgICAgICAgICAgICAgIC8vIFNob3J0Y3V0CgkgICAgICAgICAgICAgICAgdmFyIGJpdFNoaWZ0ID0gQklUX1NISUZUU1tuU3ViS2V5XTsKCgkgICAgICAgICAgICAgICAgLy8gU2VsZWN0IDQ4IGJpdHMgYWNjb3JkaW5nIHRvIFBDMgoJICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMjQ7IGkrKykgewoJICAgICAgICAgICAgICAgICAgICAvLyBTZWxlY3QgZnJvbSB0aGUgbGVmdCAyOCBrZXkgYml0cwoJICAgICAgICAgICAgICAgICAgICBzdWJLZXlbKGkgLyA2KSB8IDBdIHw9IGtleUJpdHNbKChQQzJbaV0gLSAxKSArIGJpdFNoaWZ0KSAlIDI4XSA8PCAoMzEgLSBpICUgNik7CgoJICAgICAgICAgICAgICAgICAgICAvLyBTZWxlY3QgZnJvbSB0aGUgcmlnaHQgMjgga2V5IGJpdHMKCSAgICAgICAgICAgICAgICAgICAgc3ViS2V5WzQgKyAoKGkgLyA2KSB8IDApXSB8PSBrZXlCaXRzWzI4ICsgKCgoUEMyW2kgKyAyNF0gLSAxKSArIGJpdFNoaWZ0KSAlIDI4KV0gPDwgKDMxIC0gaSAlIDYpOwoJICAgICAgICAgICAgICAgIH0KCgkgICAgICAgICAgICAgICAgLy8gU2luY2UgZWFjaCBzdWJrZXkgaXMgYXBwbGllZCB0byBhbiBleHBhbmRlZCAzMi1iaXQgaW5wdXQsCgkgICAgICAgICAgICAgICAgLy8gdGhlIHN1YmtleSBjYW4gYmUgYnJva2VuIGludG8gOCB2YWx1ZXMgc2NhbGVkIHRvIDMyLWJpdHMsCgkgICAgICAgICAgICAgICAgLy8gd2hpY2ggYWxsb3dzIHRoZSBrZXkgdG8gYmUgdXNlZCB3aXRob3V0IGV4cGFuc2lvbgoJICAgICAgICAgICAgICAgIHN1YktleVswXSA9IChzdWJLZXlbMF0gPDwgMSkgfCAoc3ViS2V5WzBdID4+PiAzMSk7CgkgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCA3OyBpKyspIHsKCSAgICAgICAgICAgICAgICAgICAgc3ViS2V5W2ldID0gc3ViS2V5W2ldID4+PiAoKGkgLSAxKSAqIDQgKyAzKTsKCSAgICAgICAgICAgICAgICB9CgkgICAgICAgICAgICAgICAgc3ViS2V5WzddID0gKHN1YktleVs3XSA8PCA1KSB8IChzdWJLZXlbN10gPj4+IDI3KTsKCSAgICAgICAgICAgIH0KCgkgICAgICAgICAgICAvLyBDb21wdXRlIGludmVyc2Ugc3Via2V5cwoJICAgICAgICAgICAgdmFyIGludlN1YktleXMgPSB0aGlzLl9pbnZTdWJLZXlzID0gW107CgkgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDE2OyBpKyspIHsKCSAgICAgICAgICAgICAgICBpbnZTdWJLZXlzW2ldID0gc3ViS2V5c1sxNSAtIGldOwoJICAgICAgICAgICAgfQoJICAgICAgICB9LAoKCSAgICAgICAgZW5jcnlwdEJsb2NrOiBmdW5jdGlvbiAoTSwgb2Zmc2V0KSB7CgkgICAgICAgICAgICB0aGlzLl9kb0NyeXB0QmxvY2soTSwgb2Zmc2V0LCB0aGlzLl9zdWJLZXlzKTsKCSAgICAgICAgfSwKCgkgICAgICAgIGRlY3J5cHRCbG9jazogZnVuY3Rpb24gKE0sIG9mZnNldCkgewoJICAgICAgICAgICAgdGhpcy5fZG9DcnlwdEJsb2NrKE0sIG9mZnNldCwgdGhpcy5faW52U3ViS2V5cyk7CgkgICAgICAgIH0sCgoJICAgICAgICBfZG9DcnlwdEJsb2NrOiBmdW5jdGlvbiAoTSwgb2Zmc2V0LCBzdWJLZXlzKSB7CgkgICAgICAgICAgICAvLyBHZXQgaW5wdXQKCSAgICAgICAgICAgIHRoaXMuX2xCbG9jayA9IE1bb2Zmc2V0XTsKCSAgICAgICAgICAgIHRoaXMuX3JCbG9jayA9IE1bb2Zmc2V0ICsgMV07CgoJICAgICAgICAgICAgLy8gSW5pdGlhbCBwZXJtdXRhdGlvbgoJICAgICAgICAgICAgZXhjaGFuZ2VMUi5jYWxsKHRoaXMsIDQsICAweDBmMGYwZjBmKTsKCSAgICAgICAgICAgIGV4Y2hhbmdlTFIuY2FsbCh0aGlzLCAxNiwgMHgwMDAwZmZmZik7CgkgICAgICAgICAgICBleGNoYW5nZVJMLmNhbGwodGhpcywgMiwgIDB4MzMzMzMzMzMpOwoJICAgICAgICAgICAgZXhjaGFuZ2VSTC5jYWxsKHRoaXMsIDgsICAweDAwZmYwMGZmKTsKCSAgICAgICAgICAgIGV4Y2hhbmdlTFIuY2FsbCh0aGlzLCAxLCAgMHg1NTU1NTU1NSk7CgoJICAgICAgICAgICAgLy8gUm91bmRzCgkgICAgICAgICAgICBmb3IgKHZhciByb3VuZCA9IDA7IHJvdW5kIDwgMTY7IHJvdW5kKyspIHsKCSAgICAgICAgICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgICAgICAgICB2YXIgc3ViS2V5ID0gc3ViS2V5c1tyb3VuZF07CgkgICAgICAgICAgICAgICAgdmFyIGxCbG9jayA9IHRoaXMuX2xCbG9jazsKCSAgICAgICAgICAgICAgICB2YXIgckJsb2NrID0gdGhpcy5fckJsb2NrOwoKCSAgICAgICAgICAgICAgICAvLyBGZWlzdGVsIGZ1bmN0aW9uCgkgICAgICAgICAgICAgICAgdmFyIGYgPSAwOwoJICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgODsgaSsrKSB7CgkgICAgICAgICAgICAgICAgICAgIGYgfD0gU0JPWF9QW2ldWygockJsb2NrIF4gc3ViS2V5W2ldKSAmIFNCT1hfTUFTS1tpXSkgPj4+IDBdOwoJICAgICAgICAgICAgICAgIH0KCSAgICAgICAgICAgICAgICB0aGlzLl9sQmxvY2sgPSByQmxvY2s7CgkgICAgICAgICAgICAgICAgdGhpcy5fckJsb2NrID0gbEJsb2NrIF4gZjsKCSAgICAgICAgICAgIH0KCgkgICAgICAgICAgICAvLyBVbmRvIHN3YXAgZnJvbSBsYXN0IHJvdW5kCgkgICAgICAgICAgICB2YXIgdCA9IHRoaXMuX2xCbG9jazsKCSAgICAgICAgICAgIHRoaXMuX2xCbG9jayA9IHRoaXMuX3JCbG9jazsKCSAgICAgICAgICAgIHRoaXMuX3JCbG9jayA9IHQ7CgoJICAgICAgICAgICAgLy8gRmluYWwgcGVybXV0YXRpb24KCSAgICAgICAgICAgIGV4Y2hhbmdlTFIuY2FsbCh0aGlzLCAxLCAgMHg1NTU1NTU1NSk7CgkgICAgICAgICAgICBleGNoYW5nZVJMLmNhbGwodGhpcywgOCwgIDB4MDBmZjAwZmYpOwoJICAgICAgICAgICAgZXhjaGFuZ2VSTC5jYWxsKHRoaXMsIDIsICAweDMzMzMzMzMzKTsKCSAgICAgICAgICAgIGV4Y2hhbmdlTFIuY2FsbCh0aGlzLCAxNiwgMHgwMDAwZmZmZik7CgkgICAgICAgICAgICBleGNoYW5nZUxSLmNhbGwodGhpcywgNCwgIDB4MGYwZjBmMGYpOwoKCSAgICAgICAgICAgIC8vIFNldCBvdXRwdXQKCSAgICAgICAgICAgIE1bb2Zmc2V0XSA9IHRoaXMuX2xCbG9jazsKCSAgICAgICAgICAgIE1bb2Zmc2V0ICsgMV0gPSB0aGlzLl9yQmxvY2s7CgkgICAgICAgIH0sCgoJICAgICAgICBrZXlTaXplOiA2NC8zMiwKCgkgICAgICAgIGl2U2l6ZTogNjQvMzIsCgoJICAgICAgICBibG9ja1NpemU6IDY0LzMyCgkgICAgfSk7CgoJICAgIC8vIFN3YXAgYml0cyBhY3Jvc3MgdGhlIGxlZnQgYW5kIHJpZ2h0IHdvcmRzCgkgICAgZnVuY3Rpb24gZXhjaGFuZ2VMUihvZmZzZXQsIG1hc2spIHsKCSAgICAgICAgdmFyIHQgPSAoKHRoaXMuX2xCbG9jayA+Pj4gb2Zmc2V0KSBeIHRoaXMuX3JCbG9jaykgJiBtYXNrOwoJICAgICAgICB0aGlzLl9yQmxvY2sgXj0gdDsKCSAgICAgICAgdGhpcy5fbEJsb2NrIF49IHQgPDwgb2Zmc2V0OwoJICAgIH0KCgkgICAgZnVuY3Rpb24gZXhjaGFuZ2VSTChvZmZzZXQsIG1hc2spIHsKCSAgICAgICAgdmFyIHQgPSAoKHRoaXMuX3JCbG9jayA+Pj4gb2Zmc2V0KSBeIHRoaXMuX2xCbG9jaykgJiBtYXNrOwoJICAgICAgICB0aGlzLl9sQmxvY2sgXj0gdDsKCSAgICAgICAgdGhpcy5fckJsb2NrIF49IHQgPDwgb2Zmc2V0OwoJICAgIH0KCgkgICAgLyoqCgkgICAgICogU2hvcnRjdXQgZnVuY3Rpb25zIHRvIHRoZSBjaXBoZXIncyBvYmplY3QgaW50ZXJmYWNlLgoJICAgICAqCgkgICAgICogQGV4YW1wbGUKCSAgICAgKgoJICAgICAqICAgICB2YXIgY2lwaGVydGV4dCA9IENyeXB0b0pTLkRFUy5lbmNyeXB0KG1lc3NhZ2UsIGtleSwgY2ZnKTsKCSAgICAgKiAgICAgdmFyIHBsYWludGV4dCAgPSBDcnlwdG9KUy5ERVMuZGVjcnlwdChjaXBoZXJ0ZXh0LCBrZXksIGNmZyk7CgkgICAgICovCgkgICAgQy5ERVMgPSBCbG9ja0NpcGhlci5fY3JlYXRlSGVscGVyKERFUyk7CgoJICAgIC8qKgoJICAgICAqIFRyaXBsZS1ERVMgYmxvY2sgY2lwaGVyIGFsZ29yaXRobS4KCSAgICAgKi8KCSAgICB2YXIgVHJpcGxlREVTID0gQ19hbGdvLlRyaXBsZURFUyA9IEJsb2NrQ2lwaGVyLmV4dGVuZCh7CgkgICAgICAgIF9kb1Jlc2V0OiBmdW5jdGlvbiAoKSB7CgkgICAgICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgICAgIHZhciBrZXkgPSB0aGlzLl9rZXk7CgkgICAgICAgICAgICB2YXIga2V5V29yZHMgPSBrZXkud29yZHM7CgoJICAgICAgICAgICAgLy8gQ3JlYXRlIERFUyBpbnN0YW5jZXMKCSAgICAgICAgICAgIHRoaXMuX2RlczEgPSBERVMuY3JlYXRlRW5jcnlwdG9yKFdvcmRBcnJheS5jcmVhdGUoa2V5V29yZHMuc2xpY2UoMCwgMikpKTsKCSAgICAgICAgICAgIHRoaXMuX2RlczIgPSBERVMuY3JlYXRlRW5jcnlwdG9yKFdvcmRBcnJheS5jcmVhdGUoa2V5V29yZHMuc2xpY2UoMiwgNCkpKTsKCSAgICAgICAgICAgIHRoaXMuX2RlczMgPSBERVMuY3JlYXRlRW5jcnlwdG9yKFdvcmRBcnJheS5jcmVhdGUoa2V5V29yZHMuc2xpY2UoNCwgNikpKTsKCSAgICAgICAgfSwKCgkgICAgICAgIGVuY3J5cHRCbG9jazogZnVuY3Rpb24gKE0sIG9mZnNldCkgewoJICAgICAgICAgICAgdGhpcy5fZGVzMS5lbmNyeXB0QmxvY2soTSwgb2Zmc2V0KTsKCSAgICAgICAgICAgIHRoaXMuX2RlczIuZGVjcnlwdEJsb2NrKE0sIG9mZnNldCk7CgkgICAgICAgICAgICB0aGlzLl9kZXMzLmVuY3J5cHRCbG9jayhNLCBvZmZzZXQpOwoJICAgICAgICB9LAoKCSAgICAgICAgZGVjcnlwdEJsb2NrOiBmdW5jdGlvbiAoTSwgb2Zmc2V0KSB7CgkgICAgICAgICAgICB0aGlzLl9kZXMzLmRlY3J5cHRCbG9jayhNLCBvZmZzZXQpOwoJICAgICAgICAgICAgdGhpcy5fZGVzMi5lbmNyeXB0QmxvY2soTSwgb2Zmc2V0KTsKCSAgICAgICAgICAgIHRoaXMuX2RlczEuZGVjcnlwdEJsb2NrKE0sIG9mZnNldCk7CgkgICAgICAgIH0sCgoJICAgICAgICBrZXlTaXplOiAxOTIvMzIsCgoJICAgICAgICBpdlNpemU6IDY0LzMyLAoKCSAgICAgICAgYmxvY2tTaXplOiA2NC8zMgoJICAgIH0pOwoKCSAgICAvKioKCSAgICAgKiBTaG9ydGN1dCBmdW5jdGlvbnMgdG8gdGhlIGNpcGhlcidzIG9iamVjdCBpbnRlcmZhY2UuCgkgICAgICoKCSAgICAgKiBAZXhhbXBsZQoJICAgICAqCgkgICAgICogICAgIHZhciBjaXBoZXJ0ZXh0ID0gQ3J5cHRvSlMuVHJpcGxlREVTLmVuY3J5cHQobWVzc2FnZSwga2V5LCBjZmcpOwoJICAgICAqICAgICB2YXIgcGxhaW50ZXh0ICA9IENyeXB0b0pTLlRyaXBsZURFUy5kZWNyeXB0KGNpcGhlcnRleHQsIGtleSwgY2ZnKTsKCSAgICAgKi8KCSAgICBDLlRyaXBsZURFUyA9IEJsb2NrQ2lwaGVyLl9jcmVhdGVIZWxwZXIoVHJpcGxlREVTKTsKCX0oKSk7CgoKCShmdW5jdGlvbiAoKSB7CgkgICAgLy8gU2hvcnRjdXRzCgkgICAgdmFyIEMgPSBDcnlwdG9KUzsKCSAgICB2YXIgQ19saWIgPSBDLmxpYjsKCSAgICB2YXIgU3RyZWFtQ2lwaGVyID0gQ19saWIuU3RyZWFtQ2lwaGVyOwoJICAgIHZhciBDX2FsZ28gPSBDLmFsZ287CgoJICAgIC8qKgoJICAgICAqIFJDNCBzdHJlYW0gY2lwaGVyIGFsZ29yaXRobS4KCSAgICAgKi8KCSAgICB2YXIgUkM0ID0gQ19hbGdvLlJDNCA9IFN0cmVhbUNpcGhlci5leHRlbmQoewoJICAgICAgICBfZG9SZXNldDogZnVuY3Rpb24gKCkgewoJICAgICAgICAgICAgLy8gU2hvcnRjdXRzCgkgICAgICAgICAgICB2YXIga2V5ID0gdGhpcy5fa2V5OwoJICAgICAgICAgICAgdmFyIGtleVdvcmRzID0ga2V5LndvcmRzOwoJICAgICAgICAgICAgdmFyIGtleVNpZ0J5dGVzID0ga2V5LnNpZ0J5dGVzOwoKCSAgICAgICAgICAgIC8vIEluaXQgc2JveAoJICAgICAgICAgICAgdmFyIFMgPSB0aGlzLl9TID0gW107CgkgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDI1NjsgaSsrKSB7CgkgICAgICAgICAgICAgICAgU1tpXSA9IGk7CgkgICAgICAgICAgICB9CgoJICAgICAgICAgICAgLy8gS2V5IHNldHVwCgkgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgaiA9IDA7IGkgPCAyNTY7IGkrKykgewoJICAgICAgICAgICAgICAgIHZhciBrZXlCeXRlSW5kZXggPSBpICUga2V5U2lnQnl0ZXM7CgkgICAgICAgICAgICAgICAgdmFyIGtleUJ5dGUgPSAoa2V5V29yZHNba2V5Qnl0ZUluZGV4ID4+PiAyXSA+Pj4gKDI0IC0gKGtleUJ5dGVJbmRleCAlIDQpICogOCkpICYgMHhmZjsKCgkgICAgICAgICAgICAgICAgaiA9IChqICsgU1tpXSArIGtleUJ5dGUpICUgMjU2OwoKCSAgICAgICAgICAgICAgICAvLyBTd2FwCgkgICAgICAgICAgICAgICAgdmFyIHQgPSBTW2ldOwoJICAgICAgICAgICAgICAgIFNbaV0gPSBTW2pdOwoJICAgICAgICAgICAgICAgIFNbal0gPSB0OwoJICAgICAgICAgICAgfQoKCSAgICAgICAgICAgIC8vIENvdW50ZXJzCgkgICAgICAgICAgICB0aGlzLl9pID0gdGhpcy5faiA9IDA7CgkgICAgICAgIH0sCgoJICAgICAgICBfZG9Qcm9jZXNzQmxvY2s6IGZ1bmN0aW9uIChNLCBvZmZzZXQpIHsKCSAgICAgICAgICAgIE1bb2Zmc2V0XSBePSBnZW5lcmF0ZUtleXN0cmVhbVdvcmQuY2FsbCh0aGlzKTsKCSAgICAgICAgfSwKCgkgICAgICAgIGtleVNpemU6IDI1Ni8zMiwKCgkgICAgICAgIGl2U2l6ZTogMAoJICAgIH0pOwoKCSAgICBmdW5jdGlvbiBnZW5lcmF0ZUtleXN0cmVhbVdvcmQoKSB7CgkgICAgICAgIC8vIFNob3J0Y3V0cwoJICAgICAgICB2YXIgUyA9IHRoaXMuX1M7CgkgICAgICAgIHZhciBpID0gdGhpcy5faTsKCSAgICAgICAgdmFyIGogPSB0aGlzLl9qOwoKCSAgICAgICAgLy8gR2VuZXJhdGUga2V5c3RyZWFtIHdvcmQKCSAgICAgICAgdmFyIGtleXN0cmVhbVdvcmQgPSAwOwoJICAgICAgICBmb3IgKHZhciBuID0gMDsgbiA8IDQ7IG4rKykgewoJICAgICAgICAgICAgaSA9IChpICsgMSkgJSAyNTY7CgkgICAgICAgICAgICBqID0gKGogKyBTW2ldKSAlIDI1NjsKCgkgICAgICAgICAgICAvLyBTd2FwCgkgICAgICAgICAgICB2YXIgdCA9IFNbaV07CgkgICAgICAgICAgICBTW2ldID0gU1tqXTsKCSAgICAgICAgICAgIFNbal0gPSB0OwoKCSAgICAgICAgICAgIGtleXN0cmVhbVdvcmQgfD0gU1soU1tpXSArIFNbal0pICUgMjU2XSA8PCAoMjQgLSBuICogOCk7CgkgICAgICAgIH0KCgkgICAgICAgIC8vIFVwZGF0ZSBjb3VudGVycwoJICAgICAgICB0aGlzLl9pID0gaTsKCSAgICAgICAgdGhpcy5faiA9IGo7CgoJICAgICAgICByZXR1cm4ga2V5c3RyZWFtV29yZDsKCSAgICB9CgoJICAgIC8qKgoJICAgICAqIFNob3J0Y3V0IGZ1bmN0aW9ucyB0byB0aGUgY2lwaGVyJ3Mgb2JqZWN0IGludGVyZmFjZS4KCSAgICAgKgoJICAgICAqIEBleGFtcGxlCgkgICAgICoKCSAgICAgKiAgICAgdmFyIGNpcGhlcnRleHQgPSBDcnlwdG9KUy5SQzQuZW5jcnlwdChtZXNzYWdlLCBrZXksIGNmZyk7CgkgICAgICogICAgIHZhciBwbGFpbnRleHQgID0gQ3J5cHRvSlMuUkM0LmRlY3J5cHQoY2lwaGVydGV4dCwga2V5LCBjZmcpOwoJICAgICAqLwoJICAgIEMuUkM0ID0gU3RyZWFtQ2lwaGVyLl9jcmVhdGVIZWxwZXIoUkM0KTsKCgkgICAgLyoqCgkgICAgICogTW9kaWZpZWQgUkM0IHN0cmVhbSBjaXBoZXIgYWxnb3JpdGhtLgoJICAgICAqLwoJICAgIHZhciBSQzREcm9wID0gQ19hbGdvLlJDNERyb3AgPSBSQzQuZXh0ZW5kKHsKCSAgICAgICAgLyoqCgkgICAgICAgICAqIENvbmZpZ3VyYXRpb24gb3B0aW9ucy4KCSAgICAgICAgICoKCSAgICAgICAgICogQHByb3BlcnR5IHtudW1iZXJ9IGRyb3AgVGhlIG51bWJlciBvZiBrZXlzdHJlYW0gd29yZHMgdG8gZHJvcC4gRGVmYXVsdCAxOTIKCSAgICAgICAgICovCgkgICAgICAgIGNmZzogUkM0LmNmZy5leHRlbmQoewoJICAgICAgICAgICAgZHJvcDogMTkyCgkgICAgICAgIH0pLAoKCSAgICAgICAgX2RvUmVzZXQ6IGZ1bmN0aW9uICgpIHsKCSAgICAgICAgICAgIFJDNC5fZG9SZXNldC5jYWxsKHRoaXMpOwoKCSAgICAgICAgICAgIC8vIERyb3AKCSAgICAgICAgICAgIGZvciAodmFyIGkgPSB0aGlzLmNmZy5kcm9wOyBpID4gMDsgaS0tKSB7CgkgICAgICAgICAgICAgICAgZ2VuZXJhdGVLZXlzdHJlYW1Xb3JkLmNhbGwodGhpcyk7CgkgICAgICAgICAgICB9CgkgICAgICAgIH0KCSAgICB9KTsKCgkgICAgLyoqCgkgICAgICogU2hvcnRjdXQgZnVuY3Rpb25zIHRvIHRoZSBjaXBoZXIncyBvYmplY3QgaW50ZXJmYWNlLgoJICAgICAqCgkgICAgICogQGV4YW1wbGUKCSAgICAgKgoJICAgICAqICAgICB2YXIgY2lwaGVydGV4dCA9IENyeXB0b0pTLlJDNERyb3AuZW5jcnlwdChtZXNzYWdlLCBrZXksIGNmZyk7CgkgICAgICogICAgIHZhciBwbGFpbnRleHQgID0gQ3J5cHRvSlMuUkM0RHJvcC5kZWNyeXB0KGNpcGhlcnRleHQsIGtleSwgY2ZnKTsKCSAgICAgKi8KCSAgICBDLlJDNERyb3AgPSBTdHJlYW1DaXBoZXIuX2NyZWF0ZUhlbHBlcihSQzREcm9wKTsKCX0oKSk7CgoKCS8qKiBAcHJlc2VydmUKCSAqIENvdW50ZXIgYmxvY2sgbW9kZSBjb21wYXRpYmxlIHdpdGggIERyIEJyaWFuIEdsYWRtYW4gZmlsZWVuYy5jCgkgKiBkZXJpdmVkIGZyb20gQ3J5cHRvSlMubW9kZS5DVFIKCSAqIEphbiBIcnVieSBqaHJ1Ynkud2ViQGdtYWlsLmNvbQoJICovCglDcnlwdG9KUy5tb2RlLkNUUkdsYWRtYW4gPSAoZnVuY3Rpb24gKCkgewoJICAgIHZhciBDVFJHbGFkbWFuID0gQ3J5cHRvSlMubGliLkJsb2NrQ2lwaGVyTW9kZS5leHRlbmQoKTsKCgkJZnVuY3Rpb24gaW5jV29yZCh3b3JkKQoJCXsKCQkJaWYgKCgod29yZCA+PiAyNCkgJiAweGZmKSA9PT0gMHhmZikgeyAvL292ZXJmbG93CgkJCXZhciBiMSA9ICh3b3JkID4+IDE2KSYweGZmOwoJCQl2YXIgYjIgPSAod29yZCA+PiA4KSYweGZmOwoJCQl2YXIgYjMgPSB3b3JkICYgMHhmZjsKCgkJCWlmIChiMSA9PT0gMHhmZikgLy8gb3ZlcmZsb3cgYjEKCQkJewoJCQliMSA9IDA7CgkJCWlmIChiMiA9PT0gMHhmZikKCQkJewoJCQkJYjIgPSAwOwoJCQkJaWYgKGIzID09PSAweGZmKQoJCQkJewoJCQkJCWIzID0gMDsKCQkJCX0KCQkJCWVsc2UKCQkJCXsKCQkJCQkrK2IzOwoJCQkJfQoJCQl9CgkJCWVsc2UKCQkJewoJCQkJKytiMjsKCQkJfQoJCQl9CgkJCWVsc2UKCQkJewoJCQkrK2IxOwoJCQl9CgoJCQl3b3JkID0gMDsKCQkJd29yZCArPSAoYjEgPDwgMTYpOwoJCQl3b3JkICs9IChiMiA8PCA4KTsKCQkJd29yZCArPSBiMzsKCQkJfQoJCQllbHNlCgkJCXsKCQkJd29yZCArPSAoMHgwMSA8PCAyNCk7CgkJCX0KCQkJcmV0dXJuIHdvcmQ7CgkJfQoKCQlmdW5jdGlvbiBpbmNDb3VudGVyKGNvdW50ZXIpCgkJewoJCQlpZiAoKGNvdW50ZXJbMF0gPSBpbmNXb3JkKGNvdW50ZXJbMF0pKSA9PT0gMCkKCQkJewoJCQkJLy8gZW5jcl9kYXRhIGluIGZpbGVlbmMuYyBmcm9tICBEciBCcmlhbiBHbGFkbWFuJ3MgY291bnRzIG9ubHkgd2l0aCBEV09SRCBqIDwgOAoJCQkJY291bnRlclsxXSA9IGluY1dvcmQoY291bnRlclsxXSk7CgkJCX0KCQkJcmV0dXJuIGNvdW50ZXI7CgkJfQoKCSAgICB2YXIgRW5jcnlwdG9yID0gQ1RSR2xhZG1hbi5FbmNyeXB0b3IgPSBDVFJHbGFkbWFuLmV4dGVuZCh7CgkgICAgICAgIHByb2Nlc3NCbG9jazogZnVuY3Rpb24gKHdvcmRzLCBvZmZzZXQpIHsKCSAgICAgICAgICAgIC8vIFNob3J0Y3V0cwoJICAgICAgICAgICAgdmFyIGNpcGhlciA9IHRoaXMuX2NpcGhlcgoJICAgICAgICAgICAgdmFyIGJsb2NrU2l6ZSA9IGNpcGhlci5ibG9ja1NpemU7CgkgICAgICAgICAgICB2YXIgaXYgPSB0aGlzLl9pdjsKCSAgICAgICAgICAgIHZhciBjb3VudGVyID0gdGhpcy5fY291bnRlcjsKCgkgICAgICAgICAgICAvLyBHZW5lcmF0ZSBrZXlzdHJlYW0KCSAgICAgICAgICAgIGlmIChpdikgewoJICAgICAgICAgICAgICAgIGNvdW50ZXIgPSB0aGlzLl9jb3VudGVyID0gaXYuc2xpY2UoMCk7CgoJICAgICAgICAgICAgICAgIC8vIFJlbW92ZSBJViBmb3Igc3Vic2VxdWVudCBibG9ja3MKCSAgICAgICAgICAgICAgICB0aGlzLl9pdiA9IHVuZGVmaW5lZDsKCSAgICAgICAgICAgIH0KCgkJCQlpbmNDb3VudGVyKGNvdW50ZXIpOwoKCQkJCXZhciBrZXlzdHJlYW0gPSBjb3VudGVyLnNsaWNlKDApOwoJICAgICAgICAgICAgY2lwaGVyLmVuY3J5cHRCbG9jayhrZXlzdHJlYW0sIDApOwoKCSAgICAgICAgICAgIC8vIEVuY3J5cHQKCSAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYmxvY2tTaXplOyBpKyspIHsKCSAgICAgICAgICAgICAgICB3b3Jkc1tvZmZzZXQgKyBpXSBePSBrZXlzdHJlYW1baV07CgkgICAgICAgICAgICB9CgkgICAgICAgIH0KCSAgICB9KTsKCgkgICAgQ1RSR2xhZG1hbi5EZWNyeXB0b3IgPSBFbmNyeXB0b3I7CgoJICAgIHJldHVybiBDVFJHbGFkbWFuOwoJfSgpKTsKCgoKCgkoZnVuY3Rpb24gKCkgewoJICAgIC8vIFNob3J0Y3V0cwoJICAgIHZhciBDID0gQ3J5cHRvSlM7CgkgICAgdmFyIENfbGliID0gQy5saWI7CgkgICAgdmFyIFN0cmVhbUNpcGhlciA9IENfbGliLlN0cmVhbUNpcGhlcjsKCSAgICB2YXIgQ19hbGdvID0gQy5hbGdvOwoKCSAgICAvLyBSZXVzYWJsZSBvYmplY3RzCgkgICAgdmFyIFMgID0gW107CgkgICAgdmFyIENfID0gW107CgkgICAgdmFyIEcgID0gW107CgoJICAgIC8qKgoJICAgICAqIFJhYmJpdCBzdHJlYW0gY2lwaGVyIGFsZ29yaXRobQoJICAgICAqLwoJICAgIHZhciBSYWJiaXQgPSBDX2FsZ28uUmFiYml0ID0gU3RyZWFtQ2lwaGVyLmV4dGVuZCh7CgkgICAgICAgIF9kb1Jlc2V0OiBmdW5jdGlvbiAoKSB7CgkgICAgICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgICAgIHZhciBLID0gdGhpcy5fa2V5LndvcmRzOwoJICAgICAgICAgICAgdmFyIGl2ID0gdGhpcy5jZmcuaXY7CgoJICAgICAgICAgICAgLy8gU3dhcCBlbmRpYW4KCSAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNDsgaSsrKSB7CgkgICAgICAgICAgICAgICAgS1tpXSA9ICgoKEtbaV0gPDwgOCkgIHwgKEtbaV0gPj4+IDI0KSkgJiAweDAwZmYwMGZmKSB8CgkgICAgICAgICAgICAgICAgICAgICAgICgoKEtbaV0gPDwgMjQpIHwgKEtbaV0gPj4+IDgpKSAgJiAweGZmMDBmZjAwKTsKCSAgICAgICAgICAgIH0KCgkgICAgICAgICAgICAvLyBHZW5lcmF0ZSBpbml0aWFsIHN0YXRlIHZhbHVlcwoJICAgICAgICAgICAgdmFyIFggPSB0aGlzLl9YID0gWwoJICAgICAgICAgICAgICAgIEtbMF0sIChLWzNdIDw8IDE2KSB8IChLWzJdID4+PiAxNiksCgkgICAgICAgICAgICAgICAgS1sxXSwgKEtbMF0gPDwgMTYpIHwgKEtbM10gPj4+IDE2KSwKCSAgICAgICAgICAgICAgICBLWzJdLCAoS1sxXSA8PCAxNikgfCAoS1swXSA+Pj4gMTYpLAoJICAgICAgICAgICAgICAgIEtbM10sIChLWzJdIDw8IDE2KSB8IChLWzFdID4+PiAxNikKCSAgICAgICAgICAgIF07CgoJICAgICAgICAgICAgLy8gR2VuZXJhdGUgaW5pdGlhbCBjb3VudGVyIHZhbHVlcwoJICAgICAgICAgICAgdmFyIEMgPSB0aGlzLl9DID0gWwoJICAgICAgICAgICAgICAgIChLWzJdIDw8IDE2KSB8IChLWzJdID4+PiAxNiksIChLWzBdICYgMHhmZmZmMDAwMCkgfCAoS1sxXSAmIDB4MDAwMGZmZmYpLAoJICAgICAgICAgICAgICAgIChLWzNdIDw8IDE2KSB8IChLWzNdID4+PiAxNiksIChLWzFdICYgMHhmZmZmMDAwMCkgfCAoS1syXSAmIDB4MDAwMGZmZmYpLAoJICAgICAgICAgICAgICAgIChLWzBdIDw8IDE2KSB8IChLWzBdID4+PiAxNiksIChLWzJdICYgMHhmZmZmMDAwMCkgfCAoS1szXSAmIDB4MDAwMGZmZmYpLAoJICAgICAgICAgICAgICAgIChLWzFdIDw8IDE2KSB8IChLWzFdID4+PiAxNiksIChLWzNdICYgMHhmZmZmMDAwMCkgfCAoS1swXSAmIDB4MDAwMGZmZmYpCgkgICAgICAgICAgICBdOwoKCSAgICAgICAgICAgIC8vIENhcnJ5IGJpdAoJICAgICAgICAgICAgdGhpcy5fYiA9IDA7CgoJICAgICAgICAgICAgLy8gSXRlcmF0ZSB0aGUgc3lzdGVtIGZvdXIgdGltZXMKCSAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNDsgaSsrKSB7CgkgICAgICAgICAgICAgICAgbmV4dFN0YXRlLmNhbGwodGhpcyk7CgkgICAgICAgICAgICB9CgoJICAgICAgICAgICAgLy8gTW9kaWZ5IHRoZSBjb3VudGVycwoJICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA4OyBpKyspIHsKCSAgICAgICAgICAgICAgICBDW2ldIF49IFhbKGkgKyA0KSAmIDddOwoJICAgICAgICAgICAgfQoKCSAgICAgICAgICAgIC8vIElWIHNldHVwCgkgICAgICAgICAgICBpZiAoaXYpIHsKCSAgICAgICAgICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgICAgICAgICB2YXIgSVYgPSBpdi53b3JkczsKCSAgICAgICAgICAgICAgICB2YXIgSVZfMCA9IElWWzBdOwoJICAgICAgICAgICAgICAgIHZhciBJVl8xID0gSVZbMV07CgoJICAgICAgICAgICAgICAgIC8vIEdlbmVyYXRlIGZvdXIgc3VidmVjdG9ycwoJICAgICAgICAgICAgICAgIHZhciBpMCA9ICgoKElWXzAgPDwgOCkgfCAoSVZfMCA+Pj4gMjQpKSAmIDB4MDBmZjAwZmYpIHwgKCgoSVZfMCA8PCAyNCkgfCAoSVZfMCA+Pj4gOCkpICYgMHhmZjAwZmYwMCk7CgkgICAgICAgICAgICAgICAgdmFyIGkyID0gKCgoSVZfMSA8PCA4KSB8IChJVl8xID4+PiAyNCkpICYgMHgwMGZmMDBmZikgfCAoKChJVl8xIDw8IDI0KSB8IChJVl8xID4+PiA4KSkgJiAweGZmMDBmZjAwKTsKCSAgICAgICAgICAgICAgICB2YXIgaTEgPSAoaTAgPj4+IDE2KSB8IChpMiAmIDB4ZmZmZjAwMDApOwoJICAgICAgICAgICAgICAgIHZhciBpMyA9IChpMiA8PCAxNikgIHwgKGkwICYgMHgwMDAwZmZmZik7CgoJICAgICAgICAgICAgICAgIC8vIE1vZGlmeSBjb3VudGVyIHZhbHVlcwoJICAgICAgICAgICAgICAgIENbMF0gXj0gaTA7CgkgICAgICAgICAgICAgICAgQ1sxXSBePSBpMTsKCSAgICAgICAgICAgICAgICBDWzJdIF49IGkyOwoJICAgICAgICAgICAgICAgIENbM10gXj0gaTM7CgkgICAgICAgICAgICAgICAgQ1s0XSBePSBpMDsKCSAgICAgICAgICAgICAgICBDWzVdIF49IGkxOwoJICAgICAgICAgICAgICAgIENbNl0gXj0gaTI7CgkgICAgICAgICAgICAgICAgQ1s3XSBePSBpMzsKCgkgICAgICAgICAgICAgICAgLy8gSXRlcmF0ZSB0aGUgc3lzdGVtIGZvdXIgdGltZXMKCSAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDQ7IGkrKykgewoJICAgICAgICAgICAgICAgICAgICBuZXh0U3RhdGUuY2FsbCh0aGlzKTsKCSAgICAgICAgICAgICAgICB9CgkgICAgICAgICAgICB9CgkgICAgICAgIH0sCgoJICAgICAgICBfZG9Qcm9jZXNzQmxvY2s6IGZ1bmN0aW9uIChNLCBvZmZzZXQpIHsKCSAgICAgICAgICAgIC8vIFNob3J0Y3V0CgkgICAgICAgICAgICB2YXIgWCA9IHRoaXMuX1g7CgoJICAgICAgICAgICAgLy8gSXRlcmF0ZSB0aGUgc3lzdGVtCgkgICAgICAgICAgICBuZXh0U3RhdGUuY2FsbCh0aGlzKTsKCgkgICAgICAgICAgICAvLyBHZW5lcmF0ZSBmb3VyIGtleXN0cmVhbSB3b3JkcwoJICAgICAgICAgICAgU1swXSA9IFhbMF0gXiAoWFs1XSA+Pj4gMTYpIF4gKFhbM10gPDwgMTYpOwoJICAgICAgICAgICAgU1sxXSA9IFhbMl0gXiAoWFs3XSA+Pj4gMTYpIF4gKFhbNV0gPDwgMTYpOwoJICAgICAgICAgICAgU1syXSA9IFhbNF0gXiAoWFsxXSA+Pj4gMTYpIF4gKFhbN10gPDwgMTYpOwoJICAgICAgICAgICAgU1szXSA9IFhbNl0gXiAoWFszXSA+Pj4gMTYpIF4gKFhbMV0gPDwgMTYpOwoKCSAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNDsgaSsrKSB7CgkgICAgICAgICAgICAgICAgLy8gU3dhcCBlbmRpYW4KCSAgICAgICAgICAgICAgICBTW2ldID0gKCgoU1tpXSA8PCA4KSAgfCAoU1tpXSA+Pj4gMjQpKSAmIDB4MDBmZjAwZmYpIHwKCSAgICAgICAgICAgICAgICAgICAgICAgKCgoU1tpXSA8PCAyNCkgfCAoU1tpXSA+Pj4gOCkpICAmIDB4ZmYwMGZmMDApOwoKCSAgICAgICAgICAgICAgICAvLyBFbmNyeXB0CgkgICAgICAgICAgICAgICAgTVtvZmZzZXQgKyBpXSBePSBTW2ldOwoJICAgICAgICAgICAgfQoJICAgICAgICB9LAoKCSAgICAgICAgYmxvY2tTaXplOiAxMjgvMzIsCgoJICAgICAgICBpdlNpemU6IDY0LzMyCgkgICAgfSk7CgoJICAgIGZ1bmN0aW9uIG5leHRTdGF0ZSgpIHsKCSAgICAgICAgLy8gU2hvcnRjdXRzCgkgICAgICAgIHZhciBYID0gdGhpcy5fWDsKCSAgICAgICAgdmFyIEMgPSB0aGlzLl9DOwoKCSAgICAgICAgLy8gU2F2ZSBvbGQgY291bnRlciB2YWx1ZXMKCSAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA4OyBpKyspIHsKCSAgICAgICAgICAgIENfW2ldID0gQ1tpXTsKCSAgICAgICAgfQoKCSAgICAgICAgLy8gQ2FsY3VsYXRlIG5ldyBjb3VudGVyIHZhbHVlcwoJICAgICAgICBDWzBdID0gKENbMF0gKyAweDRkMzRkMzRkICsgdGhpcy5fYikgfCAwOwoJICAgICAgICBDWzFdID0gKENbMV0gKyAweGQzNGQzNGQzICsgKChDWzBdID4+PiAwKSA8IChDX1swXSA+Pj4gMCkgPyAxIDogMCkpIHwgMDsKCSAgICAgICAgQ1syXSA9IChDWzJdICsgMHgzNGQzNGQzNCArICgoQ1sxXSA+Pj4gMCkgPCAoQ19bMV0gPj4+IDApID8gMSA6IDApKSB8IDA7CgkgICAgICAgIENbM10gPSAoQ1szXSArIDB4NGQzNGQzNGQgKyAoKENbMl0gPj4+IDApIDwgKENfWzJdID4+PiAwKSA/IDEgOiAwKSkgfCAwOwoJICAgICAgICBDWzRdID0gKENbNF0gKyAweGQzNGQzNGQzICsgKChDWzNdID4+PiAwKSA8IChDX1szXSA+Pj4gMCkgPyAxIDogMCkpIHwgMDsKCSAgICAgICAgQ1s1XSA9IChDWzVdICsgMHgzNGQzNGQzNCArICgoQ1s0XSA+Pj4gMCkgPCAoQ19bNF0gPj4+IDApID8gMSA6IDApKSB8IDA7CgkgICAgICAgIENbNl0gPSAoQ1s2XSArIDB4NGQzNGQzNGQgKyAoKENbNV0gPj4+IDApIDwgKENfWzVdID4+PiAwKSA/IDEgOiAwKSkgfCAwOwoJICAgICAgICBDWzddID0gKENbN10gKyAweGQzNGQzNGQzICsgKChDWzZdID4+PiAwKSA8IChDX1s2XSA+Pj4gMCkgPyAxIDogMCkpIHwgMDsKCSAgICAgICAgdGhpcy5fYiA9IChDWzddID4+PiAwKSA8IChDX1s3XSA+Pj4gMCkgPyAxIDogMDsKCgkgICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgZy12YWx1ZXMKCSAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA4OyBpKyspIHsKCSAgICAgICAgICAgIHZhciBneCA9IFhbaV0gKyBDW2ldOwoKCSAgICAgICAgICAgIC8vIENvbnN0cnVjdCBoaWdoIGFuZCBsb3cgYXJndW1lbnQgZm9yIHNxdWFyaW5nCgkgICAgICAgICAgICB2YXIgZ2EgPSBneCAmIDB4ZmZmZjsKCSAgICAgICAgICAgIHZhciBnYiA9IGd4ID4+PiAxNjsKCgkgICAgICAgICAgICAvLyBDYWxjdWxhdGUgaGlnaCBhbmQgbG93IHJlc3VsdCBvZiBzcXVhcmluZwoJICAgICAgICAgICAgdmFyIGdoID0gKCgoKGdhICogZ2EpID4+PiAxNykgKyBnYSAqIGdiKSA+Pj4gMTUpICsgZ2IgKiBnYjsKCSAgICAgICAgICAgIHZhciBnbCA9ICgoKGd4ICYgMHhmZmZmMDAwMCkgKiBneCkgfCAwKSArICgoKGd4ICYgMHgwMDAwZmZmZikgKiBneCkgfCAwKTsKCgkgICAgICAgICAgICAvLyBIaWdoIFhPUiBsb3cKCSAgICAgICAgICAgIEdbaV0gPSBnaCBeIGdsOwoJICAgICAgICB9CgoJICAgICAgICAvLyBDYWxjdWxhdGUgbmV3IHN0YXRlIHZhbHVlcwoJICAgICAgICBYWzBdID0gKEdbMF0gKyAoKEdbN10gPDwgMTYpIHwgKEdbN10gPj4+IDE2KSkgKyAoKEdbNl0gPDwgMTYpIHwgKEdbNl0gPj4+IDE2KSkpIHwgMDsKCSAgICAgICAgWFsxXSA9IChHWzFdICsgKChHWzBdIDw8IDgpICB8IChHWzBdID4+PiAyNCkpICsgR1s3XSkgfCAwOwoJICAgICAgICBYWzJdID0gKEdbMl0gKyAoKEdbMV0gPDwgMTYpIHwgKEdbMV0gPj4+IDE2KSkgKyAoKEdbMF0gPDwgMTYpIHwgKEdbMF0gPj4+IDE2KSkpIHwgMDsKCSAgICAgICAgWFszXSA9IChHWzNdICsgKChHWzJdIDw8IDgpICB8IChHWzJdID4+PiAyNCkpICsgR1sxXSkgfCAwOwoJICAgICAgICBYWzRdID0gKEdbNF0gKyAoKEdbM10gPDwgMTYpIHwgKEdbM10gPj4+IDE2KSkgKyAoKEdbMl0gPDwgMTYpIHwgKEdbMl0gPj4+IDE2KSkpIHwgMDsKCSAgICAgICAgWFs1XSA9IChHWzVdICsgKChHWzRdIDw8IDgpICB8IChHWzRdID4+PiAyNCkpICsgR1szXSkgfCAwOwoJICAgICAgICBYWzZdID0gKEdbNl0gKyAoKEdbNV0gPDwgMTYpIHwgKEdbNV0gPj4+IDE2KSkgKyAoKEdbNF0gPDwgMTYpIHwgKEdbNF0gPj4+IDE2KSkpIHwgMDsKCSAgICAgICAgWFs3XSA9IChHWzddICsgKChHWzZdIDw8IDgpICB8IChHWzZdID4+PiAyNCkpICsgR1s1XSkgfCAwOwoJICAgIH0KCgkgICAgLyoqCgkgICAgICogU2hvcnRjdXQgZnVuY3Rpb25zIHRvIHRoZSBjaXBoZXIncyBvYmplY3QgaW50ZXJmYWNlLgoJICAgICAqCgkgICAgICogQGV4YW1wbGUKCSAgICAgKgoJICAgICAqICAgICB2YXIgY2lwaGVydGV4dCA9IENyeXB0b0pTLlJhYmJpdC5lbmNyeXB0KG1lc3NhZ2UsIGtleSwgY2ZnKTsKCSAgICAgKiAgICAgdmFyIHBsYWludGV4dCAgPSBDcnlwdG9KUy5SYWJiaXQuZGVjcnlwdChjaXBoZXJ0ZXh0LCBrZXksIGNmZyk7CgkgICAgICovCgkgICAgQy5SYWJiaXQgPSBTdHJlYW1DaXBoZXIuX2NyZWF0ZUhlbHBlcihSYWJiaXQpOwoJfSgpKTsKCgoJLyoqCgkgKiBDb3VudGVyIGJsb2NrIG1vZGUuCgkgKi8KCUNyeXB0b0pTLm1vZGUuQ1RSID0gKGZ1bmN0aW9uICgpIHsKCSAgICB2YXIgQ1RSID0gQ3J5cHRvSlMubGliLkJsb2NrQ2lwaGVyTW9kZS5leHRlbmQoKTsKCgkgICAgdmFyIEVuY3J5cHRvciA9IENUUi5FbmNyeXB0b3IgPSBDVFIuZXh0ZW5kKHsKCSAgICAgICAgcHJvY2Vzc0Jsb2NrOiBmdW5jdGlvbiAod29yZHMsIG9mZnNldCkgewoJICAgICAgICAgICAgLy8gU2hvcnRjdXRzCgkgICAgICAgICAgICB2YXIgY2lwaGVyID0gdGhpcy5fY2lwaGVyCgkgICAgICAgICAgICB2YXIgYmxvY2tTaXplID0gY2lwaGVyLmJsb2NrU2l6ZTsKCSAgICAgICAgICAgIHZhciBpdiA9IHRoaXMuX2l2OwoJICAgICAgICAgICAgdmFyIGNvdW50ZXIgPSB0aGlzLl9jb3VudGVyOwoKCSAgICAgICAgICAgIC8vIEdlbmVyYXRlIGtleXN0cmVhbQoJICAgICAgICAgICAgaWYgKGl2KSB7CgkgICAgICAgICAgICAgICAgY291bnRlciA9IHRoaXMuX2NvdW50ZXIgPSBpdi5zbGljZSgwKTsKCgkgICAgICAgICAgICAgICAgLy8gUmVtb3ZlIElWIGZvciBzdWJzZXF1ZW50IGJsb2NrcwoJICAgICAgICAgICAgICAgIHRoaXMuX2l2ID0gdW5kZWZpbmVkOwoJICAgICAgICAgICAgfQoJICAgICAgICAgICAgdmFyIGtleXN0cmVhbSA9IGNvdW50ZXIuc2xpY2UoMCk7CgkgICAgICAgICAgICBjaXBoZXIuZW5jcnlwdEJsb2NrKGtleXN0cmVhbSwgMCk7CgoJICAgICAgICAgICAgLy8gSW5jcmVtZW50IGNvdW50ZXIKCSAgICAgICAgICAgIGNvdW50ZXJbYmxvY2tTaXplIC0gMV0gPSAoY291bnRlcltibG9ja1NpemUgLSAxXSArIDEpIHwgMAoKCSAgICAgICAgICAgIC8vIEVuY3J5cHQKCSAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYmxvY2tTaXplOyBpKyspIHsKCSAgICAgICAgICAgICAgICB3b3Jkc1tvZmZzZXQgKyBpXSBePSBrZXlzdHJlYW1baV07CgkgICAgICAgICAgICB9CgkgICAgICAgIH0KCSAgICB9KTsKCgkgICAgQ1RSLkRlY3J5cHRvciA9IEVuY3J5cHRvcjsKCgkgICAgcmV0dXJuIENUUjsKCX0oKSk7CgoKCShmdW5jdGlvbiAoKSB7CgkgICAgLy8gU2hvcnRjdXRzCgkgICAgdmFyIEMgPSBDcnlwdG9KUzsKCSAgICB2YXIgQ19saWIgPSBDLmxpYjsKCSAgICB2YXIgU3RyZWFtQ2lwaGVyID0gQ19saWIuU3RyZWFtQ2lwaGVyOwoJICAgIHZhciBDX2FsZ28gPSBDLmFsZ287CgoJICAgIC8vIFJldXNhYmxlIG9iamVjdHMKCSAgICB2YXIgUyAgPSBbXTsKCSAgICB2YXIgQ18gPSBbXTsKCSAgICB2YXIgRyAgPSBbXTsKCgkgICAgLyoqCgkgICAgICogUmFiYml0IHN0cmVhbSBjaXBoZXIgYWxnb3JpdGhtLgoJICAgICAqCgkgICAgICogVGhpcyBpcyBhIGxlZ2FjeSB2ZXJzaW9uIHRoYXQgbmVnbGVjdGVkIHRvIGNvbnZlcnQgdGhlIGtleSB0byBsaXR0bGUtZW5kaWFuLgoJICAgICAqIFRoaXMgZXJyb3IgZG9lc24ndCBhZmZlY3QgdGhlIGNpcGhlcidzIHNlY3VyaXR5LAoJICAgICAqIGJ1dCBpdCBkb2VzIGFmZmVjdCBpdHMgY29tcGF0aWJpbGl0eSB3aXRoIG90aGVyIGltcGxlbWVudGF0aW9ucy4KCSAgICAgKi8KCSAgICB2YXIgUmFiYml0TGVnYWN5ID0gQ19hbGdvLlJhYmJpdExlZ2FjeSA9IFN0cmVhbUNpcGhlci5leHRlbmQoewoJICAgICAgICBfZG9SZXNldDogZnVuY3Rpb24gKCkgewoJICAgICAgICAgICAgLy8gU2hvcnRjdXRzCgkgICAgICAgICAgICB2YXIgSyA9IHRoaXMuX2tleS53b3JkczsKCSAgICAgICAgICAgIHZhciBpdiA9IHRoaXMuY2ZnLml2OwoKCSAgICAgICAgICAgIC8vIEdlbmVyYXRlIGluaXRpYWwgc3RhdGUgdmFsdWVzCgkgICAgICAgICAgICB2YXIgWCA9IHRoaXMuX1ggPSBbCgkgICAgICAgICAgICAgICAgS1swXSwgKEtbM10gPDwgMTYpIHwgKEtbMl0gPj4+IDE2KSwKCSAgICAgICAgICAgICAgICBLWzFdLCAoS1swXSA8PCAxNikgfCAoS1szXSA+Pj4gMTYpLAoJICAgICAgICAgICAgICAgIEtbMl0sIChLWzFdIDw8IDE2KSB8IChLWzBdID4+PiAxNiksCgkgICAgICAgICAgICAgICAgS1szXSwgKEtbMl0gPDwgMTYpIHwgKEtbMV0gPj4+IDE2KQoJICAgICAgICAgICAgXTsKCgkgICAgICAgICAgICAvLyBHZW5lcmF0ZSBpbml0aWFsIGNvdW50ZXIgdmFsdWVzCgkgICAgICAgICAgICB2YXIgQyA9IHRoaXMuX0MgPSBbCgkgICAgICAgICAgICAgICAgKEtbMl0gPDwgMTYpIHwgKEtbMl0gPj4+IDE2KSwgKEtbMF0gJiAweGZmZmYwMDAwKSB8IChLWzFdICYgMHgwMDAwZmZmZiksCgkgICAgICAgICAgICAgICAgKEtbM10gPDwgMTYpIHwgKEtbM10gPj4+IDE2KSwgKEtbMV0gJiAweGZmZmYwMDAwKSB8IChLWzJdICYgMHgwMDAwZmZmZiksCgkgICAgICAgICAgICAgICAgKEtbMF0gPDwgMTYpIHwgKEtbMF0gPj4+IDE2KSwgKEtbMl0gJiAweGZmZmYwMDAwKSB8IChLWzNdICYgMHgwMDAwZmZmZiksCgkgICAgICAgICAgICAgICAgKEtbMV0gPDwgMTYpIHwgKEtbMV0gPj4+IDE2KSwgKEtbM10gJiAweGZmZmYwMDAwKSB8IChLWzBdICYgMHgwMDAwZmZmZikKCSAgICAgICAgICAgIF07CgoJICAgICAgICAgICAgLy8gQ2FycnkgYml0CgkgICAgICAgICAgICB0aGlzLl9iID0gMDsKCgkgICAgICAgICAgICAvLyBJdGVyYXRlIHRoZSBzeXN0ZW0gZm91ciB0aW1lcwoJICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA0OyBpKyspIHsKCSAgICAgICAgICAgICAgICBuZXh0U3RhdGUuY2FsbCh0aGlzKTsKCSAgICAgICAgICAgIH0KCgkgICAgICAgICAgICAvLyBNb2RpZnkgdGhlIGNvdW50ZXJzCgkgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDg7IGkrKykgewoJICAgICAgICAgICAgICAgIENbaV0gXj0gWFsoaSArIDQpICYgN107CgkgICAgICAgICAgICB9CgoJICAgICAgICAgICAgLy8gSVYgc2V0dXAKCSAgICAgICAgICAgIGlmIChpdikgewoJICAgICAgICAgICAgICAgIC8vIFNob3J0Y3V0cwoJICAgICAgICAgICAgICAgIHZhciBJViA9IGl2LndvcmRzOwoJICAgICAgICAgICAgICAgIHZhciBJVl8wID0gSVZbMF07CgkgICAgICAgICAgICAgICAgdmFyIElWXzEgPSBJVlsxXTsKCgkgICAgICAgICAgICAgICAgLy8gR2VuZXJhdGUgZm91ciBzdWJ2ZWN0b3JzCgkgICAgICAgICAgICAgICAgdmFyIGkwID0gKCgoSVZfMCA8PCA4KSB8IChJVl8wID4+PiAyNCkpICYgMHgwMGZmMDBmZikgfCAoKChJVl8wIDw8IDI0KSB8IChJVl8wID4+PiA4KSkgJiAweGZmMDBmZjAwKTsKCSAgICAgICAgICAgICAgICB2YXIgaTIgPSAoKChJVl8xIDw8IDgpIHwgKElWXzEgPj4+IDI0KSkgJiAweDAwZmYwMGZmKSB8ICgoKElWXzEgPDwgMjQpIHwgKElWXzEgPj4+IDgpKSAmIDB4ZmYwMGZmMDApOwoJICAgICAgICAgICAgICAgIHZhciBpMSA9IChpMCA+Pj4gMTYpIHwgKGkyICYgMHhmZmZmMDAwMCk7CgkgICAgICAgICAgICAgICAgdmFyIGkzID0gKGkyIDw8IDE2KSAgfCAoaTAgJiAweDAwMDBmZmZmKTsKCgkgICAgICAgICAgICAgICAgLy8gTW9kaWZ5IGNvdW50ZXIgdmFsdWVzCgkgICAgICAgICAgICAgICAgQ1swXSBePSBpMDsKCSAgICAgICAgICAgICAgICBDWzFdIF49IGkxOwoJICAgICAgICAgICAgICAgIENbMl0gXj0gaTI7CgkgICAgICAgICAgICAgICAgQ1szXSBePSBpMzsKCSAgICAgICAgICAgICAgICBDWzRdIF49IGkwOwoJICAgICAgICAgICAgICAgIENbNV0gXj0gaTE7CgkgICAgICAgICAgICAgICAgQ1s2XSBePSBpMjsKCSAgICAgICAgICAgICAgICBDWzddIF49IGkzOwoKCSAgICAgICAgICAgICAgICAvLyBJdGVyYXRlIHRoZSBzeXN0ZW0gZm91ciB0aW1lcwoJICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNDsgaSsrKSB7CgkgICAgICAgICAgICAgICAgICAgIG5leHRTdGF0ZS5jYWxsKHRoaXMpOwoJICAgICAgICAgICAgICAgIH0KCSAgICAgICAgICAgIH0KCSAgICAgICAgfSwKCgkgICAgICAgIF9kb1Byb2Nlc3NCbG9jazogZnVuY3Rpb24gKE0sIG9mZnNldCkgewoJICAgICAgICAgICAgLy8gU2hvcnRjdXQKCSAgICAgICAgICAgIHZhciBYID0gdGhpcy5fWDsKCgkgICAgICAgICAgICAvLyBJdGVyYXRlIHRoZSBzeXN0ZW0KCSAgICAgICAgICAgIG5leHRTdGF0ZS5jYWxsKHRoaXMpOwoKCSAgICAgICAgICAgIC8vIEdlbmVyYXRlIGZvdXIga2V5c3RyZWFtIHdvcmRzCgkgICAgICAgICAgICBTWzBdID0gWFswXSBeIChYWzVdID4+PiAxNikgXiAoWFszXSA8PCAxNik7CgkgICAgICAgICAgICBTWzFdID0gWFsyXSBeIChYWzddID4+PiAxNikgXiAoWFs1XSA8PCAxNik7CgkgICAgICAgICAgICBTWzJdID0gWFs0XSBeIChYWzFdID4+PiAxNikgXiAoWFs3XSA8PCAxNik7CgkgICAgICAgICAgICBTWzNdID0gWFs2XSBeIChYWzNdID4+PiAxNikgXiAoWFsxXSA8PCAxNik7CgoJICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA0OyBpKyspIHsKCSAgICAgICAgICAgICAgICAvLyBTd2FwIGVuZGlhbgoJICAgICAgICAgICAgICAgIFNbaV0gPSAoKChTW2ldIDw8IDgpICB8IChTW2ldID4+PiAyNCkpICYgMHgwMGZmMDBmZikgfAoJICAgICAgICAgICAgICAgICAgICAgICAoKChTW2ldIDw8IDI0KSB8IChTW2ldID4+PiA4KSkgICYgMHhmZjAwZmYwMCk7CgoJICAgICAgICAgICAgICAgIC8vIEVuY3J5cHQKCSAgICAgICAgICAgICAgICBNW29mZnNldCArIGldIF49IFNbaV07CgkgICAgICAgICAgICB9CgkgICAgICAgIH0sCgoJICAgICAgICBibG9ja1NpemU6IDEyOC8zMiwKCgkgICAgICAgIGl2U2l6ZTogNjQvMzIKCSAgICB9KTsKCgkgICAgZnVuY3Rpb24gbmV4dFN0YXRlKCkgewoJICAgICAgICAvLyBTaG9ydGN1dHMKCSAgICAgICAgdmFyIFggPSB0aGlzLl9YOwoJICAgICAgICB2YXIgQyA9IHRoaXMuX0M7CgoJICAgICAgICAvLyBTYXZlIG9sZCBjb3VudGVyIHZhbHVlcwoJICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDg7IGkrKykgewoJICAgICAgICAgICAgQ19baV0gPSBDW2ldOwoJICAgICAgICB9CgoJICAgICAgICAvLyBDYWxjdWxhdGUgbmV3IGNvdW50ZXIgdmFsdWVzCgkgICAgICAgIENbMF0gPSAoQ1swXSArIDB4NGQzNGQzNGQgKyB0aGlzLl9iKSB8IDA7CgkgICAgICAgIENbMV0gPSAoQ1sxXSArIDB4ZDM0ZDM0ZDMgKyAoKENbMF0gPj4+IDApIDwgKENfWzBdID4+PiAwKSA/IDEgOiAwKSkgfCAwOwoJICAgICAgICBDWzJdID0gKENbMl0gKyAweDM0ZDM0ZDM0ICsgKChDWzFdID4+PiAwKSA8IChDX1sxXSA+Pj4gMCkgPyAxIDogMCkpIHwgMDsKCSAgICAgICAgQ1szXSA9IChDWzNdICsgMHg0ZDM0ZDM0ZCArICgoQ1syXSA+Pj4gMCkgPCAoQ19bMl0gPj4+IDApID8gMSA6IDApKSB8IDA7CgkgICAgICAgIENbNF0gPSAoQ1s0XSArIDB4ZDM0ZDM0ZDMgKyAoKENbM10gPj4+IDApIDwgKENfWzNdID4+PiAwKSA/IDEgOiAwKSkgfCAwOwoJICAgICAgICBDWzVdID0gKENbNV0gKyAweDM0ZDM0ZDM0ICsgKChDWzRdID4+PiAwKSA8IChDX1s0XSA+Pj4gMCkgPyAxIDogMCkpIHwgMDsKCSAgICAgICAgQ1s2XSA9IChDWzZdICsgMHg0ZDM0ZDM0ZCArICgoQ1s1XSA+Pj4gMCkgPCAoQ19bNV0gPj4+IDApID8gMSA6IDApKSB8IDA7CgkgICAgICAgIENbN10gPSAoQ1s3XSArIDB4ZDM0ZDM0ZDMgKyAoKENbNl0gPj4+IDApIDwgKENfWzZdID4+PiAwKSA/IDEgOiAwKSkgfCAwOwoJICAgICAgICB0aGlzLl9iID0gKENbN10gPj4+IDApIDwgKENfWzddID4+PiAwKSA/IDEgOiAwOwoKCSAgICAgICAgLy8gQ2FsY3VsYXRlIHRoZSBnLXZhbHVlcwoJICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDg7IGkrKykgewoJICAgICAgICAgICAgdmFyIGd4ID0gWFtpXSArIENbaV07CgoJICAgICAgICAgICAgLy8gQ29uc3RydWN0IGhpZ2ggYW5kIGxvdyBhcmd1bWVudCBmb3Igc3F1YXJpbmcKCSAgICAgICAgICAgIHZhciBnYSA9IGd4ICYgMHhmZmZmOwoJICAgICAgICAgICAgdmFyIGdiID0gZ3ggPj4+IDE2OwoKCSAgICAgICAgICAgIC8vIENhbGN1bGF0ZSBoaWdoIGFuZCBsb3cgcmVzdWx0IG9mIHNxdWFyaW5nCgkgICAgICAgICAgICB2YXIgZ2ggPSAoKCgoZ2EgKiBnYSkgPj4+IDE3KSArIGdhICogZ2IpID4+PiAxNSkgKyBnYiAqIGdiOwoJICAgICAgICAgICAgdmFyIGdsID0gKCgoZ3ggJiAweGZmZmYwMDAwKSAqIGd4KSB8IDApICsgKCgoZ3ggJiAweDAwMDBmZmZmKSAqIGd4KSB8IDApOwoKCSAgICAgICAgICAgIC8vIEhpZ2ggWE9SIGxvdwoJICAgICAgICAgICAgR1tpXSA9IGdoIF4gZ2w7CgkgICAgICAgIH0KCgkgICAgICAgIC8vIENhbGN1bGF0ZSBuZXcgc3RhdGUgdmFsdWVzCgkgICAgICAgIFhbMF0gPSAoR1swXSArICgoR1s3XSA8PCAxNikgfCAoR1s3XSA+Pj4gMTYpKSArICgoR1s2XSA8PCAxNikgfCAoR1s2XSA+Pj4gMTYpKSkgfCAwOwoJICAgICAgICBYWzFdID0gKEdbMV0gKyAoKEdbMF0gPDwgOCkgIHwgKEdbMF0gPj4+IDI0KSkgKyBHWzddKSB8IDA7CgkgICAgICAgIFhbMl0gPSAoR1syXSArICgoR1sxXSA8PCAxNikgfCAoR1sxXSA+Pj4gMTYpKSArICgoR1swXSA8PCAxNikgfCAoR1swXSA+Pj4gMTYpKSkgfCAwOwoJICAgICAgICBYWzNdID0gKEdbM10gKyAoKEdbMl0gPDwgOCkgIHwgKEdbMl0gPj4+IDI0KSkgKyBHWzFdKSB8IDA7CgkgICAgICAgIFhbNF0gPSAoR1s0XSArICgoR1szXSA8PCAxNikgfCAoR1szXSA+Pj4gMTYpKSArICgoR1syXSA8PCAxNikgfCAoR1syXSA+Pj4gMTYpKSkgfCAwOwoJICAgICAgICBYWzVdID0gKEdbNV0gKyAoKEdbNF0gPDwgOCkgIHwgKEdbNF0gPj4+IDI0KSkgKyBHWzNdKSB8IDA7CgkgICAgICAgIFhbNl0gPSAoR1s2XSArICgoR1s1XSA8PCAxNikgfCAoR1s1XSA+Pj4gMTYpKSArICgoR1s0XSA8PCAxNikgfCAoR1s0XSA+Pj4gMTYpKSkgfCAwOwoJICAgICAgICBYWzddID0gKEdbN10gKyAoKEdbNl0gPDwgOCkgIHwgKEdbNl0gPj4+IDI0KSkgKyBHWzVdKSB8IDA7CgkgICAgfQoKCSAgICAvKioKCSAgICAgKiBTaG9ydGN1dCBmdW5jdGlvbnMgdG8gdGhlIGNpcGhlcidzIG9iamVjdCBpbnRlcmZhY2UuCgkgICAgICoKCSAgICAgKiBAZXhhbXBsZQoJICAgICAqCgkgICAgICogICAgIHZhciBjaXBoZXJ0ZXh0ID0gQ3J5cHRvSlMuUmFiYml0TGVnYWN5LmVuY3J5cHQobWVzc2FnZSwga2V5LCBjZmcpOwoJICAgICAqICAgICB2YXIgcGxhaW50ZXh0ICA9IENyeXB0b0pTLlJhYmJpdExlZ2FjeS5kZWNyeXB0KGNpcGhlcnRleHQsIGtleSwgY2ZnKTsKCSAgICAgKi8KCSAgICBDLlJhYmJpdExlZ2FjeSA9IFN0cmVhbUNpcGhlci5fY3JlYXRlSGVscGVyKFJhYmJpdExlZ2FjeSk7Cgl9KCkpOwoKCgkvKioKCSAqIFplcm8gcGFkZGluZyBzdHJhdGVneS4KCSAqLwoJQ3J5cHRvSlMucGFkLlplcm9QYWRkaW5nID0gewoJICAgIHBhZDogZnVuY3Rpb24gKGRhdGEsIGJsb2NrU2l6ZSkgewoJICAgICAgICAvLyBTaG9ydGN1dAoJICAgICAgICB2YXIgYmxvY2tTaXplQnl0ZXMgPSBibG9ja1NpemUgKiA0OwoKCSAgICAgICAgLy8gUGFkCgkgICAgICAgIGRhdGEuY2xhbXAoKTsKCSAgICAgICAgZGF0YS5zaWdCeXRlcyArPSBibG9ja1NpemVCeXRlcyAtICgoZGF0YS5zaWdCeXRlcyAlIGJsb2NrU2l6ZUJ5dGVzKSB8fCBibG9ja1NpemVCeXRlcyk7CgkgICAgfSwKCgkgICAgdW5wYWQ6IGZ1bmN0aW9uIChkYXRhKSB7CgkgICAgICAgIC8vIFNob3J0Y3V0CgkgICAgICAgIHZhciBkYXRhV29yZHMgPSBkYXRhLndvcmRzOwoKCSAgICAgICAgLy8gVW5wYWQKCSAgICAgICAgdmFyIGkgPSBkYXRhLnNpZ0J5dGVzIC0gMTsKCSAgICAgICAgd2hpbGUgKCEoKGRhdGFXb3Jkc1tpID4+PiAyXSA+Pj4gKDI0IC0gKGkgJSA0KSAqIDgpKSAmIDB4ZmYpKSB7CgkgICAgICAgICAgICBpLS07CgkgICAgICAgIH0KCSAgICAgICAgZGF0YS5zaWdCeXRlcyA9IGkgKyAxOwoJICAgIH0KCX07CgoKCXJldHVybiBDcnlwdG9KUzsKCn0pKTs="},{"meta":{"name":"aes.min.js","url":"https://cdn.bootcss.com/crypto-js/3.1.9/aes.min.js","ts":1549937732764,"mimetype":"text/javascript"},"source":"IWZ1bmN0aW9uKGUscixpKXsib2JqZWN0Ij09dHlwZW9mIGV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9ZXhwb3J0cz1yKHJlcXVpcmUoIi4vY29yZS5taW4iKSxyZXF1aXJlKCIuL2VuYy1iYXNlNjQubWluIikscmVxdWlyZSgiLi9tZDUubWluIikscmVxdWlyZSgiLi9ldnBrZGYubWluIikscmVxdWlyZSgiLi9jaXBoZXItY29yZS5taW4iKSk6ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoWyIuL2NvcmUubWluIiwiLi9lbmMtYmFzZTY0Lm1pbiIsIi4vbWQ1Lm1pbiIsIi4vZXZwa2RmLm1pbiIsIi4vY2lwaGVyLWNvcmUubWluIl0scik6cihlLkNyeXB0b0pTKX0odGhpcyxmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgcj1lLGk9ci5saWIsbj1pLkJsb2NrQ2lwaGVyLG89ci5hbGdvLHQ9W10sYz1bXSxzPVtdLGY9W10sYT1bXSxkPVtdLHU9W10sdj1bXSxoPVtdLHk9W107IWZ1bmN0aW9uKCl7Zm9yKHZhciBlPVtdLHI9MDtyPDI1NjtyKyspcjwxMjg/ZVtyXT1yPDwxOmVbcl09cjw8MV4yODM7Zm9yKHZhciBpPTAsbj0wLHI9MDtyPDI1NjtyKyspe3ZhciBvPW5ebjw8MV5uPDwyXm48PDNebjw8NDtvPW8+Pj44XjI1NSZvXjk5LHRbaV09byxjW29dPWk7dmFyIHA9ZVtpXSxsPWVbcF0sXz1lW2xdLGs9MjU3KmVbb11eMTY4NDMwMDgqbztzW2ldPWs8PDI0fGs+Pj44LGZbaV09azw8MTZ8az4+PjE2LGFbaV09azw8OHxrPj4+MjQsZFtpXT1rO3ZhciBrPTE2ODQzMDA5Kl9eNjU1MzcqbF4yNTcqcF4xNjg0MzAwOCppO3Vbb109azw8MjR8az4+PjgsdltvXT1rPDwxNnxrPj4+MTYsaFtvXT1rPDw4fGs+Pj4yNCx5W29dPWssaT8oaT1wXmVbZVtlW19ecF1dXSxuXj1lW2Vbbl1dKTppPW49MX19KCk7dmFyIHA9WzAsMSwyLDQsOCwxNiwzMiw2NCwxMjgsMjcsNTRdLGw9by5BRVM9bi5leHRlbmQoe19kb1Jlc2V0OmZ1bmN0aW9uKCl7aWYoIXRoaXMuX25Sb3VuZHN8fHRoaXMuX2tleVByaW9yUmVzZXQhPT10aGlzLl9rZXkpe2Zvcih2YXIgZT10aGlzLl9rZXlQcmlvclJlc2V0PXRoaXMuX2tleSxyPWUud29yZHMsaT1lLnNpZ0J5dGVzLzQsbj10aGlzLl9uUm91bmRzPWkrNixvPTQqKG4rMSksYz10aGlzLl9rZXlTY2hlZHVsZT1bXSxzPTA7czxvO3MrKylpZihzPGkpY1tzXT1yW3NdO2Vsc2V7dmFyIGY9Y1tzLTFdO3MlaT9pPjYmJnMlaT09NCYmKGY9dFtmPj4+MjRdPDwyNHx0W2Y+Pj4xNiYyNTVdPDwxNnx0W2Y+Pj44JjI1NV08PDh8dFsyNTUmZl0pOihmPWY8PDh8Zj4+PjI0LGY9dFtmPj4+MjRdPDwyNHx0W2Y+Pj4xNiYyNTVdPDwxNnx0W2Y+Pj44JjI1NV08PDh8dFsyNTUmZl0sZl49cFtzL2l8MF08PDI0KSxjW3NdPWNbcy1pXV5mfWZvcih2YXIgYT10aGlzLl9pbnZLZXlTY2hlZHVsZT1bXSxkPTA7ZDxvO2QrKyl7dmFyIHM9by1kO2lmKGQlNCl2YXIgZj1jW3NdO2Vsc2UgdmFyIGY9Y1tzLTRdO2Q8NHx8czw9ND9hW2RdPWY6YVtkXT11W3RbZj4+PjI0XV1edlt0W2Y+Pj4xNiYyNTVdXV5oW3RbZj4+PjgmMjU1XV1eeVt0WzI1NSZmXV19fX0sZW5jcnlwdEJsb2NrOmZ1bmN0aW9uKGUscil7dGhpcy5fZG9DcnlwdEJsb2NrKGUscix0aGlzLl9rZXlTY2hlZHVsZSxzLGYsYSxkLHQpfSxkZWNyeXB0QmxvY2s6ZnVuY3Rpb24oZSxyKXt2YXIgaT1lW3IrMV07ZVtyKzFdPWVbciszXSxlW3IrM109aSx0aGlzLl9kb0NyeXB0QmxvY2soZSxyLHRoaXMuX2ludktleVNjaGVkdWxlLHUsdixoLHksYyk7dmFyIGk9ZVtyKzFdO2VbcisxXT1lW3IrM10sZVtyKzNdPWl9LF9kb0NyeXB0QmxvY2s6ZnVuY3Rpb24oZSxyLGksbixvLHQsYyxzKXtmb3IodmFyIGY9dGhpcy5fblJvdW5kcyxhPWVbcl1eaVswXSxkPWVbcisxXV5pWzFdLHU9ZVtyKzJdXmlbMl0sdj1lW3IrM11eaVszXSxoPTQseT0xO3k8Zjt5Kyspe3ZhciBwPW5bYT4+PjI0XV5vW2Q+Pj4xNiYyNTVdXnRbdT4+PjgmMjU1XV5jWzI1NSZ2XV5pW2grK10sbD1uW2Q+Pj4yNF1eb1t1Pj4+MTYmMjU1XV50W3Y+Pj44JjI1NV1eY1syNTUmYV1eaVtoKytdLF89blt1Pj4+MjRdXm9bdj4+PjE2JjI1NV1edFthPj4+OCYyNTVdXmNbMjU1JmRdXmlbaCsrXSxrPW5bdj4+PjI0XV5vW2E+Pj4xNiYyNTVdXnRbZD4+PjgmMjU1XV5jWzI1NSZ1XV5pW2grK107YT1wLGQ9bCx1PV8sdj1rfXZhciBwPShzW2E+Pj4yNF08PDI0fHNbZD4+PjE2JjI1NV08PDE2fHNbdT4+PjgmMjU1XTw8OHxzWzI1NSZ2XSleaVtoKytdLGw9KHNbZD4+PjI0XTw8MjR8c1t1Pj4+MTYmMjU1XTw8MTZ8c1t2Pj4+OCYyNTVdPDw4fHNbMjU1JmFdKV5pW2grK10sXz0oc1t1Pj4+MjRdPDwyNHxzW3Y+Pj4xNiYyNTVdPDwxNnxzW2E+Pj44JjI1NV08PDh8c1syNTUmZF0pXmlbaCsrXSxrPShzW3Y+Pj4yNF08PDI0fHNbYT4+PjE2JjI1NV08PDE2fHNbZD4+PjgmMjU1XTw8OHxzWzI1NSZ1XSleaVtoKytdO2Vbcl09cCxlW3IrMV09bCxlW3IrMl09XyxlW3IrM109a30sa2V5U2l6ZTo4fSk7ci5BRVM9bi5fY3JlYXRlSGVscGVyKGwpfSgpLGUuQUVTfSk7Ci8vIyBzb3VyY2VNYXBwaW5nVVJMPWFlcy5taW4uanMubWFw"},{"meta":{"name":"enc-utf8.js","url":"https://cdn.bootcss.com/crypto-js/3.1.9/enc-utf8.js","ts":1549937732774,"mimetype":"text/javascript"},"source":"OyhmdW5jdGlvbiAocm9vdCwgZmFjdG9yeSkgewoJaWYgKHR5cGVvZiBleHBvcnRzID09PSAib2JqZWN0IikgewoJCS8vIENvbW1vbkpTCgkJbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKCIuL2NvcmUiKSk7Cgl9CgllbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAiZnVuY3Rpb24iICYmIGRlZmluZS5hbWQpIHsKCQkvLyBBTUQKCQlkZWZpbmUoWyIuL2NvcmUiXSwgZmFjdG9yeSk7Cgl9CgllbHNlIHsKCQkvLyBHbG9iYWwgKGJyb3dzZXIpCgkJZmFjdG9yeShyb290LkNyeXB0b0pTKTsKCX0KfSh0aGlzLCBmdW5jdGlvbiAoQ3J5cHRvSlMpIHsKCglyZXR1cm4gQ3J5cHRvSlMuZW5jLlV0Zjg7Cgp9KSk7"},{"meta":{"name":"enc-base64.min.js","url":"https://cdn.bootcss.com/crypto-js/3.1.9/enc-base64.min.js","ts":1549937732780,"mimetype":"text/javascript"},"source":"IWZ1bmN0aW9uKHIsZSl7Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzP21vZHVsZS5leHBvcnRzPWV4cG9ydHM9ZShyZXF1aXJlKCIuL2NvcmUubWluIikpOiJmdW5jdGlvbiI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFsiLi9jb3JlLm1pbiJdLGUpOmUoci5DcnlwdG9KUyl9KHRoaXMsZnVuY3Rpb24ocil7cmV0dXJuIGZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShyLGUsdCl7Zm9yKHZhciBuPVtdLGk9MCxvPTA7bzxlO28rKylpZihvJTQpe3ZhciBmPXRbci5jaGFyQ29kZUF0KG8tMSldPDxvJTQqMixjPXRbci5jaGFyQ29kZUF0KG8pXT4+PjYtbyU0KjI7bltpPj4+Ml18PShmfGMpPDwyNC1pJTQqOCxpKyt9cmV0dXJuIGEuY3JlYXRlKG4saSl9dmFyIHQ9cixuPXQubGliLGE9bi5Xb3JkQXJyYXksaT10LmVuYztpLkJhc2U2ND17c3RyaW5naWZ5OmZ1bmN0aW9uKHIpe3ZhciBlPXIud29yZHMsdD1yLnNpZ0J5dGVzLG49dGhpcy5fbWFwO3IuY2xhbXAoKTtmb3IodmFyIGE9W10saT0wO2k8dDtpKz0zKWZvcih2YXIgbz1lW2k+Pj4yXT4+PjI0LWklNCo4JjI1NSxmPWVbaSsxPj4+Ml0+Pj4yNC0oaSsxKSU0KjgmMjU1LGM9ZVtpKzI+Pj4yXT4+PjI0LShpKzIpJTQqOCYyNTUscz1vPDwxNnxmPDw4fGMsaD0wO2g8NCYmaSsuNzUqaDx0O2grKylhLnB1c2gobi5jaGFyQXQocz4+PjYqKDMtaCkmNjMpKTt2YXIgcD1uLmNoYXJBdCg2NCk7aWYocClmb3IoO2EubGVuZ3RoJTQ7KWEucHVzaChwKTtyZXR1cm4gYS5qb2luKCIiKX0scGFyc2U6ZnVuY3Rpb24ocil7dmFyIHQ9ci5sZW5ndGgsbj10aGlzLl9tYXAsYT10aGlzLl9yZXZlcnNlTWFwO2lmKCFhKXthPXRoaXMuX3JldmVyc2VNYXA9W107Zm9yKHZhciBpPTA7aTxuLmxlbmd0aDtpKyspYVtuLmNoYXJDb2RlQXQoaSldPWl9dmFyIG89bi5jaGFyQXQoNjQpO2lmKG8pe3ZhciBmPXIuaW5kZXhPZihvKTtmIT09LTEmJih0PWYpfXJldHVybiBlKHIsdCxhKX0sX21hcDoiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLz0ifX0oKSxyLmVuYy5CYXNlNjR9KTsKLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW5jLWJhc2U2NC5taW4uanMubWFw"},{"meta":{"name":"jszip.min.js","url":"https://cdn.bootcss.com/jszip/3.1.5/jszip.min.js","ts":1549937732821,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"FileSaver.js","url":"https://cdn.bootcss.com/FileSaver.js/1.3.8/FileSaver.js","ts":1549937732791,"mimetype":"text/javascript"},"source":"LyogRmlsZVNhdmVyLmpzCiAqIEEgc2F2ZUFzKCkgRmlsZVNhdmVyIGltcGxlbWVudGF0aW9uLgogKiAxLjMuMgogKiAyMDE2LTA2LTE2IDE4OjI1OjE5CiAqCiAqIEJ5IEVsaSBHcmV5LCBodHRwOi8vZWxpZ3JleS5jb20KICogTGljZW5zZTogTUlUCiAqICAgU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9lbGlncmV5L0ZpbGVTYXZlci5qcy9ibG9iL21hc3Rlci9MSUNFTlNFLm1kCiAqLwoKLypnbG9iYWwgc2VsZiAqLwovKmpzbGludCBiaXR3aXNlOiB0cnVlLCBpbmRlbnQ6IDQsIGxheGJyZWFrOiB0cnVlLCBsYXhjb21tYTogdHJ1ZSwgc21hcnR0YWJzOiB0cnVlLCBwbHVzcGx1czogdHJ1ZSAqLwoKLyohIEBzb3VyY2UgaHR0cDovL3B1cmwuZWxpZ3JleS5jb20vZ2l0aHViL0ZpbGVTYXZlci5qcy9ibG9iL21hc3Rlci9GaWxlU2F2ZXIuanMgKi8KCnZhciBzYXZlQXMgPSBzYXZlQXMgfHwgKGZ1bmN0aW9uKHZpZXcpIHsKCSJ1c2Ugc3RyaWN0IjsKCS8vIElFIDwxMCBpcyBleHBsaWNpdGx5IHVuc3VwcG9ydGVkCglpZiAodHlwZW9mIHZpZXcgPT09ICJ1bmRlZmluZWQiIHx8IHR5cGVvZiBuYXZpZ2F0b3IgIT09ICJ1bmRlZmluZWQiICYmIC9NU0lFIFsxLTldXC4vLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpIHsKCQlyZXR1cm47Cgl9Cgl2YXIKCQkgIGRvYyA9IHZpZXcuZG9jdW1lbnQKCQkgIC8vIG9ubHkgZ2V0IFVSTCB3aGVuIG5lY2Vzc2FyeSBpbiBjYXNlIEJsb2IuanMgaGFzbid0IG92ZXJyaWRkZW4gaXQgeWV0CgkJLCBnZXRfVVJMID0gZnVuY3Rpb24oKSB7CgkJCXJldHVybiB2aWV3LlVSTCB8fCB2aWV3LndlYmtpdFVSTCB8fCB2aWV3OwoJCX0KCQksIHNhdmVfbGluayA9IGRvYy5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiLCAiYSIpCgkJLCBjYW5fdXNlX3NhdmVfbGluayA9ICJkb3dubG9hZCIgaW4gc2F2ZV9saW5rCgkJLCBjbGljayA9IGZ1bmN0aW9uKG5vZGUpIHsKCQkJdmFyIGV2ZW50ID0gbmV3IE1vdXNlRXZlbnQoImNsaWNrIik7CgkJCW5vZGUuZGlzcGF0Y2hFdmVudChldmVudCk7CgkJfQoJCSwgaXNfc2FmYXJpID0gL2NvbnN0cnVjdG9yL2kudGVzdCh2aWV3LkhUTUxFbGVtZW50KSB8fCB2aWV3LnNhZmFyaQoJCSwgaXNfY2hyb21lX2lvcyA9L0NyaU9TXC9bXGRdKy8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KQoJCSwgdGhyb3dfb3V0c2lkZSA9IGZ1bmN0aW9uKGV4KSB7CgkJCSh2aWV3LnNldEltbWVkaWF0ZSB8fCB2aWV3LnNldFRpbWVvdXQpKGZ1bmN0aW9uKCkgewoJCQkJdGhyb3cgZXg7CgkJCX0sIDApOwoJCX0KCQksIGZvcmNlX3NhdmVhYmxlX3R5cGUgPSAiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtIgoJCS8vIHRoZSBCbG9iIEFQSSBpcyBmdW5kYW1lbnRhbGx5IGJyb2tlbiBhcyB0aGVyZSBpcyBubyAiZG93bmxvYWRmaW5pc2hlZCIgZXZlbnQgdG8gc3Vic2NyaWJlIHRvCgkJLCBhcmJpdHJhcnlfcmV2b2tlX3RpbWVvdXQgPSAxMDAwICogNDAgLy8gaW4gbXMKCQksIHJldm9rZSA9IGZ1bmN0aW9uKGZpbGUpIHsKCQkJdmFyIHJldm9rZXIgPSBmdW5jdGlvbigpIHsKCQkJCWlmICh0eXBlb2YgZmlsZSA9PT0gInN0cmluZyIpIHsgLy8gZmlsZSBpcyBhbiBvYmplY3QgVVJMCgkJCQkJZ2V0X1VSTCgpLnJldm9rZU9iamVjdFVSTChmaWxlKTsKCQkJCX0gZWxzZSB7IC8vIGZpbGUgaXMgYSBGaWxlCgkJCQkJZmlsZS5yZW1vdmUoKTsKCQkJCX0KCQkJfTsKCQkJc2V0VGltZW91dChyZXZva2VyLCBhcmJpdHJhcnlfcmV2b2tlX3RpbWVvdXQpOwoJCX0KCQksIGRpc3BhdGNoID0gZnVuY3Rpb24oZmlsZXNhdmVyLCBldmVudF90eXBlcywgZXZlbnQpIHsKCQkJZXZlbnRfdHlwZXMgPSBbXS5jb25jYXQoZXZlbnRfdHlwZXMpOwoJCQl2YXIgaSA9IGV2ZW50X3R5cGVzLmxlbmd0aDsKCQkJd2hpbGUgKGktLSkgewoJCQkJdmFyIGxpc3RlbmVyID0gZmlsZXNhdmVyWyJvbiIgKyBldmVudF90eXBlc1tpXV07CgkJCQlpZiAodHlwZW9mIGxpc3RlbmVyID09PSAiZnVuY3Rpb24iKSB7CgkJCQkJdHJ5IHsKCQkJCQkJbGlzdGVuZXIuY2FsbChmaWxlc2F2ZXIsIGV2ZW50IHx8IGZpbGVzYXZlcik7CgkJCQkJfSBjYXRjaCAoZXgpIHsKCQkJCQkJdGhyb3dfb3V0c2lkZShleCk7CgkJCQkJfQoJCQkJfQoJCQl9CgkJfQoJCSwgYXV0b19ib20gPSBmdW5jdGlvbihibG9iKSB7CgkJCS8vIHByZXBlbmQgQk9NIGZvciBVVEYtOCBYTUwgYW5kIHRleHQvKiB0eXBlcyAoaW5jbHVkaW5nIEhUTUwpCgkJCS8vIG5vdGU6IHlvdXIgYnJvd3NlciB3aWxsIGF1dG9tYXRpY2FsbHkgY29udmVydCBVVEYtMTYgVStGRUZGIHRvIEVGIEJCIEJGCgkJCWlmICgvXlxzKig/OnRleHRcL1xTKnxhcHBsaWNhdGlvblwveG1sfFxTKlwvXFMqXCt4bWwpXHMqOy4qY2hhcnNldFxzKj1ccyp1dGYtOC9pLnRlc3QoYmxvYi50eXBlKSkgewoJCQkJcmV0dXJuIG5ldyBCbG9iKFtTdHJpbmcuZnJvbUNoYXJDb2RlKDB4RkVGRiksIGJsb2JdLCB7dHlwZTogYmxvYi50eXBlfSk7CgkJCX0KCQkJcmV0dXJuIGJsb2I7CgkJfQoJCSwgRmlsZVNhdmVyID0gZnVuY3Rpb24oYmxvYiwgbmFtZSwgbm9fYXV0b19ib20pIHsKCQkJaWYgKCFub19hdXRvX2JvbSkgewoJCQkJYmxvYiA9IGF1dG9fYm9tKGJsb2IpOwoJCQl9CgkJCS8vIEZpcnN0IHRyeSBhLmRvd25sb2FkLCB0aGVuIHdlYiBmaWxlc3lzdGVtLCB0aGVuIG9iamVjdCBVUkxzCgkJCXZhcgoJCQkJICBmaWxlc2F2ZXIgPSB0aGlzCgkJCQksIHR5cGUgPSBibG9iLnR5cGUKCQkJCSwgZm9yY2UgPSB0eXBlID09PSBmb3JjZV9zYXZlYWJsZV90eXBlCgkJCQksIG9iamVjdF91cmwKCQkJCSwgZGlzcGF0Y2hfYWxsID0gZnVuY3Rpb24oKSB7CgkJCQkJZGlzcGF0Y2goZmlsZXNhdmVyLCAid3JpdGVzdGFydCBwcm9ncmVzcyB3cml0ZSB3cml0ZWVuZCIuc3BsaXQoIiAiKSk7CgkJCQl9CgkJCQkvLyBvbiBhbnkgZmlsZXN5cyBlcnJvcnMgcmV2ZXJ0IHRvIHNhdmluZyB3aXRoIG9iamVjdCBVUkxzCgkJCQksIGZzX2Vycm9yID0gZnVuY3Rpb24oKSB7CgkJCQkJaWYgKChpc19jaHJvbWVfaW9zIHx8IChmb3JjZSAmJiBpc19zYWZhcmkpKSAmJiB2aWV3LkZpbGVSZWFkZXIpIHsKCQkJCQkJLy8gU2FmYXJpIGRvZXNuJ3QgYWxsb3cgZG93bmxvYWRpbmcgb2YgYmxvYiB1cmxzCgkJCQkJCXZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwoJCQkJCQlyZWFkZXIub25sb2FkZW5kID0gZnVuY3Rpb24oKSB7CgkJCQkJCQl2YXIgdXJsID0gaXNfY2hyb21lX2lvcyA/IHJlYWRlci5yZXN1bHQgOiByZWFkZXIucmVzdWx0LnJlcGxhY2UoL15kYXRhOlteO10qOy8sICdkYXRhOmF0dGFjaG1lbnQvZmlsZTsnKTsKCQkJCQkJCXZhciBwb3B1cCA9IHZpZXcub3Blbih1cmwsICdfYmxhbmsnKTsKCQkJCQkJCWlmKCFwb3B1cCkgdmlldy5sb2NhdGlvbi5ocmVmID0gdXJsOwoJCQkJCQkJdXJsPXVuZGVmaW5lZDsgLy8gcmVsZWFzZSByZWZlcmVuY2UgYmVmb3JlIGRpc3BhdGNoaW5nCgkJCQkJCQlmaWxlc2F2ZXIucmVhZHlTdGF0ZSA9IGZpbGVzYXZlci5ET05FOwoJCQkJCQkJZGlzcGF0Y2hfYWxsKCk7CgkJCQkJCX07CgkJCQkJCXJlYWRlci5yZWFkQXNEYXRhVVJMKGJsb2IpOwoJCQkJCQlmaWxlc2F2ZXIucmVhZHlTdGF0ZSA9IGZpbGVzYXZlci5JTklUOwoJCQkJCQlyZXR1cm47CgkJCQkJfQoJCQkJCS8vIGRvbid0IGNyZWF0ZSBtb3JlIG9iamVjdCBVUkxzIHRoYW4gbmVlZGVkCgkJCQkJaWYgKCFvYmplY3RfdXJsKSB7CgkJCQkJCW9iamVjdF91cmwgPSBnZXRfVVJMKCkuY3JlYXRlT2JqZWN0VVJMKGJsb2IpOwoJCQkJCX0KCQkJCQlpZiAoZm9yY2UpIHsKCQkJCQkJdmlldy5sb2NhdGlvbi5ocmVmID0gb2JqZWN0X3VybDsKCQkJCQl9IGVsc2UgewoJCQkJCQl2YXIgb3BlbmVkID0gdmlldy5vcGVuKG9iamVjdF91cmwsICJfYmxhbmsiKTsKCQkJCQkJaWYgKCFvcGVuZWQpIHsKCQkJCQkJCS8vIEFwcGxlIGRvZXMgbm90IGFsbG93IHdpbmRvdy5vcGVuLCBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL2xpYnJhcnkvc2FmYXJpL2RvY3VtZW50YXRpb24vVG9vbHMvQ29uY2VwdHVhbC9TYWZhcmlFeHRlbnNpb25HdWlkZS9Xb3JraW5nd2l0aFdpbmRvd3NhbmRUYWJzL1dvcmtpbmd3aXRoV2luZG93c2FuZFRhYnMuaHRtbAoJCQkJCQkJdmlldy5sb2NhdGlvbi5ocmVmID0gb2JqZWN0X3VybDsKCQkJCQkJfQoJCQkJCX0KCQkJCQlmaWxlc2F2ZXIucmVhZHlTdGF0ZSA9IGZpbGVzYXZlci5ET05FOwoJCQkJCWRpc3BhdGNoX2FsbCgpOwoJCQkJCXJldm9rZShvYmplY3RfdXJsKTsKCQkJCX0KCQkJOwoJCQlmaWxlc2F2ZXIucmVhZHlTdGF0ZSA9IGZpbGVzYXZlci5JTklUOwoKCQkJaWYgKGNhbl91c2Vfc2F2ZV9saW5rKSB7CgkJCQlvYmplY3RfdXJsID0gZ2V0X1VSTCgpLmNyZWF0ZU9iamVjdFVSTChibG9iKTsKCQkJCXNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CgkJCQkJc2F2ZV9saW5rLmhyZWYgPSBvYmplY3RfdXJsOwoJCQkJCXNhdmVfbGluay5kb3dubG9hZCA9IG5hbWU7CgkJCQkJY2xpY2soc2F2ZV9saW5rKTsKCQkJCQlkaXNwYXRjaF9hbGwoKTsKCQkJCQlyZXZva2Uob2JqZWN0X3VybCk7CgkJCQkJZmlsZXNhdmVyLnJlYWR5U3RhdGUgPSBmaWxlc2F2ZXIuRE9ORTsKCQkJCX0pOwoJCQkJcmV0dXJuOwoJCQl9CgoJCQlmc19lcnJvcigpOwoJCX0KCQksIEZTX3Byb3RvID0gRmlsZVNhdmVyLnByb3RvdHlwZQoJCSwgc2F2ZUFzID0gZnVuY3Rpb24oYmxvYiwgbmFtZSwgbm9fYXV0b19ib20pIHsKCQkJcmV0dXJuIG5ldyBGaWxlU2F2ZXIoYmxvYiwgbmFtZSB8fCBibG9iLm5hbWUgfHwgImRvd25sb2FkIiwgbm9fYXV0b19ib20pOwoJCX0KCTsKCS8vIElFIDEwKyAobmF0aXZlIHNhdmVBcykKCWlmICh0eXBlb2YgbmF2aWdhdG9yICE9PSAidW5kZWZpbmVkIiAmJiBuYXZpZ2F0b3IubXNTYXZlT3JPcGVuQmxvYikgewoJCXJldHVybiBmdW5jdGlvbihibG9iLCBuYW1lLCBub19hdXRvX2JvbSkgewoJCQluYW1lID0gbmFtZSB8fCBibG9iLm5hbWUgfHwgImRvd25sb2FkIjsKCgkJCWlmICghbm9fYXV0b19ib20pIHsKCQkJCWJsb2IgPSBhdXRvX2JvbShibG9iKTsKCQkJfQoJCQlyZXR1cm4gbmF2aWdhdG9yLm1zU2F2ZU9yT3BlbkJsb2IoYmxvYiwgbmFtZSk7CgkJfTsKCX0KCglGU19wcm90by5hYm9ydCA9IGZ1bmN0aW9uKCl7fTsKCUZTX3Byb3RvLnJlYWR5U3RhdGUgPSBGU19wcm90by5JTklUID0gMDsKCUZTX3Byb3RvLldSSVRJTkcgPSAxOwoJRlNfcHJvdG8uRE9ORSA9IDI7CgoJRlNfcHJvdG8uZXJyb3IgPQoJRlNfcHJvdG8ub253cml0ZXN0YXJ0ID0KCUZTX3Byb3RvLm9ucHJvZ3Jlc3MgPQoJRlNfcHJvdG8ub253cml0ZSA9CglGU19wcm90by5vbmFib3J0ID0KCUZTX3Byb3RvLm9uZXJyb3IgPQoJRlNfcHJvdG8ub253cml0ZWVuZCA9CgkJbnVsbDsKCglyZXR1cm4gc2F2ZUFzOwp9KAoJICAgdHlwZW9mIHNlbGYgIT09ICJ1bmRlZmluZWQiICYmIHNlbGYKCXx8IHR5cGVvZiB3aW5kb3cgIT09ICJ1bmRlZmluZWQiICYmIHdpbmRvdwoJfHwgdGhpcy5jb250ZW50CikpOwovLyBgc2VsZmAgaXMgdW5kZWZpbmVkIGluIEZpcmVmb3ggZm9yIEFuZHJvaWQgY29udGVudCBzY3JpcHQgY29udGV4dAovLyB3aGlsZSBgdGhpc2AgaXMgbnNJQ29udGVudEZyYW1lTWVzc2FnZU1hbmFnZXIKLy8gd2l0aCBhbiBhdHRyaWJ1dGUgYGNvbnRlbnRgIHRoYXQgY29ycmVzcG9uZHMgdG8gdGhlIHdpbmRvdwoKaWYgKHR5cGVvZiBtb2R1bGUgIT09ICJ1bmRlZmluZWQiICYmIG1vZHVsZS5leHBvcnRzKSB7CiAgbW9kdWxlLmV4cG9ydHMuc2F2ZUFzID0gc2F2ZUFzOwp9IGVsc2UgaWYgKCh0eXBlb2YgZGVmaW5lICE9PSAidW5kZWZpbmVkIiAmJiBkZWZpbmUgIT09IG51bGwpICYmIChkZWZpbmUuYW1kICE9PSBudWxsKSkgewogIGRlZmluZSgiRmlsZVNhdmVyLmpzIiwgZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gc2F2ZUFzOwogIH0pOwp9Cg=="}]},{"name":"QQ音乐付费无损音乐免费下载","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://y.qq.com/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1549937764196,"data":{}},"enabled":true,"position":23,"file_url":"https://greasyfork.org/scripts/370308-qq%E9%9F%B3%E4%B9%90%E4%BB%98%E8%B4%B9%E6%97%A0%E6%8D%9F%E9%9F%B3%E4%B9%90%E5%85%8D%E8%B4%B9%E4%B8%8B%E8%BD%BD/code/QQ%E9%9F%B3%E4%B9%90%E4%BB%98%E8%B4%B9%E6%97%A0%E6%8D%9F%E9%9F%B3%E4%B9%90%E5%85%8D%E8%B4%B9%E4%B8%8B%E8%BD%BD.user.js","uuid":"ff3ddee7-db27-4fbc-87c3-ebdffa3f676c","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBRUemfs+S5kOS7mOi0ueaXoOaNn+mfs+S5kOWFjei0ueS4i+i9vQovLyBAdmVyc2lvbiAgICAgIDEuMC41Ci8vIEBtYXRjaCAgICAgICAgKjovL3kucXEuY29tLyoKLy8gQGRlc2NyaXB0aW9uICDmj5DkvptRUemfs+S5kOS7mOi0ueatjOabsu+8jDMyMEvkuIvovb3jgIHml6DmjZ9GTEFD5LiL6L2944CB5peg5o2fQVBF5LiL6L2944CB5q2M6K+N5LiL6L2977yM5Y+v5Lul6Kej5p6Q5q2M5Y2V5YiX6KGo44CB5q2M5omL5q2M5Y2V44CB5YiG57G75q2M5Y2V44CB5LiT6L6R5YiX6KGoCi8vIEBncmFudCAgICAgICAgdW5zYWZlV2luZG93Ci8vIEByZXF1aXJlICAgICAgaHR0cDovL2Nkbi5ib290Y3NzLmNvbS9qcXVlcnkvMy4zLjEvanF1ZXJ5Lm1pbi5qcwovLyBAcnVuLWF0ICAgICAgIGRvY3VtZW50LWVuZAovLyBAbGljZW5zZSAgICAgIE1JVAovLyBAbmFtZXNwYWNlICAgIGh0dHA6Ly90b29sLmxpdW1pbmd5ZS5jbi9xcXdzLwovLyA9PS9Vc2VyU2NyaXB0PT0KKGZ1bmN0aW9uICgpIHsKCSd1c2Ugc3RyaWN0JzsKCXZhciBTaXRlVXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWY7Cgl2YXIgUmVBID0gL3lcLnFxXC5jb21cL25cL3lxcVwvKHNvbmd8cGxheXNxdWFyZXxhbGJ1bXxwbGF5bGlzdHxzaW5nZXIpL2k7Cgl2YXIgUmVCID0gL3lcLnFxXC5jb21cL3BvcnRhbFwvcGxheWVyLmh0bWwvaTsKCXZhciBvcGVuVXJsID0gZnVuY3Rpb24gKGEpewoJCXdpbmRvdy5vcGVuKCJodHRwOi8vdG9vbC5saXVtaW5neWUuY24vbXVzaWMvP25hbWU9IiArIGVuY29kZVVSSUNvbXBvbmVudChhKSk7Cgl9CglpZiAoUmVBLnRlc3QoU2l0ZVVybCkpIHsKCQl2YXIgJG5hbWUgPSAkKCcuZGF0YV9fbmFtZV90eHQnKTsKCQl2YXIgQnRuQSA9ICQoJzxhIGhyZWY9ImphdmFzY3JpcHQ6OyIgY2xhc3M9Im1vZF9idG5fZ3JlZW4iPjxpIGNsYXNzPSJtb2RfYnRuX2dyZWVuX19pY29uX3BsYXkiPjwvaT5WSVDop6PmnpA8L2E+Jyk7CgkJdmFyIEJ0bkIgPSAkKCc8YSBocmVmPSJqYXZhc2NyaXB0OjsiIGNsYXNzPSJtb2RfYnRuIj48L2k+5q2M5ZCN5pCc57SiPC9hPicpOwoJCSRuYW1lLnBhcmVudCgnLmRhdGFfX25hbWUnKS5hZnRlcihCdG5BLEJ0bkIpOwoJCXZhciBNdXNpY05hbWUgPSAkbmFtZS50ZXh0KCk7CgkJJCgnLmRhdGFfX2FjdGlvbnMnKS5jc3MoJ2JvdHRvbScsICctMTBweCcpOwoJCUJ0bkEuY2xpY2soZnVuY3Rpb24gKCkgewoJCQlvcGVuVXJsKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTsKCQl9KQoJCUJ0bkIuY2xpY2soZnVuY3Rpb24gKCkgewoJCQlvcGVuVXJsKE11c2ljTmFtZS5yZXBsYWNlKC9bXHJcbl0vZywgIiIpLnJlcGxhY2UoL2Zvci9pLCAiZiBvIHIiKSk7CgkJfSkKCQkvLyDliKTmlq3mmK/lkKbkuIvmnrYKCQl2YXIgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpewoJCQlpZigkKCcuZGF0YV9fbmFtZV90eHQnKS5sZW5ndGggPT0gMCl7CgkJCQljbGVhckludGVydmFsKGludGVydmFsKTsKCQkJCXZhciBCdG5BID0gJCgnPGEgaHJlZj0iamF2YXNjcmlwdDo7IiBjbGFzcz0ibW9kX2J0bl9ncmVlbiI+PGkgY2xhc3M9Im1vZF9idG5fZ3JlZW5fX2ljb25fcGxheSI+PC9pPuino+aekOivpeS4i+aetuatjOabsjwvYT4nKTsKCQkJCSQoJy5ub25lX3R4dF9fc3ltYm9sJykuYWZ0ZXIoQnRuQSk7CgkJCQlCdG5BLmNsaWNrKGZ1bmN0aW9uICgpIHsKCQkJCQlvcGVuVXJsKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTsKCQkJCX0pCgkJCQkKCQkJfQoJCX0sMTAwMCk7CgoJfWVsc2UgaWYgKFJlQi50ZXN0KFNpdGVVcmwpKSB7CgkJdmFyIEJ0bkEgPSAkKCc8YSBzdHlsZT0ibWFyZ2luLXRvcDotMTBweDsiIGhyZWY9ImphdmFzY3JpcHQ6OyIgY2xhc3M9Im1vZF9idG4iPlZJUOino+aekDwvYT4nKTsKCQl2YXIgQnRuQiA9ICQoJzxhIHN0eWxlPSJtYXJnaW4tdG9wOi0xMHB4OyIgaHJlZj0iamF2YXNjcmlwdDo7IiBjbGFzcz0ibW9kX2J0biI+5q2M5ZCN5pCc57SiPC9hPicpOwoJCSQoJy5tb2Rfc29uZ2xpc3RfdG9vbGJhcicpLmFmdGVyKEJ0bkEsQnRuQik7CgkJQnRuQS5jbGljayhmdW5jdGlvbiAoKSB7CgkJCW9wZW5VcmwoJCgnLm1vZF9idG5fY29tbWVudCcpLmF0dHIoJ2hyZWYnKS5yZXBsYWNlKCcjY29tbWVudF9ib3gnLCAnJykpOwoJCX0pCgkJQnRuQi5jbGljayhmdW5jdGlvbiAoKSB7CgkJCW9wZW5VcmwoJCgnLmpzX3NvbmcnKS50ZXh0KCkucmVwbGFjZSgvW1xyXG5dL2csICIiKS5yZXBsYWNlKC9mb3IvaSwgImYgbyByIikpOwoJCX0pCgl9Cn0pKCk7","requires":[{"meta":{"name":"jquery.min.js","url":"http://cdn.bootcss.com/jquery/3.3.1/jquery.min.js","ts":1549937764338,"mimetype":"text/javascript"},"source":""}]}],"settings":{"script_blacklist_server":[{"rules":["/https?:\\/\\/userscripts\\.org\\/scripts\\/(source|version)/(102614).*\\.user\\.js/"],"severity":"2"},{"name":"SaveFrom.net helper","reason":"Shows advertisements","rules":["/https?:\\/\\/sf-addon\\.com\\/.*\\/.*\\.user\\.js/","/https?:\\/\\/.*\\.sf-helper\\.com\\/.*\\.user\\.js/"],"severity":"3"}]}}